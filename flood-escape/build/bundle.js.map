{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/game/Terrain.ts","../../src/game/utils.ts","../../src/game/Tile.ts","../../src/game/Game.ts","../../src/game/builtin/game-generators/MazeTerrainGenerator.ts","../../src/game/builtin/structures/CityStructure.ts","../../src/game/builtin/structures/RocketStructure.ts","../../src/game/builtin/structures/WaterStructure.ts","../../src/game/builtin/game-generators/SimpleRandomStructureGenerator.ts","../../src/game/builtin/game-generators/SimpleRandomTerrainGenerator.ts","../../src/game/builtin/game-generators/WallTerrainGenerator.ts","../../src/game/builtin/manifest.ts","../../src/values.ts","../../src/components/parameter-patterns/NumberParameterPatternInput.svelte","../../src/components/widgets/Row.svelte","../../src/components/widgets/Switch.svelte","../../src/components/parameter-patterns/BooleanParameterPatternInput.svelte","../../src/components/ParameterPatternRow.svelte","../../src/components/widgets/Spacer.svelte","../../src/components/MenuPage.svelte","../../src/game/games.ts","../../src/game/SimpleEventDispatcher.ts","../../src/game/builtin/game-renderers/Canvas2dRenderer.ts","../../src/game/GameRenderer.ts","../../src/components/widgets/ProgressBar.svelte","../../src/components/structure-infos/CityStructureInfo.svelte","../../src/components/structure-infos/RocketStructureInfo.svelte","../../src/components/structure-infos/WaterSourceStructureInfo.svelte","../../src/components/widgets/Card.svelte","../../src/components/TileInfo.svelte","../../src/components/widgets/List.svelte","../../src/components/GamePage.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export class Terrain {\r\n    constructor(altitude, water = 0) {\r\n        this.altitude = altitude;\r\n        this.water = water;\r\n    }\r\n    get level() {\r\n        return this.altitude + this.water;\r\n    }\r\n}\r\n","// 构造一个长度为length的数组，元素由genElem根据index产生\r\nexport function array(length, genElem) { return Array.from(Array(length), (_, i) => genElem(i)); }\r\n// 生成一个[min, max)的随机数\r\nexport function rand(min, max) { return min + Math.random() * (max - min); }\r\n// 生成一个[min, max)的随机整数\r\nexport function randInt(min, max) { return Math.floor(rand(min, max)); }\r\n// 从数组arr中随机选择一个元素\r\nexport function randOne(arr) { return arr[randInt(0, arr.length)]; }\r\n// 从数组arr中随机选择count个元素，若数组元素个数小于count，则只返回该数组的乱序\r\nexport function randOnes(arr, count) {\r\n    const cpy = arr.slice();\r\n    for (let i = 0; i < cpy.length && i < count; i++) {\r\n        const j = randInt(i, cpy.length);\r\n        const tmp = cpy[i];\r\n        cpy[i] = cpy[j];\r\n        cpy[j] = tmp;\r\n    }\r\n    return cpy.slice(0, count);\r\n}\r\n// 限定数值在[min, max]范围内\r\nexport function constraints(value, min, max) { return Math.min(Math.max(min, value), max); }\r\n// 积算两个坐标的距离\r\nexport function distance(tile1, tile2) { return Math.sqrt(Math.pow(tile1.x - tile2.x, 2) + Math.pow(tile1.y - tile2.y, 2)); }\r\n// 判断一个数组或字符串内是否存在某元素\r\nexport function contains(arr, elem) { return arr.indexOf(elem) >= 0; }\r\n// 将一个字符串str重复count遍，并用joiner连接\r\nexport function repeat(str, count, joiner = '') { return Array(Math.floor(count)).fill(str).join(joiner); }\r\n// 缩短数字，目前只是剪短其小数点后的位数\r\nexport function shorten(num) { return num.toFixed(2); }\r\n// 将数字转为百分值\r\nexport function toPercents(num) { return (num * 100).toFixed(1) + '%'; }\r\n// 根据给出的items，绘制进度条，长度为len，剩余空白会用filler填充\r\nexport function makeGraph(items, len, filler) {\r\n    const res = [];\r\n    let acc = 0;\r\n    for (const [str, ratio] of items.filter((it) => !!it)) {\r\n        if (ratio > 0) {\r\n            res.push(repeat(str, Math.floor(Math.max(1, len * ratio))));\r\n        }\r\n        acc += ratio;\r\n    }\r\n    // res.push(repeat(filler, floor(len * (1 - acc))));\r\n    return res.join('').padEnd(len, filler);\r\n}\r\n// 将数组洗牌\r\nexport function shuffle(arr) {\r\n    return randOnes(arr, arr.length);\r\n}\r\n","import { Terrain } from \"./Terrain\";\r\nimport { constraints } from \"./utils\";\r\nexport class Tile {\r\n    constructor(game, x, y) {\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.terrain = new Terrain(0);\r\n        this.structure = null;\r\n    }\r\n    tick() {\r\n        if (this.structure) {\r\n            this.structure.tick(this);\r\n        }\r\n    }\r\n    evenify() {\r\n        const relativeTiles = [this.left, this.right, this.up, this.down].filter(it => !!it);\r\n        if (relativeTiles.length === 0)\r\n            return;\r\n        relativeTiles.sort((a, b) => a.terrain.level - b.terrain.level);\r\n        const costWater = constraints(this.terrain.level - relativeTiles[0].terrain.level, 0, this.terrain.water);\r\n        let restWater = costWater;\r\n        const finalDeltaWaters = relativeTiles.map(() => 0);\r\n        let thisDeltaWater = 0;\r\n        for (let i = 0; i < relativeTiles.length && restWater > 0; i++) {\r\n            const tile = relativeTiles[i];\r\n            const nextTile = relativeTiles[i + 1];\r\n            let p = 0;\r\n            if (nextTile) {\r\n                const gap = nextTile.terrain.level - tile.terrain.level;\r\n                const water = Math.min(gap * (i + 2), restWater);\r\n                restWater -= water;\r\n                p = water / (i + 2);\r\n            }\r\n            else {\r\n                p = restWater / (i + 2);\r\n                restWater = 0;\r\n            }\r\n            for (let j = 0; j <= i; j++) {\r\n                finalDeltaWaters[j] += p;\r\n            }\r\n            thisDeltaWater += p;\r\n        }\r\n        relativeTiles.forEach((tile, i) => tile.terrain.water += finalDeltaWaters[i]);\r\n        this.terrain.water = this.terrain.water - costWater + thisDeltaWater;\r\n    }\r\n    get left() { return this.game.getTile(this.x - 1, this.y); }\r\n    get right() { return this.game.getTile(this.x + 1, this.y); }\r\n    get up() { return this.game.getTile(this.x, this.y - 1); }\r\n    get down() { return this.game.getTile(this.x, this.y + 1); }\r\n}\r\n","import { Tile } from \"./Tile\";\r\nexport class Game {\r\n    constructor(width, height) {\r\n        this.pid = null;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.status = 'waiting';\r\n        this.ticks = 0;\r\n        this.tiles = Array.from(Array(width * height), (_, i) => new Tile(this, i % width, Math.floor(i / width)));\r\n        // this.TEST_tickCounter = 0;\r\n    }\r\n    getTile(x, y) {\r\n        return this.contains(x, y) ? this.tiles[y * this.width + x] : null;\r\n    }\r\n    contains(x, y) {\r\n        return (x >= 0 && x < this.width && y >= 0 && y < this.height);\r\n    }\r\n    tick() {\r\n        if (this.status !== 'running')\r\n            return;\r\n        this.ticks++;\r\n        this.tiles.forEach(tile => tile.tick());\r\n        this.tiles.forEach(tile => tile.evenify());\r\n    }\r\n    initialize(initializer) {\r\n        initializer(this);\r\n    }\r\n    start(period) {\r\n        if (this.pid !== null)\r\n            return;\r\n        this.pid = setInterval(this.tick.bind(this), period);\r\n    }\r\n    stop() {\r\n        if (this.pid === null)\r\n            return;\r\n        clearInterval(this.pid);\r\n        this.pid = null;\r\n    }\r\n}\r\n","import { array, constraints, randInt, shuffle } from \"../../utils\";\r\nconst DIRECTIONS = [\r\n    [0, -2],\r\n    [0, 2],\r\n    [-2, 0],\r\n    [2, 0],\r\n];\r\nexport class MazeTerrainGenerator {\r\n    generate(game) {\r\n        this.setupGrid(game);\r\n        game.tiles.forEach(({ x, y, terrain }) => (terrain.altitude = this.getGridValueAt(x, y)));\r\n        this.clearGrid();\r\n    }\r\n    setupGrid(game) {\r\n        const startX = randInt(0, game.width);\r\n        const startY = randInt(0, game.height);\r\n        const nodes = array(game.height, y => array(game.width, x => ({\r\n            x, y,\r\n            visited: false,\r\n            nexts: [],\r\n        })));\r\n        let queue = [[[startX, startY], null]];\r\n        while (queue.length > 0) {\r\n            queue = shuffle(queue);\r\n            const [[x, y], prior] = queue.shift();\r\n            if (!game.contains(x, y))\r\n                continue;\r\n            const node = nodes[y][x];\r\n            if (!node || node.visited)\r\n                continue;\r\n            node.visited = true;\r\n            if (prior) {\r\n                prior.nexts.push(node);\r\n                const { x: px, y: py } = prior;\r\n                if (px === x) {\r\n                    const mid = nodes[Math.round((y + py) / 2)][x].visited = true;\r\n                }\r\n                else if (py === y) {\r\n                    const mid = nodes[y][Math.round((x + px) / 2)].visited = true;\r\n                }\r\n            }\r\n            shuffle(DIRECTIONS).forEach(([dx, dy]) => queue.push([[x + dx, y + dy], node]));\r\n        }\r\n        const grid = array(game.height, y => array(game.width, x => {\r\n            const prev = game.getTile(x, y).terrain.altitude;\r\n            return nodes[y][x].visited ? constraints(Math.floor(prev / 2), 1, CONFIG.maxWaterLevel) : prev;\r\n        }));\r\n        this.grid = grid;\r\n    }\r\n    getGridValueAt(x, y) {\r\n        return this.grid[y][x];\r\n    }\r\n    clearGrid() {\r\n        this.grid = null;\r\n    }\r\n}\r\n","import { constraints, distance } from \"../../utils\";\r\n// export const DEFAULT_CITY_STRUCTURE_PARAMETERS = {\r\n// };\r\nexport class CityStructure {\r\n    constructor(parameters) {\r\n        this.genEnergyPerTick = parameters.genEnergyPerTick;\r\n        this.transportSpeed = parameters.transportSpeed;\r\n        this.transportPeriodTick = parameters.transportPeriodTick;\r\n        this.transportEnergy = parameters.transportEnergy;\r\n        this.activeValve = parameters.activeValve;\r\n        this.maxEnergy = parameters.maxEnergy;\r\n        this.energy = parameters.energy;\r\n        this.active = parameters.active;\r\n        this.ruined = parameters.ruined;\r\n        this.transportationLines = [];\r\n    }\r\n    get id() { return 'city'; }\r\n    changeEnergy(deltaEnergy) {\r\n        this.energy = constraints(this.energy + deltaEnergy, 0, this.maxEnergy);\r\n    }\r\n    tick(tile) {\r\n        if (tile.terrain.water > 0) {\r\n            this.ruined = true;\r\n        }\r\n        if (this.ruined)\r\n            return;\r\n        if (!this.active) {\r\n            if (this.energy < this.activeValve)\r\n                return;\r\n            this.changeEnergy(-this.activeValve);\r\n            this.active = true;\r\n        }\r\n        for (const { target, pipe } of this.transportationLines) {\r\n            const dist = distance(tile, target);\r\n            for (let i = 0; i < pipe.length; i++) {\r\n                const transportation = pipe[i];\r\n                transportation.progress += this.transportSpeed;\r\n                // console.log(`${transportation.progress}/${dist}`);\r\n                if (transportation.progress >= dist) {\r\n                    pipe.splice(i, 1);\r\n                    target.structure.changeEnergy(transportation.energy);\r\n                }\r\n            }\r\n        }\r\n        if (tile.game.ticks % this.transportPeriodTick === 0 && this.transportationLines.length > 0) {\r\n            const lineCount = this.transportationLines.length;\r\n            const totalSentEnergy = constraints(this.transportEnergy * lineCount, 0, this.energy);\r\n            this.changeEnergy(-totalSentEnergy);\r\n            const p = totalSentEnergy / lineCount;\r\n            this.transportationLines.forEach(line => this.transport(line.target, p));\r\n        }\r\n        this.changeEnergy(this.genEnergyPerTick * (1 + 0.5 * (this.energy / this.maxEnergy)));\r\n    }\r\n    addTransportLine(target, source) {\r\n        if (!this.hasTransportLine(target)) {\r\n            const dist = distance(source, target);\r\n            const cost = CONFIG.lineCost * dist;\r\n            if (this.energy < cost)\r\n                return false;\r\n            this.changeEnergy(-cost);\r\n            const line = { target, pipe: [] };\r\n            this.transportationLines.push(line);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    removeTransportLine(target) {\r\n        const index = this.transportationLines.findIndex(it => it.target === target);\r\n        if (index >= 0) {\r\n            this.transportationLines.splice(index, 1);\r\n        }\r\n    }\r\n    hasTransportLine(target) {\r\n        const index = this.transportationLines.findIndex(it => it.target === target);\r\n        return index >= 0;\r\n    }\r\n    transport(target, energy) {\r\n        const transportation = { energy, progress: 0 };\r\n        const line = this.transportationLines.find(line => line.target === target);\r\n        if (!line)\r\n            return;\r\n        line.pipe.push(transportation);\r\n    }\r\n}\r\n","import { constraints } from \"../../utils\";\r\nexport class RocketStructure {\r\n    constructor(parameters) {\r\n        this.targetEnergy = parameters.targetEnergy;\r\n        this.energy = parameters.energy;\r\n        this.ruined = parameters.ruined;\r\n    }\r\n    get id() { return 'rocket'; }\r\n    changeEnergy(deltaEnergy) {\r\n        this.energy = constraints(this.energy + deltaEnergy, 0, this.targetEnergy);\r\n    }\r\n    tick(tile) {\r\n        if (tile.terrain.water > 0) {\r\n            this.ruined = true;\r\n        }\r\n        if (this.ruined) {\r\n            tile.game.status = 'failed';\r\n            window.alert(\"Rocket is ruined, YOU LOSE!\");\r\n        }\r\n        else if (this.energy >= this.targetEnergy) {\r\n            tile.game.status = 'succeed';\r\n            window.alert(\"Rocket launched, YOU WIN!\");\r\n        }\r\n    }\r\n}\r\n","import { constraints } from \"../../utils\";\r\nexport class WaterSourceStructure {\r\n    constructor(parameters) {\r\n        this.speed = parameters.speed;\r\n    }\r\n    get id() { return 'water-source'; }\r\n    tick(tile) {\r\n        tile.terrain.water = constraints(tile.terrain.water + this.speed, 0, CONFIG.maxWaterLevel - tile.terrain.altitude);\r\n    }\r\n}\r\n","import { rand, randInt, randOne, randOnes } from \"../../utils\";\r\nimport { CityStructure } from \"../structures/CityStructure\";\r\nimport { RocketStructure } from \"../structures/RocketStructure\";\r\nimport { WaterSourceStructure } from \"../structures/WaterStructure\";\r\nexport class SimpleRandomStructureGenerator {\r\n    constructor(parameters) {\r\n        this.parameters = parameters;\r\n    }\r\n    generate(game) {\r\n        const { maxWaterLevel, initWaterSourceCount, initCityCount } = this.parameters;\r\n        // 在低地势生成水源\r\n        randOnes(game.tiles.filter(t => t.terrain.altitude < 0.25 * maxWaterLevel), initWaterSourceCount)\r\n            .forEach(t => t.structure = new WaterSourceStructure({ speed: 0.3 }));\r\n        // 在最高地生成火箭\r\n        const tilesDescent = game.tiles.slice().sort((a, b) => a.terrain.altitude - b.terrain.altitude).reverse();\r\n        const rocketTile = randOne(tilesDescent.filter(t => t.terrain.altitude >= tilesDescent[0].terrain.altitude && !t.structure));\r\n        rocketTile.structure = new RocketStructure({ targetEnergy: 5000, energy: 0, ruined: false });\r\n        // 在中上地势生成城市\r\n        const cityTiles = randOnes(game.tiles.filter((t) => t.terrain.altitude > 0.5 * maxWaterLevel && !t.structure), initCityCount);\r\n        cityTiles.forEach(t => t.structure = new CityStructure({\r\n            genEnergyPerTick: rand(2, 5),\r\n            transportSpeed: rand(0.1, 0.2),\r\n            transportPeriodTick: randInt(12, 18),\r\n            transportEnergy: randInt(20, 30),\r\n            activeValve: randInt(600, 1000),\r\n            maxEnergy: randInt(4000, 8000),\r\n            energy: 0,\r\n            active: false,\r\n            ruined: false,\r\n        }));\r\n        randOnes(cityTiles, 1).forEach(t => t.structure.active = true);\r\n    }\r\n}\r\n","import { array, rand } from \"../../utils\";\r\nexport class SimpleRandomTerrainGenerator {\r\n    constructor(parameters) {\r\n        this.parameters = parameters;\r\n    }\r\n    generate(game) {\r\n        this.setupGrid(game.width, game.height);\r\n        game.tiles.forEach(({ x, y, terrain }) => (terrain.altitude = this.getGridValueAt(x, y)));\r\n        this.clearGrid();\r\n    }\r\n    setupGrid(gameMapWidth, gameMapHeight) {\r\n        const { initGridSize, initMaxWaterLevel } = this.parameters;\r\n        const gridWidth = Math.floor(gameMapWidth / initGridSize) + 2;\r\n        const gridheight = Math.floor(gameMapHeight / initGridSize) + 2;\r\n        this.grid = array(gridheight, () => array(gridWidth, () => rand(1, 0.8 * initMaxWaterLevel)));\r\n    }\r\n    getGridValueAt(x, y) {\r\n        const gridSize = this.parameters.initGridSize;\r\n        const gridX0 = Math.floor(x / gridSize);\r\n        const gridY0 = Math.floor(y / gridSize);\r\n        const gridX1 = gridX0 + 1;\r\n        const gridY1 = gridY0 + 1;\r\n        const dx0 = x % gridSize / gridSize;\r\n        const dx1 = 1 - dx0;\r\n        const dy0 = y % gridSize / gridSize;\r\n        const dy1 = 1 - dy0;\r\n        const altitude = Math.floor(dx1 * (dy1 * this.grid[gridY0][gridX0] + dy0 * this.grid[gridY1][gridX0]) +\r\n            dx0 * (dy1 * this.grid[gridY0][gridX1] + dy0 * this.grid[gridY1][gridX1]));\r\n        return altitude;\r\n    }\r\n    clearGrid() {\r\n        this.grid = null;\r\n    }\r\n}\r\n","export class WallTerrainGenerator {\r\n    constructor(parameters) {\r\n        this.parameters = parameters;\r\n    }\r\n    generate(game) {\r\n        const { wallAltitude, wallRadius } = this.parameters;\r\n        const cx = Math.floor(game.width / 2);\r\n        const cy = Math.floor(game.height / 2);\r\n        // const r = Math.floor(wallRadius);\r\n        game.tiles.forEach(({ x, y, terrain }) => {\r\n            if (Math.abs(Math.round(Math.sqrt(Math.pow(x - cx, 2) + Math.pow(y - cy, 2))) - wallRadius) < 0.01) {\r\n                terrain.altitude = wallAltitude;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Game } from \"../Game\";\r\nimport { MazeTerrainGenerator } from \"./game-generators/MazeTerrainGenerator\";\r\nimport { SimpleRandomStructureGenerator } from \"./game-generators/SimpleRandomStructureGenerator\";\r\nimport { SimpleRandomTerrainGenerator } from \"./game-generators/SimpleRandomTerrainGenerator\";\r\nimport { WallTerrainGenerator } from \"./game-generators/WallTerrainGenerator\";\r\nfunction createGame(gameParameters) {\r\n    const { gameMapWidth, gameMapHeight, genSimpleRandomTerrain, initGridSize, initMaxWaterLevel, genMaze, genWallTerrain, wallAltitude, wallRadius, genRandomStructure, maxWaterLevel, initWaterSourceCount, initCityCount, } = gameParameters;\r\n    const game = new Game(gameMapWidth, gameMapHeight);\r\n    const tgs = [\r\n        genSimpleRandomTerrain ? new SimpleRandomTerrainGenerator({ initGridSize, initMaxWaterLevel }) : null,\r\n        genMaze ? new MazeTerrainGenerator() : null,\r\n        genWallTerrain ? new WallTerrainGenerator({ wallAltitude, wallRadius }) : null,\r\n        genRandomStructure ? new SimpleRandomStructureGenerator({\r\n            maxWaterLevel,\r\n            initWaterSourceCount,\r\n            initCityCount,\r\n        }) : null,\r\n    ];\r\n    tgs.forEach(tg => tg === null || tg === void 0 ? void 0 : tg.generate(game));\r\n    return game;\r\n}\r\nfunction getParameterPatterns() {\r\n    const patterns = [];\r\n    const gameMapWidth = {\r\n        id: \"number\",\r\n        name: \"gameMapWidth\",\r\n        display: \"游戏地图宽度（格）\",\r\n        defaultValue: 16,\r\n        min: 1,\r\n        max: 100,\r\n        step: 1,\r\n    };\r\n    const gameMapHeight = {\r\n        id: \"number\",\r\n        name: \"gameMapHeight\",\r\n        display: \"游戏地图高度（格）\",\r\n        defaultValue: 12,\r\n        min: 1,\r\n        max: 64,\r\n        step: 1,\r\n    };\r\n    const maxWaterLevel = {\r\n        id: \"number\",\r\n        name: \"maxWaterLevel\",\r\n        display: \"最高水平面\",\r\n        defaultValue: 16,\r\n        min: 1,\r\n        max: 64,\r\n        step: 1,\r\n    };\r\n    const initWaterSourceCount = {\r\n        id: \"number\",\r\n        name: \"initWaterSourceCount\",\r\n        display: \"水源个数\",\r\n        defaultValue: 2,\r\n        min: 0,\r\n        max: 64,\r\n        step: 1,\r\n    };\r\n    const initCityCount = {\r\n        id: \"number\",\r\n        name: \"initCityCount\",\r\n        display: \"城市个数\",\r\n        defaultValue: 12,\r\n        min: 0,\r\n        max: 64,\r\n        step: 1,\r\n    };\r\n    const genRandomStructure = {\r\n        id: \"boolean\",\r\n        name: \"genRandomStructure\",\r\n        display: \"生成随机建筑\",\r\n        defaultValue: true,\r\n        subParameters: [maxWaterLevel, initWaterSourceCount, initCityCount],\r\n    };\r\n    const genMaze = {\r\n        id: \"boolean\",\r\n        name: \"genMaze\",\r\n        display: \"生成迷宫\",\r\n        defaultValue: false,\r\n    };\r\n    const initGridSize = {\r\n        id: \"number\",\r\n        name: \"initGridSize\",\r\n        display: \"网格单元长度\",\r\n        defaultValue: 4,\r\n        min: 1,\r\n        max: 64,\r\n        step: 1,\r\n        integer: true,\r\n    };\r\n    const initMaxWaterLevel = {\r\n        id: \"number\",\r\n        name: \"initMaxWaterLevel\",\r\n        display: \"初始地形最高水平面\",\r\n        defaultValue: 16,\r\n        min: 1,\r\n        max: 64,\r\n        step: 1,\r\n        integer: true,\r\n    };\r\n    const genSimpleRandomTerrain = {\r\n        id: \"boolean\",\r\n        name: \"genSimpleRandomTerrain\",\r\n        display: \"生成简单随机地形\",\r\n        defaultValue: true,\r\n        subParameters: [initGridSize, initMaxWaterLevel],\r\n    };\r\n    const wallAltitude = {\r\n        id: \"number\",\r\n        name: \"wallAltitude\",\r\n        display: \"墙高\",\r\n        defaultValue: 12,\r\n        min: 1,\r\n        max: 16,\r\n        step: 1,\r\n        integer: true,\r\n    };\r\n    const wallRadius = {\r\n        id: \"number\",\r\n        name: \"wallRadius\",\r\n        display: \"墙半径\",\r\n        defaultValue: 5,\r\n        min: 0,\r\n        max: 64,\r\n        step: 1,\r\n    };\r\n    const genWallTerrain = {\r\n        id: \"boolean\",\r\n        name: \"genWallTerrain\",\r\n        display: \"生成墙壁\",\r\n        defaultValue: false,\r\n        subParameters: [wallAltitude, wallRadius],\r\n    };\r\n    patterns.push(gameMapWidth, gameMapHeight, genSimpleRandomTerrain, genMaze, genWallTerrain, genRandomStructure);\r\n    return patterns;\r\n}\r\nexport const manifest = {\r\n    createGame,\r\n    getParameterPatterns,\r\n};\r\n","export const KEY_START_GAME = Symbol(\"startGame\");\r\nexport const KEY_SET_PARAMETER = Symbol(\"setParameter\");\r\n","<script lang=\"ts\">\r\n    import type { NumberParameterPattern } from \"../../game/interfaces\";\r\n\r\n    export let pattern: NumberParameterPattern;\r\n    export let value = pattern.defaultValue;\r\n</script>\r\n\r\n<div>\r\n    <input\r\n        type=\"number\"\r\n        min={pattern.min}\r\n        max={pattern.max}\r\n        step={pattern.step}\r\n        bind:value\r\n    />\r\n    <input\r\n        type=\"range\"\r\n        bind:value\r\n        min={pattern.min}\r\n        max={pattern.max}\r\n        step={pattern.step}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    input {\r\n        margin: 0;\r\n    }\r\n\r\n    input[type=\"number\"] {\r\n        width: 5em;\r\n        padding: 0 0 0 1em;\r\n        margin-right: 1em;\r\n        text-align: right;\r\n    }\r\n    \r\n    input[type=\"range\"] {\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let nameWeight: number = 4;\r\n    export let valueWeight: number = 8;\r\n    export let nameStyle: string = \"\";\r\n    export let valueStyle: string = \"\";\r\n</script>\r\n\r\n<div class=\"row\">\r\n    <span class=\"name\" style={`flex: ${nameWeight}; ${nameStyle}`}>\r\n        <slot name=\"name\" />\r\n    </span>\r\n    <span class=\"value\" style={`flex: ${valueWeight}; ${valueStyle}`}>\r\n        <slot name=\"value\" />\r\n    </span>\r\n</div>\r\n\r\n<style>\r\n    .row {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: baseline;\r\n    }\r\n\r\n    .row > .name {\r\n        flex: 4;\r\n        margin-right: 2em;\r\n    }\r\n\r\n    .row > .value {\r\n        flex: 8;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let value: boolean = false;\r\n</script>\r\n\r\n<div class={`${value}`} on:click={() => (value = !value)}>\r\n    <div class=\"dot\" />\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        width: 2em;\r\n        height: 1em;\r\n        padding: 0;\r\n        margin: 0;\r\n        border-radius: 1em;\r\n        background-color: #ff2222;\r\n        box-shadow: inset #000000 0 0 .1em;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    div.true {\r\n        background-color: #2389ff;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    div.false {\r\n        background-color: #ffffff;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    div > .dot {\r\n        width: 1em;\r\n        height: 1em;\r\n        padding: 0;\r\n        margin: 0;\r\n        border-radius: 1em;\r\n        background-color: #ffffff;\r\n        box-shadow: #000000 0 0 .1em;\r\n    }\r\n\r\n    div.true > .dot {\r\n        box-shadow: #0000003f -0.1em 0 .1em;\r\n    }\r\n\r\n    div.false > .dot {\r\n        box-shadow: #0000003f 0.1em 0 .1em;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import type { BooleanParameterPattern } from \"../../game/interfaces\";\r\n    import Switch from \"../widgets/Switch.svelte\";\r\n\r\n    export let pattern: BooleanParameterPattern;\r\n    export let value: boolean = pattern.defaultValue;\r\n</script>\r\n\r\n<div>\r\n    <Switch bind:value />\r\n    <span>{value ? \"开\" : \"关\"}</span>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    span {\r\n        margin-left: 1em;\r\n    }\r\n</style>","<script lang=\"ts\">\r\n    import { getContext } from \"svelte\";\r\n    import Row from \"./widgets/Row.svelte\";\r\n\r\n    import type {\r\n        BooleanParameterPattern,\r\n        ParameterPattern,\r\n    } from \"../game/interfaces\";\r\n    import { KEY_SET_PARAMETER } from \"../values\";\r\n    import BooleanParameterPatternInput from \"./parameter-patterns/BooleanParameterPatternInput.svelte\";\r\n    import NumberParameterPatternInput from \"./parameter-patterns/NumberParameterPatternInput.svelte\";\r\n\r\n    export let pattern: ParameterPattern<any>;\r\n    export let nameWeight: number = 4;\r\n    export let valueWeight: number = 5;\r\n    export let nameStyle: string = \"\";\r\n    export let valueStyle: string = \"\";\r\n\r\n    const setParameter: (name: string, value: any) => void =\r\n        getContext(KEY_SET_PARAMETER);\r\n\r\n    const PATTERNS = {\r\n        number: NumberParameterPatternInput,\r\n        boolean: BooleanParameterPatternInput,\r\n    };\r\n\r\n    let value: any;\r\n    $: {\r\n        setParameter(pattern.name, value);\r\n    }\r\n\r\n    function getSubPatterns(pattern: ParameterPattern<any>, value: any) {\r\n        if (pattern.id !== \"boolean\") return [];\r\n        const bpp = pattern as BooleanParameterPattern;\r\n        if (value === true) return bpp.subParameters || [];\r\n        return [];\r\n    }\r\n\r\n    $: subPatterns = getSubPatterns(pattern, value);\r\n</script>\r\n\r\n<Row {nameStyle} {valueStyle} {nameWeight} {valueWeight}>\r\n    <span slot=\"name\">{pattern.display || pattern.name}</span>\r\n    <span slot=\"value\">\r\n        <svelte:component this={PATTERNS[pattern.id]} {pattern} bind:value />\r\n    </span>\r\n</Row>\r\n{#each subPatterns as subPat}\r\n    <svelte:self pattern={subPat} {nameStyle} {valueStyle} {nameWeight} {valueWeight} />\r\n{/each}\r\n","<script lang=\"ts\">\r\n    export let width: number | string = 0;\r\n    export let height: number | string = 0;\r\n    const style = `\r\n        width: ${typeof width === 'number' ? width + 'px' : width};\r\n        height: ${typeof height === 'number' ? height + 'px' : height};\r\n    `;\r\n</script>\r\n\r\n<div {style}/>\r\n\r\n<style>\r\n    div {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n</style>","<script lang=\"ts\">\r\n    import { getContext, setContext } from \"svelte\";\r\n    import { manifest } from \"../game/builtin/manifest\";\r\n    import type { Game } from \"../game/Game\";\r\n    import { KEY_SET_PARAMETER, KEY_START_GAME } from \"../values\";\r\n    import NumberParameterPattern from \"./parameter-patterns/NumberParameterPatternInput.svelte\";\r\n    import ParameterPatternRow from \"./ParameterPatternRow.svelte\";\r\n    import Spacer from \"./widgets/Spacer.svelte\";\r\n\r\n    const gameStart: (game: Game) => void = getContext(KEY_START_GAME);\r\n\r\n    const PATTERNS = {\r\n        number: NumberParameterPattern,\r\n    };\r\n\r\n    const parameterPatterns = manifest.getParameterPatterns();\r\n\r\n    const parameters = Object.fromEntries(\r\n        parameterPatterns.map(({ name, defaultValue }) => [name, defaultValue])\r\n    );\r\n\r\n    setContext(\r\n        KEY_SET_PARAMETER,\r\n        (name: string, value: any) => (parameters[name] = value)\r\n    );\r\n\r\n    function startGame() {\r\n        const game = manifest.createGame(parameters);\r\n        gameStart(game);\r\n    }\r\n</script>\r\n\r\n<main>\r\n    <h1>参数设置</h1>\r\n    <div class=\"parameters\">\r\n        {#each parameterPatterns as pattern, i}\r\n            {#if i > 0}\r\n                <Spacer height=\"0.5em\" />\r\n            {/if}\r\n            <ParameterPatternRow\r\n                {pattern}\r\n                nameStyle=\"text-align: right;\"\r\n                nameWeight={6}\r\n                valueWeight={6}\r\n            />\r\n        {/each}\r\n    </div>\r\n    <button on:click={startGame}>开始</button>\r\n</main>\r\n\r\n<style>\r\n    main {\r\n        width: 100%;\r\n        max-width: 50em;\r\n        height: 100%;\r\n        padding: 1em;\r\n        margin: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        background-color: #475085;\r\n        color: #ffffff;\r\n    }\r\n\r\n    main > * {\r\n        width: 100%;\r\n    }\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    .parameters {\r\n        margin: 2em 0;\r\n        flex: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        overflow-y: auto;\r\n        color: #ffffff;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        max-width: 20em;\r\n        margin: 2em auto;\r\n        text-align: center;\r\n        font-size: 3vh;\r\n        font-family: \"Microsoft Yahei\";\r\n        letter-spacing: .6em;\r\n    }\r\n</style>\r\n","import { contains } from \"./utils\";\r\nconst CONFIG = {\r\n    tileSize: 20,\r\n    tileEdgeWidth: 1,\r\n    doDrawTileEdge: false,\r\n    maxWaterLevel: 16,\r\n    lineCost: 100,\r\n    initWaterLevel: 7,\r\n    initGridSize: 4,\r\n    initCityCount: 12,\r\n    initWaterSourceCount: 2,\r\n};\r\nwindow.CONFIG = CONFIG;\r\nexport function handleLinkTile(e) {\r\n    const { src, dst } = e;\r\n    const srcStruct = src.structure;\r\n    const dstStruct = dst.structure;\r\n    if (srcStruct && dstStruct && srcStruct.id === 'city') {\r\n        const srcStc = srcStruct;\r\n        if (srcStc.hasTransportLine(dst)) {\r\n            srcStc.removeTransportLine(dst);\r\n        }\r\n        else if (srcStc.active && contains(['city', 'rocket'], dstStruct.id)) {\r\n            srcStc.addTransportLine(dst, src);\r\n        }\r\n    }\r\n}\r\n","export class SimpleEventDispatcher {\r\n    constructor() {\r\n        this.handlers = new Set();\r\n    }\r\n    add(handler) {\r\n        return this.handlers.add(handler);\r\n    }\r\n    remove(handler) {\r\n        return this.handlers.delete(handler);\r\n    }\r\n    clear() {\r\n        return this.handlers.clear();\r\n    }\r\n    emit(event) {\r\n        this.handlers.forEach(handle => handle(event));\r\n    }\r\n}\r\n","import { GameRenderer } from \"../../GameRenderer\";\r\nimport { constraints, distance } from \"../../utils\";\r\nexport class Canvas2dgameRender extends GameRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.tileSize = CONFIG.tileSize;\r\n        this.tileEdgeWidth = CONFIG.tileEdgeWidth;\r\n    }\r\n    initialize(game, canvas) {\r\n        this.game = game;\r\n        this.canvas = canvas;\r\n        canvas.width = this.game.width * this.tileSize;\r\n        canvas.height = this.game.height * this.tileSize;\r\n        this.setupListeners(canvas, game);\r\n    }\r\n    setupListeners(canvas, game) {\r\n        const onMouseDownListener = (event) => {\r\n            const x = Math.floor(event.offsetX / this.tileSize);\r\n            const y = Math.floor(event.offsetY / this.tileSize);\r\n            const tile = game.getTile(x, y);\r\n            this.ghostSrcTile = tile;\r\n        };\r\n        const onMouseUpListener = (event) => {\r\n            const x = Math.floor(event.offsetX / this.tileSize);\r\n            const y = Math.floor(event.offsetY / this.tileSize);\r\n            const tile = game.getTile(x, y);\r\n            if (tile) {\r\n                if (tile === this.ghostSrcTile || !this.ghostSrcTile) {\r\n                    this.onClickTileDispatcher.emit({ tile });\r\n                    this.choosenTile = tile;\r\n                }\r\n                else {\r\n                    this.onLinkTileDispatcher.emit({ src: this.ghostSrcTile, dst: tile });\r\n                }\r\n            }\r\n            this.ghostSrcTile = null;\r\n            this.ghostDstTile = null;\r\n        };\r\n        const onMouseMoveListener = (event) => {\r\n            const x = Math.floor(event.offsetX / this.tileSize);\r\n            const y = Math.floor(event.offsetY / this.tileSize);\r\n            const tile = game.getTile(x, y);\r\n            if (this.ghostSrcTile && tile) {\r\n                this.ghostDstTile = (this.ghostSrcTile === tile) ? null : tile;\r\n            }\r\n        };\r\n        const onMouseleaveListener = (event) => {\r\n            this.ghostSrcTile = null;\r\n            this.ghostDstTile = null;\r\n        };\r\n        const onKeyUpListener = (event) => {\r\n            if (event.key !== ' ')\r\n                return;\r\n            switch (game.status) {\r\n                case 'running':\r\n                    game.status = 'waiting';\r\n                    break;\r\n                case 'waiting':\r\n                    game.status = 'running';\r\n                    break;\r\n            }\r\n        };\r\n        canvas.addEventListener('mousedown', onMouseDownListener);\r\n        canvas.addEventListener('mouseup', onMouseUpListener);\r\n        canvas.addEventListener('mousemove', onMouseMoveListener);\r\n        canvas.addEventListener('mouseleave', onMouseleaveListener);\r\n        window.addEventListener('keyup', onKeyUpListener);\r\n        this.cleanListeners = () => {\r\n            canvas.removeEventListener('mousedown', onMouseDownListener);\r\n            canvas.removeEventListener('mouseup', onMouseUpListener);\r\n            canvas.removeEventListener('mousemove', onMouseMoveListener);\r\n            canvas.removeEventListener('mouseleave', onMouseleaveListener);\r\n            window.removeEventListener('keyup', onKeyUpListener);\r\n        };\r\n    }\r\n    render() {\r\n        this.canvas.width = this.game.width * this.tileSize;\r\n        this.canvas.height = this.game.height * this.tileSize;\r\n        const g = this.canvas.getContext('2d');\r\n        this.game.tiles.forEach(tile => this.renderTerrain(tile, g));\r\n        this.game.tiles.forEach(tile => this.renderTransportationLine(tile, g));\r\n        this.game.tiles.forEach(tile => this.renderStructure(tile, g));\r\n        this.renderChooseFrame(this.choosenTile, g);\r\n        this.renderGhostTiles(this.ghostSrcTile, this.ghostDstTile, g);\r\n        this.onRender.emit(this);\r\n    }\r\n    renderTerrain(tile, g) {\r\n        const { x, y, terrain: { altitude, water } } = tile;\r\n        const pixelX = Math.floor(x * this.tileSize);\r\n        const pixelY = Math.floor(y * this.tileSize);\r\n        g.fillStyle = '#00' +\r\n            Math.floor(constraints(altitude / 16 * 0x0100, 0, 0xff)).toString(16).padStart(2, '0') +\r\n            Math.floor(constraints(water / CONFIG.maxWaterLevel * 0xbf + (water > 0 ? 0x40 : 0), 0, 0xff))\r\n                .toString(16)\r\n                .padStart(2, '0');\r\n        g.fillRect(pixelX, pixelY, this.tileSize, this.tileSize);\r\n        if (CONFIG.doDrawTileEdge) {\r\n            g.fillStyle = '#ffffff';\r\n            if (!tile.up || tile.up.terrain.altitude !== altitude)\r\n                g.fillRect(pixelX, pixelY, this.tileSize, this.tileEdgeWidth);\r\n            if (!tile.left || tile.left.terrain.altitude !== altitude)\r\n                g.fillRect(pixelX, pixelY, this.tileEdgeWidth, this.tileSize);\r\n            if (!tile.right || tile.right.terrain.altitude !== altitude)\r\n                g.fillRect(pixelX + this.tileSize - this.tileEdgeWidth, pixelY, this.tileEdgeWidth, this.tileSize);\r\n            if (!tile.down || tile.down.terrain.altitude !== altitude)\r\n                g.fillRect(pixelX, pixelY + this.tileSize - this.tileEdgeWidth, this.tileSize, this.tileEdgeWidth);\r\n        }\r\n    }\r\n    renderTransportationLine(tile, g) {\r\n        const { x, y, structure } = tile;\r\n        if (!structure || structure.id !== 'city')\r\n            return;\r\n        const srcPixelCenterX = Math.floor((x + 0.5) * this.tileSize);\r\n        const srcPixelCenterY = Math.floor((y + 0.5) * this.tileSize);\r\n        const s = structure;\r\n        for (const { target, pipe } of s.transportationLines) {\r\n            const dstPixelCenterX = Math.floor((target.x + 0.5) * this.tileSize);\r\n            const dstPixelCenterY = Math.floor((target.y + 0.5) * this.tileSize);\r\n            const angle = Math.atan2(target.y - y, target.x - x);\r\n            g.strokeStyle = '#ffffff';\r\n            g.lineWidth = 0.1 * this.tileSize;\r\n            g.beginPath();\r\n            g.moveTo(srcPixelCenterX, srcPixelCenterY);\r\n            g.lineTo(dstPixelCenterX, dstPixelCenterY);\r\n            g.stroke();\r\n            for (const { energy, progress } of pipe) {\r\n                const radius = 0.1 * this.tileSize * (1 + Math.tanh(energy / 50));\r\n                g.fillStyle = '#ffffff';\r\n                g.beginPath();\r\n                g.arc(srcPixelCenterX + progress * Math.cos(angle) * this.tileSize, srcPixelCenterY + progress * Math.sin(angle) * this.tileSize, radius, 0, 2 * Math.PI);\r\n                g.fill();\r\n            }\r\n        }\r\n    }\r\n    renderStructure(tile, g) {\r\n        const { x, y, structure } = tile;\r\n        if (!structure)\r\n            return;\r\n        const pixelX = Math.floor(x * this.tileSize);\r\n        const pixelY = Math.floor(y * this.tileSize);\r\n        let fillStyle = '#ff0000';\r\n        switch (structure.id) {\r\n            case 'water-source':\r\n                fillStyle = '#00ffff';\r\n                break;\r\n            case 'rocket':\r\n                fillStyle = structure ? '#8f8f8f' : '#ffffff';\r\n                break;\r\n            case 'city':\r\n                {\r\n                    const city = structure;\r\n                    if (city.ruined) {\r\n                        fillStyle = '#8f8f8f';\r\n                    }\r\n                    else {\r\n                        fillStyle = city.active ? '#ffff00' : '#afaf00';\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        g.fillStyle = fillStyle;\r\n        g.beginPath();\r\n        g.arc(pixelX + this.tileSize / 2, pixelY + this.tileSize / 2, this.tileSize / 2 * 0.6, 0, 2 * Math.PI);\r\n        g.fill();\r\n        if (structure.id === 'city' || structure.id === 'rocket') {\r\n            g.strokeStyle = '#000000';\r\n            g.lineWidth = 0.1 * this.tileSize;\r\n            g.stroke();\r\n            g.strokeStyle = '#ffffff';\r\n            let v = 0;\r\n            if (structure.id === 'city') {\r\n                const city = structure;\r\n                v = city.active\r\n                    // ? Math.tanh(structure.energy / 500)\r\n                    ? (city.energy / city.maxEnergy)\r\n                    : (city.energy / city.activeValve);\r\n            }\r\n            else if (structure.id === 'rocket') {\r\n                const rocket = structure;\r\n                v = constraints(rocket.energy / rocket.targetEnergy, 0, 1);\r\n            }\r\n            g.beginPath();\r\n            g.arc(pixelX + this.tileSize / 2, pixelY + this.tileSize / 2, this.tileSize / 2 * 0.6, -0.5 * Math.PI, (v * 2 - 0.5) * Math.PI, false);\r\n            g.stroke();\r\n        }\r\n    }\r\n    renderGhostTiles(src, dst, g) {\r\n        const tileSize = this.tileSize;\r\n        if (src && dst && src !== dst) {\r\n            let strokeStyle = '#ffff00';\r\n            if (src.structure && src.structure.id === 'city') {\r\n                const city = src.structure;\r\n                if (distance(src, dst) * CONFIG.lineCost <= city.energy) {\r\n                    strokeStyle = '#7fff7f';\r\n                }\r\n                else {\r\n                    strokeStyle = '#ff0000';\r\n                }\r\n            }\r\n            g.strokeStyle = strokeStyle;\r\n            g.beginPath();\r\n            g.moveTo((src.x + 0.5) * tileSize, (src.y + 0.5) * tileSize);\r\n            g.lineTo((dst.x + 0.5) * tileSize, (dst.y + 0.5) * tileSize);\r\n            g.stroke();\r\n        }\r\n        this.renderGhostTile(src, g, \"#0066FF\");\r\n        this.renderGhostTile(dst, g, \"#FFCC33\");\r\n    }\r\n    renderGhostTile(tile, g, color) {\r\n        if (!tile)\r\n            return;\r\n        const { x, y } = tile;\r\n        const tileSize = this.tileSize;\r\n        const tileEdgeWidth = this.tileEdgeWidth;\r\n        const cx = (x + 0.5) * tileSize;\r\n        const cy = (y + 0.5) * tileSize;\r\n        const outer = tileSize / 2 - tileEdgeWidth;\r\n        const inner = tileSize / 2 - 2 * tileEdgeWidth;\r\n        g.fillStyle = color;\r\n        g.fillRect(cx - outer, cy - outer, 2 * outer, tileEdgeWidth);\r\n        g.fillRect(cx - outer, cy + inner, 2 * outer, tileEdgeWidth);\r\n        g.fillRect(cx - outer, cy - outer, tileEdgeWidth, 2 * outer);\r\n        g.fillRect(cx + inner, cy - outer, tileEdgeWidth, 2 * outer);\r\n    }\r\n    renderChooseFrame(tile, g) {\r\n        if (!tile)\r\n            return;\r\n        const { x, y, terrain: { altitude, water, level }, structure } = tile;\r\n        const pixelX = Math.floor(x * this.tileSize);\r\n        const pixelY = Math.floor(y * this.tileSize);\r\n        const tileSize = this.tileSize;\r\n        const tileEdgeWidth = this.tileEdgeWidth;\r\n        g.fillStyle = '#ffffff';\r\n        g.fillRect(pixelX, pixelY, tileSize, tileEdgeWidth);\r\n        g.fillRect(pixelX, pixelY, tileEdgeWidth, tileSize);\r\n        g.fillRect(pixelX + tileSize - tileEdgeWidth, pixelY, tileEdgeWidth, tileSize);\r\n        g.fillRect(pixelX, pixelY + tileSize - tileEdgeWidth, tileSize, tileEdgeWidth);\r\n    }\r\n    dispose() {\r\n        if (this.cleanListeners) {\r\n            this.cleanListeners();\r\n            this.cleanListeners = null;\r\n        }\r\n        [this.onRender, this.onClickTileDispatcher, this.onLinkTileDispatcher].forEach(it => it.clear());\r\n    }\r\n}\r\n","import { SimpleEventDispatcher } from \"./SimpleEventDispatcher\";\r\nexport class GameRenderer {\r\n    constructor() {\r\n        this.doDraw = false;\r\n        this.onRender = new SimpleEventDispatcher();\r\n        this.onLinkTileDispatcher = new SimpleEventDispatcher();\r\n        this.onClickTileDispatcher = new SimpleEventDispatcher();\r\n    }\r\n    start() {\r\n        if (this.doDraw)\r\n            return;\r\n        this.doDraw = true;\r\n        this.loop();\r\n    }\r\n    loop() {\r\n        if (this.doDraw) {\r\n            requestAnimationFrame(this.loop.bind(this));\r\n            this.render();\r\n        }\r\n    }\r\n    stop() {\r\n        this.doDraw = false;\r\n    }\r\n}\r\n","<script lang=\"ts\">\r\n    import { onMount } from \"svelte\";\r\nimport { constraints } from \"../../game/utils\";\r\n\r\n    // [颜色, 权重]\r\n    export let items: [string, number][];\r\n    export let total: number = 100;\r\n    export let filler: string = \"transparent\";\r\n    export let height: string | number = \"1em\";\r\n\r\n    const heightStr = typeof height === \"number\" ? height + \"px\" : height;\r\n\r\n    let bar: HTMLDivElement;\r\n    let barTotalWidth = 0;\r\n\r\n    onMount(() => {\r\n        barTotalWidth = bar.offsetWidth;\r\n    });\r\n\r\n    function calcStyles(items: [string, number][]): string[] {\r\n        const styles: string[] = [];\r\n        let acc = 0;\r\n        for (const item of items) {\r\n            if (!item) continue;\r\n\r\n            const [color, weight] = item;\r\n            const start = acc;\r\n            acc = constraints(acc + weight, 0, total);\r\n            const end = acc;\r\n            styles.push(`\r\n                width: ${((end - start) / total) * barTotalWidth}px;\r\n                background-color: ${color}; \r\n            `);\r\n        }\r\n        if (acc < total) {\r\n            styles.push(`\r\n                width: ${((total - acc) / total) * barTotalWidth}px;\r\n                background-color: ${filler}; \r\n            `);\r\n        }\r\n        return styles;\r\n    }\r\n\r\n    $: styles = calcStyles(items);\r\n\r\n</script>\r\n\r\n<div bind:this={bar} style=\"height: {heightStr};\">\r\n    {#each styles as style}\r\n        <div {style} />\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        width: 100%;\r\n        overflow: hidden;\r\n    }\r\n    div > * {\r\n        height: 100%;\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import type { CityStructure } from \"../../game/builtin/structures/CityStructure\";\r\n    import type { Tile } from \"../../game/Tile\";\r\n    import { constraints, shorten, toPercents } from \"../../game/utils\";\r\n    import ProgressBar from \"../widgets/ProgressBar.svelte\";\r\n    import Row from \"../widgets/Row.svelte\";\r\n\r\n    export let tile: Tile;\r\n\r\n    $: city = tile.structure as CityStructure;\r\n\r\n    $: activeStatus = city.active\r\n        ? \"已激活\"\r\n        : `未激活(${shorten(city.energy)}/${shorten(\r\n              city.activeValve\r\n          )}=${toPercents(city.energy / city.activeValve)})`;\r\n\r\n    $: progressBarItems = [\r\n        [\"#ffff00\", city.energy],\r\n        [\"#7f0000\", city.active ? 0 : constraints(city.activeValve - city.energy, 0, city.maxEnergy)],\r\n    ] as [string, number][];\r\n</script>\r\n\r\n<ProgressBar items={progressBarItems} filler=\"#7f7f00\" total={city.maxEnergy} />\r\n\r\n<Row>\r\n    <span slot=\"name\">状态</span>\r\n    <span slot=\"value\">{city.ruined ? \"已毁坏\" : \"完好\"}</span>\r\n</Row>\r\n<Row>\r\n    <span slot=\"name\">激活状态</span>\r\n    <span slot=\"value\">{activeStatus}</span>\r\n</Row>\r\n<Row>\r\n    <span slot=\"name\">能量</span>\r\n    <span slot=\"value\">{shorten(city.energy)}</span>\r\n</Row>\r\n<Row>\r\n    <span slot=\"name\">最大能量</span>\r\n    <span slot=\"value\">{shorten(city.maxEnergy)}</span>\r\n</Row>\r\n","<script lang=\"ts\">\r\n    import type { RocketStructure } from \"../../game/builtin/structures/RocketStructure\";\r\n    import type { Tile } from \"../../game/Tile\";\r\n    import { shorten } from \"../../game/utils\";\r\n    import ProgressBar from \"../widgets/ProgressBar.svelte\";\r\n    import Row from \"../widgets/Row.svelte\";\r\n\r\n    export let tile: Tile;\r\n\r\n    $: rocket = tile.structure as RocketStructure;\r\n\r\n    $: progressBarItems = [[\"#ffff00\", rocket.energy]] as [string, number][];\r\n</script>\r\n\r\n<ProgressBar\r\n    items={progressBarItems}\r\n    filler=\"#7f7f00\"\r\n    total={rocket.targetEnergy}\r\n/>\r\n\r\n<Row>\r\n    <span slot=\"name\">状态</span>\r\n    <span slot=\"value\">{rocket.ruined ? \"已毁坏\" : \"完好\"}</span>\r\n</Row>\r\n<Row>\r\n    <span slot=\"name\">能量</span>\r\n    <span slot=\"value\">{shorten(rocket.energy)}</span>\r\n</Row>\r\n<Row>\r\n    <span slot=\"name\">目标能量</span>\r\n    <span slot=\"value\">{shorten(rocket.targetEnergy)}</span>\r\n</Row>\r\n","<script lang=\"ts\">\r\n    import type { WaterSourceStructure } from \"../../game/builtin/structures/WaterStructure\";\r\n    import type { Tile } from \"../../game/Tile\";\r\n    import Row from \"../widgets/Row.svelte\";\r\n\r\n    export let tile: Tile;\r\n\r\n    const structure = tile.structure;\r\n    const waterSource = structure as WaterSourceStructure;\r\n</script>\r\n\r\n<Row>\r\n    <span slot=\"name\">出水速度</span>\r\n    <span slot=\"value\">{waterSource.speed}</span>\r\n</Row>\r\n","<script lang=\"ts\">\r\n    export let className: string = \"\";\r\n    export let style: string = \"\";\r\n    export let title: string = \"\";\r\n</script>\r\n\r\n<div class={className} {style}>\r\n    {#if title}\r\n        <h3>{title}</h3>\r\n    {/if}\r\n    <slot />\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        padding: 1em;\r\n        margin: 0;\r\n        border-radius: 0.5em;\r\n        background-color: #efefef;\r\n    }\r\n\r\n    h3 {\r\n        margin-top: 0;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import type { Tile } from \"../game/Tile\";\r\n    import { shorten } from \"../game/utils\";\r\n    import ProgressBar from \"./widgets/ProgressBar.svelte\";\r\n    import Row from \"./widgets/Row.svelte\";\r\n    import CityStructureInfo from \"./structure-infos/CityStructureInfo.svelte\";\r\n    import RocketStructureInfo from \"./structure-infos/RocketStructureInfo.svelte\";\r\n    import WaterSourceStructureInfo from \"./structure-infos/WaterSourceStructureInfo.svelte\";\r\n    import Card from \"./widgets/Card.svelte\";\r\n    import Spacer from \"./widgets/Spacer.svelte\";\r\n\r\n    const STRUCTURE_INFOS = {\r\n        \"water-source\": WaterSourceStructureInfo,\r\n        city: CityStructureInfo,\r\n        rocket: RocketStructureInfo,\r\n    };\r\n\r\n    export let tile: Tile;\r\n\r\n    $: progressBarItems = [\r\n        [\"#00ff00\", tile.terrain.altitude],\r\n        [\"#0000ff\", tile.terrain.water],\r\n    ] as [string, number][];\r\n</script>\r\n\r\n<Card title=\"图格\" style=\"background-color: #ffffff;\">\r\n    <Row>\r\n        <span slot=\"name\">位置</span>\r\n        <span slot=\"value\">({tile.x}, {tile.y})</span>\r\n    </Row>\r\n</Card>\r\n<Spacer height=\"0.5em\" />\r\n\r\n<Card title=\"地形\" style=\"background-color: #ffffff;\">\r\n    <!-- svelte-ignore missing-declaration -->\r\n    <ProgressBar\r\n        items={progressBarItems}\r\n        filler=\"#00ccff\"\r\n        total={CONFIG.maxWaterLevel}\r\n    />\r\n    <Row>\r\n        <span slot=\"name\">海拔</span>\r\n        <span slot=\"value\">{shorten(tile.terrain.altitude)}</span>\r\n    </Row>\r\n    <Row>\r\n        <span slot=\"name\">水位</span>\r\n        <span slot=\"value\">{shorten(tile.terrain.water)}</span>\r\n    </Row>\r\n    <Row>\r\n        <span slot=\"name\">水平面</span>\r\n        <span slot=\"value\">{shorten(tile.terrain.level)}</span>\r\n    </Row>\r\n</Card>\r\n<Spacer height=\"0.5em\" />\r\n\r\n<Card title=\"建筑\" style=\"background-color: #ffffff;\">\r\n    <Row>\r\n        <span slot=\"name\">ID</span>\r\n        <span slot=\"value\">{tile.structure?.id || \"N/A\"}</span>\r\n    </Row>\r\n    {#if tile.structure}\r\n        <svelte:component this={STRUCTURE_INFOS[tile.structure.id]} {tile} />\r\n    {/if}\r\n</Card>\r\n","<script lang=\"ts\">\r\n    // export let gap: string | number = \"1em\";\r\n</script>\r\n\r\n<div class=\"list\">\r\n    <slot />\r\n</div>\r\n\r\n<style>\r\n    div.list > * {\r\n        margin-top: 1em;\r\n    }\r\n    div.list > *:first-child {\r\n        margin-top: 0;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import type { Nullable } from \"../game/interfaces\";\r\n    import type { Game } from \"../game/Game\";\r\n    import type { NumberParameterPattern as NPP } from \"../game/interfaces\";\r\n    import type { ClickTileEvent } from \"../game/GameRenderer\";\r\n    import type { Tile } from \"../game/Tile\";\r\n    import { onDestroy, onMount } from \"svelte\";\r\n    import { handleLinkTile } from \"../game/games\";\r\n    import { Canvas2dgameRender } from \"../game/builtin/game-renderers/Canvas2dRenderer\";\r\n    import NumberParameterPattern from \"./parameter-patterns/NumberParameterPatternInput.svelte\";\r\n    import TileInfo from \"./TileInfo.svelte\";\r\n    import Row from \"./widgets/Row.svelte\";\r\n    import Card from \"./widgets/Card.svelte\";\r\n    import List from \"./widgets/List.svelte\";\r\n    import Spacer from \"./widgets/Spacer.svelte\";\r\n\r\n    let canvas: HTMLCanvasElement;\r\n\r\n    export let game: Nullable<Game> = null;\r\n    let choosenTile: Nullable<Tile> = null;\r\n    let renderer = new Canvas2dgameRender();\r\n    let distoryHandler: () => void;\r\n\r\n    const handleClickTile = ({ tile }: ClickTileEvent) => (choosenTile = tile);\r\n    const handleRender = () => {\r\n        choosenTile = choosenTile;\r\n        game = game;\r\n    };\r\n\r\n    onMount(() => {\r\n        if (!game) throw new Error(\"No game!\");\r\n\r\n        renderer.onLinkTileDispatcher.add(handleLinkTile);\r\n        renderer.onClickTileDispatcher.add(handleClickTile);\r\n        renderer.onRender.add(handleRender);\r\n        renderer.initialize(game, canvas);\r\n        renderer.start();\r\n        game.status = \"running\";\r\n        game.start(100);\r\n\r\n        distoryHandler = () => {\r\n            if (game.status === \"running\") {\r\n                game.status = \"waiting\";\r\n            }\r\n            renderer.stop();\r\n            renderer.dispose();\r\n            game.stop();\r\n            game = null;\r\n        };\r\n    });\r\n\r\n    onDestroy(() => {\r\n        if (distoryHandler) {\r\n            distoryHandler();\r\n        }\r\n    });\r\n\r\n    const patTileSize: NPP = {\r\n        id: \"number\",\r\n        name: \"tileSize\", // 该参数的名字\r\n        display: \"瓦片边长(px)\", // 该参数显示在界面上的名字\r\n        defaultValue: 20, // 该参数的默认值\r\n        min: 1, // 最小值\r\n        max: 1000, // 最大值\r\n        step: 1, // 步长\r\n        integer: true, // 是否必须是整数\r\n    };\r\n\r\n    const canvasCardStyle = `\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: #ffffff;\r\n    `;\r\n</script>\r\n\r\n<main>\r\n    <div class=\"canvas-wrapper\">\r\n        <Card style={canvasCardStyle}>\r\n            <canvas bind:this={canvas} />\r\n        </Card>\r\n    </div>\r\n\r\n    <div class=\"info\">\r\n        <List>\r\n            <Card style=\"background-color: #ffffff;\">\r\n                <span>{patTileSize.display || patTileSize.name}</span>\r\n                <NumberParameterPattern\r\n                    pattern={patTileSize}\r\n                    bind:value={renderer.tileSize}\r\n                />\r\n            </Card>\r\n            <Spacer height=\"0.5em\" />\r\n\r\n            <Card title=\"游戏\" style=\"background-color: #ffffff;\">\r\n                <Row>\r\n                    <span slot=\"name\">状态</span>\r\n                    <span slot=\"value\">{game.status}</span>\r\n                </Row>\r\n            </Card>\r\n            <Spacer height=\"0.5em\" />\r\n\r\n            {#if choosenTile}\r\n                <TileInfo tile={choosenTile} />\r\n            {/if}\r\n        </List>\r\n    </div>\r\n</main>\r\n\r\n<style>\r\n    main {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n    }\r\n\r\n    canvas {\r\n        margin: auto;\r\n        background-color: #475085;\r\n    }\r\n\r\n    .canvas-wrapper {\r\n        height: 100%;\r\n        border-radius: 0.5em;\r\n        padding: 1em;\r\n        overflow: auto;\r\n        flex: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .info {\r\n        width: 20em;\r\n        height: 100%;\r\n        padding: 1em;\r\n        background-color: #efefef;\r\n        font-family: \"Consolas\";\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        overflow: auto;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { setContext } from \"svelte\";\r\n\timport MenuPage from \"./components/MenuPage.svelte\";\r\n\timport type { Game } from \"./game/Game\";\r\n\timport { KEY_START_GAME } from \"./values\";\r\n\timport GamePage from \"./components/GamePage.svelte\";\r\n\r\n\tlet game: Game = null;\r\n\r\n\tconst gameStart = (g: Game) => (game = g);\r\n\r\n\tsetContext(KEY_START_GAME, gameStart);\r\n</script>\r\n\r\n<main>\r\n\t{#if !game}\r\n\t\t<MenuPage />\r\n\t{:else}\r\n\t\t<GamePage game={game} />\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n        background-color: #2a315a;\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\r\nimport './index.css';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {},\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","setContext","key","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","bound","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","Terrain","constructor","altitude","water","level","array","genElem","_","rand","min","random","randInt","floor","randOnes","arr","count","cpy","j","tmp","constraints","distance","tile1","tile2","sqrt","pow","x","y","shorten","num","toFixed","shuffle","Tile","game","terrain","structure","tick","evenify","relativeTiles","left","right","up","down","it","sort","costWater","restWater","finalDeltaWaters","thisDeltaWater","tile","nextTile","gap","getTile","Game","width","height","pid","status","ticks","tiles","contains","initialize","initializer","start","period","setInterval","stop","clearInterval","DIRECTIONS","MazeTerrainGenerator","generate","setupGrid","getGridValueAt","clearGrid","startX","startY","visited","nexts","queue","prior","shift","px","py","round","dx","dy","grid","prev","CONFIG","maxWaterLevel","CityStructure","parameters","genEnergyPerTick","transportSpeed","transportPeriodTick","transportEnergy","activeValve","maxEnergy","energy","active","ruined","transportationLines","id","changeEnergy","deltaEnergy","pipe","dist","transportation","progress","lineCount","totalSentEnergy","line","transport","addTransportLine","source","hasTransportLine","cost","lineCost","removeTransportLine","findIndex","find","RocketStructure","targetEnergy","window","alert","WaterSourceStructure","speed","SimpleRandomStructureGenerator","initWaterSourceCount","initCityCount","t","tilesDescent","reverse","cityTiles","SimpleRandomTerrainGenerator","gameMapWidth","gameMapHeight","initGridSize","initMaxWaterLevel","gridWidth","gridheight","gridSize","gridX0","gridY0","gridX1","gridY1","dx0","dx1","dy0","dy1","WallTerrainGenerator","wallAltitude","wallRadius","cx","cy","abs","manifest","createGame","gameParameters","genSimpleRandomTerrain","genMaze","genWallTerrain","genRandomStructure","tg","getParameterPatterns","patterns","display","defaultValue","subParameters","step","integer","KEY_START_GAME","Symbol","KEY_SET_PARAMETER","pattern","nameWeight","valueWeight","nameStyle","valueStyle","setParameter","PATTERNS","number","NumberParameterPatternInput","boolean","BooleanParameterPatternInput","subPatterns","getSubPatterns","style","gameStart","parameterPatterns","fromEntries","handleLinkTile","e","dst","srcStruct","dstStruct","srcStc","elem","tileSize","tileEdgeWidth","doDrawTileEdge","initWaterLevel","SimpleEventDispatcher","handlers","remove","emit","handle","Canvas2dgameRender","doDraw","onRender","onLinkTileDispatcher","onClickTileDispatcher","loop","requestAnimationFrame","render","super","arguments","canvas","setupListeners","onMouseDownListener","offsetX","offsetY","ghostSrcTile","onMouseUpListener","choosenTile","ghostDstTile","onMouseMoveListener","onMouseleaveListener","onKeyUpListener","cleanListeners","g","renderTerrain","renderTransportationLine","renderStructure","renderChooseFrame","renderGhostTiles","pixelX","pixelY","fillStyle","toString","padStart","fillRect","srcPixelCenterX","srcPixelCenterY","s","dstPixelCenterX","dstPixelCenterY","angle","atan2","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","radius","tanh","arc","cos","sin","PI","city","v","rocket","renderGhostTile","color","outer","inner","dispose","important","removeProperty","setProperty","items","total","filler","heightStr","bar","barTotalWidth","offsetWidth","styles","acc","item","weight","end","calcStyles","activeStatus","progressBarItems","waterSource","className","title","STRUCTURE_INFOS","WaterSourceStructureInfo","CityStructureInfo","RocketStructureInfo","distoryHandler","renderer","handleClickTile","handleRender","body"],"mappings":"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"}