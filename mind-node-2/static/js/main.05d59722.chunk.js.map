{"version":3,"sources":["components/LocalStorageDataPersistence.tsx","util/lang.ts","util/ui.ts","components/MindNodeCard.tsx","util/dom.ts","components/MindNodeInfo.tsx","components/Selector.tsx","sssp-api/SimpleStorageClient.ts","components/SSSPDataPersistence.tsx","components/TextDataPersistence.tsx","components/TranditionalDataPersistence.tsx","data/adapters/DataAdapterV0V1.ts","data/ChainDataAdapter.ts","data/DataLoader.ts","data/DataUtils.ts","util/mathematics.ts","painter/LinkPainter.ts","painter/BezierCurveLinkPainter.ts","painter/StraightLineLinkPainter.ts","tools/Tool.ts","tools/CopyNodeTool.ts","tools/CreateNodeTool.ts","tools/DragNodeTool.ts","tools/DragPoolTool.ts","tools/LinkNodeTool.ts","tools/SelectTool.ts","tools/AutoTool.ts","constants.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["KEY_PREFIX","LocalStorageDataPersistence","props","state","key","Promise","resolve","reject","actualKey","dataString","localStorage","getItem","Error","setItem","value","this","onChange","e","setState","target","Component","toClassName","obj","arr","Object","prototype","hasOwnProperty","call","element","push","join","arrayFilterNonNull","array","filter","undefined","NOP","arrayFindOrFirst","predicate","length","find","getRect","ref","box","current","getBoundingClientRect","x","y","width","height","MindNodeCard","selfRef","React","createRef","onRectUpdate","node","uid","position","text","background","color","anchor","anchorX","anchorY","linking","choosen","fixedX","fixedY","className","style","left","top","onClick","onMouseDown","onMouseMove","onMouseUp","split","map","it","i","escapeWhiteSpace","replace","STOP_PROPAGATION","stopPropagation","warpStopPropagation","handle","STOP_MOUSE_PROPAGATION","MindNodeInfo","getBrief","nodes","get","inputingBackground","inputingColor","inputingText","outPorts","inPorts","toFixed","setBackground","setColor","setText","onUpdate","Selector","p","option","options","o","getValue","disabled","getText","SimpleStorageClient","baseUrl","action","path","searchParamEntries","Array","from","searchParams","entries","setParam","pair","origin","pathname","k","v","encodeURIComponent","url","method","fetch","mode","then","response","json","jsonData","catch","constructPromise","constructUrl","ACTION_GET_INFORMATION","METHOD_GET","ACTION_GET_CHILDREN","ACTION_GET","headers","textData","urlString","ACTION_ADD","console","log","METHOD_POST","body","ACTION_DELETE","ACTION_RECYCLE","ACTION_RENAME","PROTOCOL_OPTION_AUTO","id","name","PROTOCOL_OPTION_HTTP","PROTOCOL_OPTION_HTTPS","getProtocolOptions","SSSPDataPersistence","client","toggleConfirmed","s","locked","setupClient","defaultState","host","protocol","savedUrl","KEY","URL","error","loadOrCreateState","add","succeeded","window","location","toString","TextDataPersistence","copy","navigator","clipboard","writeText","dataText","paste","readText","TranditionalDataPersistence","file","outputFileName","reader","FileReader","onload","result","onerror","onabort","readAsText","link","document","createElement","href","createObjectURL","Blob","type","download","click","files","setFile","DataAdapterV0V1","source","version","linkPainterId","uidCounter","offset","scaleFactor","scale","ChainDataAdapter","sourceVersion","targetVersion","chain","data","adapt","DataLoader","currentVersion","adaptersBySourceVersion","Map","adapter","candidates","set","newTargetVersion","newAdapter","nextAdapter","getAdapter","rawData","rawSourceVersion","createNode","DATA_LOADER","dataLoader","addAdapter","initialzieDataLoader","unlinkNodes","sourceNode","targetNode","Set","has","delete","Vec2Util","angle","modulo","Number","isNaN","m","Math","cos","sin","vs","reduce","v1","v2","atan2","sqrt","n","getBezierPointAndAngle","t","controlPoints","cps","nextCPs","p0X","p0Y","p1X","p1Y","finalP0X","finalP0Y","finalP1X","finalP1Y","deltaX","deltaY","finalPoint","finalAngle","LinkPainter","env","canvas","g","getContext","clearRect","fix","getPoolFix","pointCache","drawLinks","cachedPoint","point","virtualDstPos","rect","getNodeRect","bind","beginPath","moveTo","lineWidth","lineTo","PI","fill","BezierCurveLinkPainter","getPoint","angleCache","getAngle","NaN","nodePosition","validInPorts","u","validOutPorts","isSelected","selectedNodeUids","inRelative","inNodeUid","outRelative","outNodeUid","strokeStyle","fillStyle","values","sourcePoint","slice","targetNodeUid","targetPoint","sourceAngle","targetAngle","baseLength","sourceControlHandleLength","targetControlHandleLength","controlPoint1","controlPoint2","centerPoint","centerAngle","bezierCurveTo","stroke","drawArrow","StraightLineLinkPainter","direction","ToolBase","CopyNodeTool","actived","startMousePosition","startNodePositions","mousePosition","clear","copiedNodes","copyNode","genUid","forEach","delta","startPosition","CreateNodeTool","pixel2pool","addNode","DragNodeTool","DragPoolTool","startPoolOffset","LinkNodeTool","dst","src","linkNodes","COMPARATOR","a","b","SelectTool","selectionArea","nativeEvent","a1","a2","index","equalsArray","sort","right","bottom","isNodeInRange","ctrlKey","AutoTool","tool","event","button","shiftKey","preventDefault","altKey","onStart","onMove","onEnd","TOOL_FLAGS","TOOL_NAMES","App","persistences","linkPainters","persistenceRef","mounted","onGlobalKeyDown","save","onGlobalKeyUp","deleteSelectedNodes","poolRef","canvasRef","hideNodeInfoView","editingNodeUid","nodeCardRects","resetView","notifyUpdate","dirty","update","updateStateNodes","drawLines","requestAnimationFrame","createAndAddNode","onClickNode","pointerMoving","getToolEvent","ev","onMouseLeave","load","persistence","showMessage","resolveTextDataString","pool","buildPool","lastSavedTime","Date","JSON","stringify","setNodeChoosen","unchooseAllNodes","ou","iu","toolFlag","linkPainter","messages","addEventListener","setTool","removeEventListener","prevProps","prevState","snapshot","onContextMenu","renderTopBar","getAnchor","setNodeRect","onClickLinkButton","onClickChooseButton","renderSelectionArea","renderToolButtons","renderNodeInfo","renderBottomBar","renderMessages","canvasAndContext","context","get2dContext","paint","renderPersistence","f","size","toLocaleString","editingNode","updateNode","timestamp","message","now","concat","splice","sa","flag","clientX","clientY","poolCoord","pixelCoord","raw","loadPool","parse","lp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05d59722.chunk.js","sourcesContent":["import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface LocalStorageDataPersistenceState {\r\n    key: string;\r\n}\r\n\r\nexport const KEY_PREFIX = \"MindNodeData--\";\r\n\r\nexport default class LocalStorageDataPersistence extends Component<{}, LocalStorageDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            key: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const key = this.state.key;\r\n            if (!key) {\r\n                reject(new Error(\"No key specified!\"));\r\n                return;\r\n            }\r\n\r\n            const actualKey = KEY_PREFIX + key;\r\n\r\n            const dataString = localStorage.getItem(actualKey);\r\n            if (dataString) {\r\n                resolve(dataString);\r\n            } else {\r\n                reject(new Error(\"No data in this key: \" + key));\r\n            }\r\n        });\r\n    }\r\n    \r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            const key = this.state.key;\r\n            if (!key) {\r\n                reject(new Error(\"No key specified!\"));\r\n                return;\r\n            }\r\n\r\n            const actualKey = KEY_PREFIX + key;\r\n\r\n            localStorage.setItem(actualKey, dataString);\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>键名：</span>\r\n                <span>{KEY_PREFIX}</span>\r\n                <input \r\n                    value={this.state.key}\r\n                    onChange={e => this.setState(() => ({ key: e.target.value }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","\r\n// 将一个对象转换成className字符串\r\nexport function toClassName(obj: { [key: string]: (boolean | string) }): string {\r\n    const arr: Array<string> = [];\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            const element = obj[key];\r\n            if (typeof element === 'string') {\r\n                arr.push(element);\r\n            } else {\r\n                if (element) {\r\n                    arr.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return arr.join(' ');\r\n}\r\n\r\nexport function getMapValue<K, V>(map: Map<K, V>, key: K, handler: (value: V, key: K) => void) {\r\n    const value = map.get(key);\r\n    if (value) {\r\n        handler(value, key);\r\n    }\r\n}\r\n\r\nexport function filterSet<T>(set: Set<T>, filterFn: (e: T) => boolean): Set<T> {\r\n    const r: T[] = [];\r\n    set.forEach(it => {\r\n        if (filterFn(it)) {\r\n            r.push(it);\r\n        }\r\n    });\r\n    return new Set(r);\r\n}\r\n\r\nexport function equalsArray<T>(a1: Array<T>, a2: Array<T>): boolean {\r\n    if (a1.length !== a2.length) return false;\r\n    for (let index = 0; index < a1.length; index++) {\r\n        if (a1[index] !== a2[index]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function arrayFilterNonNull<T, E = T | undefined | null>(array: Array<E>): Array<T> {\r\n    return array.filter(e => e || (e !== null && e !== undefined)) as any;\r\n}\r\n\r\nexport const NOP = () => {};\r\n\r\nexport function arrayFindOrFirst<E>(array: Array<E>, predicate: (element: E) => boolean): E {\r\n    if (array.length === 0) throw new Error(\"Array must have at least one element!\");\r\n    return array.find(predicate) || array[0];\r\n}\r\n","import { RefObject } from \"react\";\r\nimport { Rect } from \"../interfaces\";\r\nimport { Vec2 } from \"./mathematics\";\r\n\r\nexport function get2dContext(ref: RefObject<HTMLCanvasElement>): [HTMLCanvasElement, CanvasRenderingContext2D] | null {\r\n    const canvas = ref.current;\r\n    if (!canvas) return null;\r\n    const context = canvas.getContext('2d');\r\n    if (!context) return null;\r\n    return [canvas, context];\r\n}\r\n\r\nexport function getRect<T extends HTMLElement>(ref: RefObject<T>): Rect {\r\n    const box = ref.current?.getBoundingClientRect();\r\n    return {\r\n        x: box?.x || 0,\r\n        y: box?.y || 0,\r\n        width: box?.width || 0,\r\n        height: box?.height || 0,\r\n    };\r\n}\r\n\r\nexport function getPosition(rect?: Rect): Vec2 {\r\n    return [rect?.x || 0, rect?.y || 0];\r\n}","import React from \"react\";\r\nimport { Component, MouseEvent, RefObject } from \"react\";\r\nimport { Vec2 } from \"../util/mathematics\";\r\nimport \"../styles/MindNodeCard.css\";\r\nimport { MindNode, Rect } from \"../interfaces\";\r\nimport { toClassName } from \"../util/lang\";\r\nimport { getRect } from \"../util/ui\";\r\n\r\ninterface MindNodeCardProps {\r\n    anchor: Vec2;\r\n    node: MindNode;\r\n    linking: boolean;\r\n    choosen: boolean;\r\n    onClick: (e: MouseEvent, uid: number) => void;\r\n    onMouseDown: (e: MouseEvent, uid: number) => void;\r\n    onMouseMove: (e: MouseEvent, uid: number) => void;\r\n    onMouseUp: (e: MouseEvent, uid: number) => void;\r\n    onRectUpdate: (uid: number, rect: Rect) => void;\r\n    onClickLinkButton: (uid: number) => void;\r\n    onClickChooseButton: (uid: number, choosen: boolean) => void;\r\n}\r\n\r\nclass MindNodeCard extends Component<MindNodeCardProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.onRectUpdate(this.props.node.uid, getRect(this.selfRef));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.props.onRectUpdate(this.props.node.uid, getRect(this.selfRef));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            node: {\r\n                uid,\r\n                position: [x, y],\r\n                text,\r\n                background,\r\n                color,\r\n            },\r\n            anchor: [anchorX, anchorY],\r\n            linking,\r\n            choosen,\r\n        } = this.props;\r\n\r\n        // 实际的坐标\r\n        const fixedX = x + anchorX;\r\n        const fixedY = y + anchorY;\r\n\r\n        return (\r\n            <div\r\n                className={toClassName({ \"MindNodeCard\": true, linking, choosen })}\r\n                ref={this.selfRef}\r\n                style={{\r\n                    left: `${fixedX}px`,\r\n                    top: `${fixedY}px`,\r\n                }}\r\n                onClick={e => this.props.onClick(e, uid)}\r\n                onMouseDown={e => this.props.onMouseDown(e, uid)}\r\n                onMouseMove={e => this.props.onMouseMove(e, uid)}\r\n                onMouseUp={e => this.props.onMouseUp(e, uid)}\r\n            >\r\n                <div className=\"frame\" />\r\n\r\n                <div className=\"static\" style={{ background }}>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"text\" style={{ color }}>\r\n                            {text.split(\"\\n\").map((it, i) => (<p key={i}>{escapeWhiteSpace(it)}</p>))}\r\n                        </div>\r\n\r\n                        {/* <div className=\"tool-bar\">\r\n                            <RadioButton\r\n                                key={linking ? 11 : 10}\r\n                                value={linking}\r\n                                onChange={() => this.props.onClickLinkButton(uid)}\r\n                            >\r\n                                <Icon name=\"link\" size=\"80%\" />\r\n                            </RadioButton>\r\n\r\n                            <RadioButton\r\n                                key={choosen ? 1 : 0}\r\n                                value={choosen}\r\n                                onChange={it => this.props.onClickChooseButton(uid, it)}\r\n                            >\r\n                                <Icon name=\"checked\" size=\"80%\" />\r\n                            </RadioButton>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //#region 拖拽相关\r\n\r\n    private selfRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n    //#endregion\r\n}\r\n\r\nexport default MindNodeCard;\r\n\r\nfunction escapeWhiteSpace(text: string): string {\r\n    return text.replace(/ /g, \"\\u00a0\");\r\n}","import { BaseSyntheticEvent } from \"react\";\r\n\r\nexport const STOP_PROPAGATION = (e: Event | BaseSyntheticEvent) => e.stopPropagation();\r\nexport function warpStopPropagation<TEvent extends (Event | BaseSyntheticEvent), TOut = void>(handle: (e: TEvent) => TOut): (e: TEvent) => TOut {\r\n    return e => {\r\n        e.stopPropagation();\r\n        return handle(e);\r\n    };\r\n}\r\n\r\nexport const STOP_MOUSE_PROPAGATION = {\r\n    onMouseDown: STOP_PROPAGATION,\r\n    onMouseMove: STOP_PROPAGATION,\r\n    onMouseUp: STOP_PROPAGATION,\r\n};","import { Component } from \"react\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport \"../styles/MindNodeInfo.css\";\r\nimport { STOP_PROPAGATION } from \"../util/dom\";\r\n\r\ninterface MindNodeInfoProps {\r\n    node: MindNode;\r\n    nodes: Map<number, MindNode>;\r\n    onUpdate: (node: MindNode) => void;\r\n}\r\n\r\ninterface MindNodeInfoState {\r\n    inputingBackground: string;\r\n    inputingColor: string;\r\n    inputingText: string;\r\n}\r\n\r\nclass MindNodeInfo extends Component<MindNodeInfoProps, MindNodeInfoState> {\r\n    constructor(props: MindNodeInfoProps) {\r\n        super(props);\r\n        this.state = {\r\n            inputingBackground: props.node.background,\r\n            inputingColor: props.node.color,\r\n            inputingText: props.node.text,\r\n        };\r\n    }\r\n    render() {\r\n        const { uid, position, outPorts, inPorts } = this.props.node;\r\n        return (\r\n            <div \r\n                className=\"MindNodeInfo\"\r\n                onMouseDown={STOP_PROPAGATION}\r\n                onMouseMove={STOP_PROPAGATION}\r\n                onMouseUp={STOP_PROPAGATION}\r\n            >\r\n                <div className=\"top-bar\"></div>\r\n\r\n                <div className=\"content\">\r\n                    <p>\r\n                        <span className=\"title\">UID：</span>\r\n                        <span className=\"text\">#{uid}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span className=\"title\">位置：</span>\r\n                        <span className=\"text\">({position.map((it: number) => it.toFixed(1)).join(\", \")})</span>\r\n                    </p>\r\n\r\n                    <p className=\"field-color\">\r\n                        <span className=\"title\">背景样式：</span>\r\n                        <input\r\n                            className=\"color-input\"\r\n                            value={this.state.inputingBackground}\r\n                            onChange={e => this.setBackground(e.target.value)}\r\n                        />\r\n                        <div className=\"color-input-preview\" style={{ background: this.state.inputingBackground }} />\r\n                    </p>\r\n\r\n                    <p className=\"field-color\">\r\n                        <span className=\"title\">文字样式：</span>\r\n                        <input\r\n                            className=\"color-input\"\r\n                            value={this.state.inputingColor}\r\n                            onChange={e => this.setColor(e.target.value)}\r\n                        />\r\n                        <div className=\"color-input-preview\" style={{ background: this.state.inputingColor }} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span className=\"title\">内容：</span>\r\n                        <textarea\r\n                            className=\"text-input\"\r\n                            value={this.state.inputingText}\r\n                            onChange={e => this.setText(e.target.value)}\r\n                        />\r\n                    </p>\r\n\r\n                    <p className=\"title\">出线（{outPorts.length}个）：</p>\r\n                    <ol className=\"text\">\r\n                        {outPorts.map(uid => (<li key={uid} className=\"snapshot\">{this.getBrief(uid)}</li>))}\r\n                    </ol>\r\n\r\n                    <p className=\"title\">入线（{inPorts.length}个）：</p>\r\n                    <ol className=\"text\">\r\n                        {inPorts.map(uid => (<li key={uid} className=\"snapshot\">{this.getBrief(uid)}</li>))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.setState(() => ({ inputingText: text }));\r\n        const node: MindNode = { ...this.props.node, text };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    setBackground(background: string) {\r\n        this.setState(() => ({ inputingBackground: background }));\r\n        const node: MindNode = { ...this.props.node, background };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    setColor(color: string) {\r\n        this.setState(() => ({ inputingColor: color }));\r\n        const node: MindNode = { ...this.props.node, color };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    getBrief = (uid: number) => {\r\n        const node = this.props.nodes.get(uid);\r\n        if (node) {\r\n            return '#' + uid + '：' + node.text;\r\n        } else {\r\n            return '#' + uid;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MindNodeInfo;","import { ChangeEvent, Component, ReactNode } from \"react\";\r\n\r\nexport interface SelectorProps<TOption> {\r\n    value: string;\r\n    disabled?: boolean;\r\n    options: TOption[];\r\n    getText: (option: TOption) => string;\r\n    getValue: (option: TOption) => string;\r\n    onChange: (option: TOption) => void;\r\n}\r\n\r\nexport default class Selector<TOption> extends Component<SelectorProps<TOption>> {\r\n    render(): ReactNode {\r\n        const p = this.props;\r\n        return (\r\n            <select value={p.value} disabled={p.disabled} onChange={this.onChange} >\r\n                {this.props.options.map(o => (\r\n                    <option key={p.getValue(o)} value={p.getValue(o)}>{p.getText(o)}</option>\r\n                ))}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        const value = e.target.value;\r\n        const p = this.props;\r\n        const option = p.options.find(o => p.getValue(o) === value);\r\n        if (option) {\r\n            p.onChange(option);\r\n        }\r\n    }\r\n}","import { DirectoryInformationCache, ItemInformationCache, SSSPJsonResponseBody } from \"./ResponseTypes\";\r\n\r\nexport class SimpleStorageClient {\r\n\r\n    static readonly METHOD_GET = \"GET\";\r\n    static readonly METHOD_POST = \"POST\";\r\n\r\n    static readonly ACTION_GET = \"get\";\r\n    static readonly ACTION_GET_INFORMATION = \"get-information\";\r\n    static readonly ACTION_GET_CHILDREN = \"get-children\";\r\n    static readonly ACTION_ADD = \"add\";\r\n    static readonly ACTION_DELETE = \"delete\";\r\n    static readonly ACTION_RECYCLE = \"recycle\";\r\n    static readonly ACTION_RENAME = \"rename\";\r\n\r\n    private readonly baseUrl: URL;\r\n\r\n    constructor(baseUrl: URL) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    public constructUrl(action: string, path?: string, target?: string): string {\r\n        const searchParamEntries: [string, string][] = Array.from(this.baseUrl.searchParams.entries());\r\n\r\n        // URLSearchParams会导致path的空格变成加号，是十分严重且SB的行为\r\n        // searchParams.set(\"action\", action);\r\n        // if (typeof path === \"string\") {\r\n        //     searchParams.set(\"path\", path);\r\n        // }\r\n        // if (typeof target === \"string\") {\r\n        //     searchParams.set(\"target\", target);\r\n        // }\r\n\r\n        function setParam(key: string, value: string) {\r\n            const pair = searchParamEntries.find(([k]) => k === key);\r\n            if (pair) {\r\n                pair[1] = value;\r\n            } else {\r\n                searchParamEntries.push([key, value]);\r\n            }\r\n        }\r\n\r\n        searchParamEntries.push([\"action\", action]);\r\n        if (typeof path === \"string\") {\r\n            setParam(\"path\", path);\r\n        }\r\n        if (typeof target === \"string\") {\r\n            setParam(\"target\", target);\r\n        }\r\n\r\n        return this.baseUrl.origin + this.baseUrl.pathname + \"?\" + searchParamEntries.map(([k, v]) => (k + \"=\" + encodeURIComponent(v))).join(\"&\");\r\n    }\r\n\r\n    public constructPromise<T>(url: string, method: string): Promise<SSSPJsonResponseBody<T>> {\r\n        return new Promise((resolve, reject) => fetch(url, { method, mode: \"no-cors\" })\r\n            .then(response =>\r\n                response.json().then(jsonData => resolve(jsonData)).catch(e => reject(e))\r\n            ).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public getInformation(path: string): Promise<SSSPJsonResponseBody<ItemInformationCache>> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_GET_INFORMATION, path), SimpleStorageClient.METHOD_GET);\r\n    }\r\n\r\n    public getChildren(path: string): Promise<SSSPJsonResponseBody<DirectoryInformationCache>> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_GET_CHILDREN, path), SimpleStorageClient.METHOD_GET);\r\n    }\r\n\r\n    public getText(path?: string): Promise<string> {\r\n        return new Promise((resolve, reject) =>\r\n            fetch(\r\n                this.constructUrl(SimpleStorageClient.ACTION_GET, path),\r\n                { \r\n                    method: SimpleStorageClient.METHOD_GET,\r\n                    headers: [\r\n                        [\"Content-Type\", \"text/plain\"],\r\n                    ],\r\n                }\r\n            ).then(response => {\r\n                response.text().then(textData => resolve(textData)).catch(e => reject(e));\r\n            }).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public add(textData: string, path?: string): Promise<SSSPJsonResponseBody> {\r\n        const urlString = this.constructUrl(SimpleStorageClient.ACTION_ADD, path);\r\n        console.log(\"add\", urlString);\r\n        return new Promise((resolve, reject) =>\r\n            fetch(\r\n                urlString,\r\n                { method: SimpleStorageClient.METHOD_POST, body: textData }\r\n            ).then(response =>\r\n                response.json().then(jsonData => resolve(jsonData)).catch(e => reject(e))\r\n            ).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public delete(path: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_DELETE, path), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n    public recycle(path: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_RECYCLE, path), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n    public rename(path: string, target: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_RENAME, path, target), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\nimport { SimpleStorageClient } from \"../sssp-api/SimpleStorageClient\";\r\nimport Selector from \"./Selector\";\r\n\r\ninterface ProtocolOption {\r\n    id: string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport interface SSSPDataPersistenceState {\r\n    host: string;\r\n    path: string;\r\n    locked: boolean;\r\n    protocol: ProtocolOption;\r\n}\r\n\r\nconst PROTOCOL_OPTION_AUTO = { id: \"auto\", name: \"自动\", value: \"\" };\r\nconst PROTOCOL_OPTION_HTTP = { id: \"http\", name: \"HTTP\", value: \"http\" };\r\nconst PROTOCOL_OPTION_HTTPS = { id: \"https\", name: \"HTTPS\", value: \"https\" };\r\n\r\nfunction getProtocolOptions() {\r\n    return [PROTOCOL_OPTION_AUTO, PROTOCOL_OPTION_HTTP, PROTOCOL_OPTION_HTTPS];\r\n}\r\n\r\nexport default class SSSPDataPersistence extends Component<{}, SSSPDataPersistenceState> implements DataPersistence {\r\n\r\n    private client: SimpleStorageClient | null = null;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = loadOrCreateState();\r\n        if (this.state.locked) {\r\n            this.setupClient();\r\n        }\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        if (!this.state.locked) return new Promise((resolve, reject) => reject(new Error(\"未锁定！\")));\r\n        const client = this.client;\r\n        if (client) return client.getText(this.state.path);\r\n        return new Promise((resolve, reject) => reject(new Error(\"未知错误！\")));\r\n    }\r\n\r\n    save(dataString: string): Promise<boolean> {\r\n        if (!this.state.locked) return new Promise((resolve, reject) => reject(new Error(\"未锁定！\")));\r\n        const client = this.client;\r\n        if (client) return new Promise((resolve, reject) => client.add(dataString, this.state.path).then((body) => resolve(body.succeeded)).catch(reject));\r\n        return new Promise((resolve, reject) => reject(new Error(\"未知错误！\")));\r\n    }\r\n\r\n    toggleConfirmed = () => {\r\n        this.setState(s => {\r\n            const locked = !s.locked;\r\n            if (locked) {\r\n                this.setupClient();\r\n            } else {\r\n                this.client = null;\r\n            }\r\n            return { locked };\r\n        });\r\n    }\r\n\r\n    setupClient() {\r\n        let protocol = \"http\";\r\n        if (this.state.protocol.id === \"auto\") {\r\n            protocol = window.location.protocol.replace(/:$/g, \"\");\r\n        } else {\r\n            protocol = this.state.protocol.value;\r\n        }\r\n        const url = new URL(`${protocol}://${this.state.host}/?path=${encodeURIComponent(this.state.path)}`);\r\n        localStorage.setItem(KEY, url.toString());\r\n        // this.client = new SimpleStorageClient(new URL(`${window.location.protocol}//${this.state.host}/?path=${encodeURIComponent(this.state.path)}`));\r\n        this.client = new SimpleStorageClient(url);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <button onClick={this.toggleConfirmed}>{this.state.locked ? \"取消锁定\" : \"锁定\"}</button>\r\n                <Selector \r\n                    value={this.state.protocol.id}\r\n                    options={getProtocolOptions()}\r\n                    getText={o => o.name}\r\n                    getValue={o => o.id}\r\n                    disabled={this.state.locked} \r\n                    onChange={o => this.setState(() => ({ protocol: o }))}\r\n                />\r\n                <span>服务器：</span>\r\n                <input\r\n                    disabled={this.state.locked}\r\n                    value={this.state.host}\r\n                    onChange={e => this.setState(() => ({ host: e.target.value }))}\r\n                />\r\n                <span>文件路径：</span>\r\n                <input \r\n                    disabled={this.state.locked}\r\n                    value={this.state.path} \r\n                    onChange={e => this.setState(() => ({ path: e.target.value.replace(/\\\\/g, \"/\") }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst KEY = \"mind_node_2_sssp_cache\";\r\n\r\nfunction loadOrCreateState(): SSSPDataPersistenceState {\r\n    const defaultState = {\r\n        host: \"localhost:8888\",\r\n        path: \"C:/\",\r\n        locked: false,\r\n        protocol: PROTOCOL_OPTION_AUTO,\r\n    };\r\n    const savedUrl = localStorage.getItem(KEY);\r\n    if (savedUrl) {\r\n        try {\r\n            const url = new URL(savedUrl);\r\n            const protocol = url.protocol.replace(/:$/, \"\");\r\n            return {\r\n                host: url.host || defaultState.host,\r\n                path: url.searchParams.get(\"path\") || defaultState.path,\r\n                protocol: getProtocolOptions().find(p => p.value === protocol) || PROTOCOL_OPTION_AUTO,\r\n                locked: true, // 成功载入则自动给锁定\r\n            };\r\n        } catch (error) { }\r\n    }\r\n    return defaultState;\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface TextDataPersistenceState {\r\n    dataText: string;\r\n}\r\n\r\nexport default class TextDataPersistence extends Component<{}, TextDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            dataText: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve) => resolve(this.state.dataText));\r\n    }\r\n\r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.setState(() => ({ dataText: dataString }));\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    copy = () => {\r\n        window.navigator.clipboard.writeText(this.state.dataText);\r\n    }\r\n\r\n    paste = () => {\r\n        window.navigator.clipboard.readText().then(text => this.setState(() => ({ dataText: text })));\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>文本数据（JSON）：</span>\r\n                <textarea \r\n                    value={this.state.dataText} \r\n                    onChange={e => this.setState(() => ({ dataText: e.target.value.replace(/\\\\/g, \"/\") }))} \r\n                />\r\n                <button onClick={this.copy}>复制</button>\r\n                <button onClick={this.paste}>粘贴</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface TranditionalDataPersistenceState {\r\n    file: File | null;\r\n    outputFileName: string;\r\n}\r\n\r\nexport default class TranditionalDataPersistence extends Component<{}, TranditionalDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            outputFileName: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const file = this.state.file;\r\n            if (!file) {\r\n                reject(new Error(\"No file selected!\"));\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = reader.onabort = () => reject(new Error(\"Error encountered while reading \" + file.name));\r\n            reader.readAsText(file, \"utf-8\");\r\n        });\r\n    }\r\n    \r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            const outputFileName = this.state.outputFileName;\r\n            if (outputFileName.length <= 0) {\r\n                reject(new Error(\"No output file name!\"));\r\n                return;\r\n            }\r\n\r\n            const link: HTMLAnchorElement = document.createElement('a');\r\n            link.href = URL.createObjectURL(new Blob([dataString], {type: 'plain/text'}));\r\n            link.download = outputFileName;\r\n            link.click();\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    setFile(files: FileList | null) {\r\n        if (!files || files.length <= 0) return;\r\n        const file = files[0];\r\n\r\n        this.setState(s => ({ \r\n            file,\r\n            outputFileName: s.outputFileName || file.name,\r\n        }));\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>选择文件：</span>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={e => this.setFile(e.target.files)} \r\n                />\r\n                <span>保存文件名称：</span>\r\n                <input \r\n                    value={this.state.outputFileName}\r\n                    onChange={e => this.setState(() => ({ outputFileName: e.target.value }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","import { DataAdapter } from \"../DataAdapter\";\r\nimport { MindNodePoolV0 } from \"../versions/Version_0\";\r\nimport { MindNodePoolV1 } from \"../versions/Version_1\";\r\n\r\n\r\n\r\nexport default class DataAdapterV0V1 implements DataAdapter<MindNodePoolV0, MindNodePoolV1> {\r\n    \r\n    get sourceVersion(): number {\r\n        return 0;\r\n    }\r\n    \r\n    get targetVersion(): number {\r\n        return 1;\r\n    }\r\n\r\n    adapt(source: MindNodePoolV0): MindNodePoolV1 {\r\n        return {\r\n            version: 1,\r\n            linkPainterId: \"straight_line\",\r\n            uidCounter: source.uidCounter,\r\n            offset: source.offset,\r\n            scaleFactor: source.scale,\r\n            nodes: source.nodes,\r\n        };\r\n    }\r\n\r\n}","import { DataAdapter } from \"./DataAdapter\";\r\n\r\nexport default class ChainDataAdapter implements DataAdapter {\r\n    readonly sourceVersion: number;\r\n    readonly targetVersion: number;\r\n    readonly chain: DataAdapter[];\r\n\r\n    constructor(sourceVersion: number, targetVersion: number, chain: DataAdapter[]) {\r\n        this.sourceVersion = sourceVersion;\r\n        this.targetVersion = targetVersion;\r\n        this.chain = chain;\r\n    }\r\n\r\n    adapt(source: any) {\r\n        let data = source;\r\n        for (const adapter of this.chain) {\r\n            data = adapter.adapt(data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n}","import { MindNodePool } from \"../interfaces\";\r\nimport ChainDataAdapter from \"./ChainDataAdapter\";\r\nimport { DataAdapter } from \"./DataAdapter\";\r\n\r\nexport class DataLoader {\r\n    readonly currentVersion: number;\r\n\r\n    private adaptersBySourceVersion = new Map<number, Map<number, DataAdapter>>();\r\n\r\n    constructor(currentVersion: number) {\r\n        this.currentVersion = currentVersion;\r\n    }\r\n\r\n    addAdapter(adapter: DataAdapter) {\r\n        const sourceVersion = adapter.sourceVersion;\r\n        const targetVersion = adapter.targetVersion;\r\n\r\n        let candidates = this.adaptersBySourceVersion.get(sourceVersion);\r\n        if (!candidates) {\r\n            candidates = new Map();\r\n            this.adaptersBySourceVersion.set(sourceVersion, candidates);\r\n        }\r\n        candidates.set(targetVersion, adapter);\r\n    }\r\n\r\n    getAdapter(sourceVersion: number, targetVersion: number): DataAdapter | null {\r\n        const candidates = this.adaptersBySourceVersion.get(sourceVersion);\r\n        if (candidates) {\r\n            const adapter = candidates.get(targetVersion);\r\n            if (adapter) return adapter;\r\n            for (let newTargetVersion = 0; newTargetVersion < targetVersion; newTargetVersion++) {\r\n                const newAdapter = candidates.get(newTargetVersion);\r\n                if (newAdapter) {\r\n                    const nextAdapter = this.getAdapter(newTargetVersion, targetVersion);\r\n                    if (nextAdapter) return new ChainDataAdapter(sourceVersion, targetVersion, [newAdapter, nextAdapter]);\r\n                }\r\n            }\r\n            return null;\r\n        } else return null;\r\n    }\r\n\r\n    load(rawData: any): MindNodePool {\r\n        if (!rawData) throw new Error(\"Cannot load null!\");\r\n        \r\n        const rawSourceVersion = rawData.version;\r\n        const sourceVersion = (typeof rawSourceVersion === 'number') ? rawSourceVersion : 0;\r\n        if (sourceVersion === this.currentVersion) return rawData;\r\n        const adapter = this.getAdapter(sourceVersion, this.currentVersion);\r\n        if (!adapter) throw new Error(`Version not accept: From ${sourceVersion} to ${this.currentVersion}`);\r\n        \r\n        return adapter.adapt(rawData);\r\n    }\r\n}","import { MindNode, MindNodePool } from \"../interfaces\";\r\nimport { Vec2 } from \"../util/mathematics\";\r\nimport DataAdapterV0V1 from \"./adapters/DataAdapterV0V1\";\r\nimport { DataLoader } from \"./DataLoader\";\r\n\r\nexport interface CreateNodeProps {\r\n    uid: number,\r\n    position: Vec2,\r\n}\r\n\r\nexport function copyNode(node: MindNode, { uid, position }: CreateNodeProps): MindNode {\r\n    return {\r\n        ...node,\r\n        uid,\r\n        position,\r\n        inPorts: [],\r\n        outPorts: [],\r\n    };\r\n}\r\n\r\nexport function createNode({ uid, position }: CreateNodeProps): MindNode {\r\n    return {\r\n        uid,\r\n        position,\r\n        text: `#${uid}`,\r\n        background: '#223344',\r\n        color: '#ffffff',\r\n        outPorts: [],\r\n        inPorts: [],\r\n    };\r\n}\r\n\r\nconst DATA_LOADER: DataLoader = initialzieDataLoader();\r\n\r\nexport function loadPool(raw: MindNodePool): MindNodePool {\r\n    return DATA_LOADER.load(raw);\r\n}\r\n\r\nexport function linkNodes(sourceNode: MindNode, targetNode: MindNode): boolean {\r\n    if (sourceNode && targetNode && sourceNode.uid !== targetNode.uid) {\r\n        const outPorts = new Set(sourceNode.outPorts);\r\n        const inPorts = new Set(targetNode.inPorts);\r\n        if (outPorts.has(targetNode.uid)) {\r\n            outPorts.delete(targetNode.uid);\r\n            inPorts.delete(sourceNode.uid);\r\n        } else {\r\n            outPorts.add(targetNode.uid);\r\n            inPorts.add(sourceNode.uid);\r\n        }\r\n        sourceNode.outPorts = Array.from(outPorts);\r\n        targetNode.inPorts = Array.from(inPorts);\r\n        return true;\r\n    } else return false;\r\n}\r\n\r\nexport function unlinkNodes(sourceNode: MindNode, targetNode: MindNode) {\r\n    if (sourceNode && targetNode) {\r\n        const outPorts = new Set(sourceNode.outPorts);\r\n        const inPorts = new Set(targetNode.inPorts);\r\n        if (outPorts.has(targetNode.uid)) {\r\n            outPorts.delete(targetNode.uid);\r\n        }\r\n        if (inPorts.has(sourceNode.uid)) {\r\n            inPorts.delete(sourceNode.uid);\r\n        }\r\n        sourceNode.outPorts = Array.from(outPorts);\r\n        targetNode.inPorts = Array.from(inPorts);\r\n    }\r\n}\r\n\r\nfunction initialzieDataLoader(): DataLoader {\r\n    const dataLoader = new DataLoader(1);\r\n    \r\n    dataLoader.addAdapter(new DataAdapterV0V1());\r\n\r\n    return dataLoader;\r\n}","\r\nexport type Vec2 = [number, number];\r\nexport const X = 0;\r\nexport const Y = 1;\r\n\r\nexport function vec2FromAngle(angle: number, modulo: number = 1): Vec2 {\r\n    if (Number.isNaN(angle)) return [0, 0];\r\n    return [Math.cos(angle) * modulo, Math.sin(angle) * modulo]; \r\n}\r\n\r\nexport function vec2Copy(v: Vec2): Vec2 {\r\n    return [...v];\r\n}\r\n\r\nexport function vec2Add(...vs: Vec2[]): Vec2 {\r\n    return [vs.reduce((p, v) => p + v[0], 0), vs.reduce((p, v) => p + v[1], 0)];\r\n}\r\n\r\nexport function vec2Minus(v1: Vec2, v2: Vec2): Vec2 {\r\n    return [v1[X] - v2[X], v1[Y] - v2[Y]];\r\n}\r\n\r\nexport function vec2Normalize(v: Vec2): Vec2 {\r\n    if (v[0] === 0 && v[1] === 0) return [0, 0];\r\n    const angle = Math.atan2(v[1], v[0]);\r\n    return [Math.cos(angle), Math.sin(angle)];\r\n}\r\n\r\nexport function vec2Modulo(v: Vec2): number {\r\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n}\r\n\r\nexport function vec2Angle(v: Vec2): number {\r\n    return Math.atan2(v[1], v[0]);\r\n}\r\n\r\nexport function vec2Multiply(v: Vec2, n: number): Vec2 {\r\n    return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport const Vec2Util =  {\r\n    zero(): Vec2 {\r\n        return [0, 0]; \r\n    },\r\n\r\n    unit(): Vec2 {\r\n        return [1, 1]; \r\n    },\r\n\r\n    of(x: number = 0, y: number = 0): Vec2 {\r\n        return [x, y]; \r\n    },\r\n\r\n    fromAngle(angle: number, modulo: number = 1): Vec2 {\r\n        if (modulo === 0) return [0, 0];\r\n        if (Number.isNaN(angle)) return [0, 0];\r\n        const m = modulo || 0;\r\n        return [Math.cos(angle) * m, Math.sin(angle) * m]; \r\n    },\r\n\r\n    add(...vs: Vec2[]): Vec2 {\r\n        return [vs.reduce((p, v) => p + v[0], 0), vs.reduce((p, v) => p + v[1], 0)];\r\n    },\r\n\r\n    minus(v1: Vec2, v2: Vec2): Vec2 {\r\n        return [v1[X] - v2[X], v1[Y] - v2[Y]];\r\n    },\r\n    \r\n    normalize(v: Vec2): Vec2 {\r\n        if (v[0] === 0 && v[1] === 0) return [0, 0];\r\n        const angle = Math.atan2(v[1], v[0]);\r\n        return [Math.cos(angle), Math.sin(angle)];\r\n    },\r\n    \r\n    modulo(v: Vec2): number {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    },\r\n    \r\n    angle(v: Vec2): number {\r\n        return Math.atan2(v[1], v[0]);\r\n    },\r\n    \r\n    multiply(v: Vec2, n: number): Vec2 {\r\n        return [v[0] * n, v[1] * n];\r\n    },\r\n};\r\n\r\n\r\nexport class UidGenerator {\r\n\r\n    public uidCounter: number = 0;\r\n\r\n    constructor(uidCounter: number = 0) {\r\n        this.uidCounter = uidCounter;\r\n    }\r\n\r\n    generate() {\r\n        return this.uidCounter++;\r\n    }\r\n\r\n}\r\n\r\n// return [pointPosition, angle]\r\nexport function getBezierPointAndAngle(t: number, ...controlPoints: Vec2[]): [Vec2, number] {\r\n    if (controlPoints.length <= 1) return [controlPoints[0], 0];\r\n\r\n    let cps: Vec2[] = controlPoints;\r\n    while (cps.length > 2) {\r\n        const nextCPs: Vec2[] = [];\r\n        for (let i = 1; i < cps.length; i++) {\r\n            const [p0X, p0Y] = cps[i - 1];\r\n            const [p1X, p1Y] = cps[i];\r\n            nextCPs.push([p0X + (p1X - p0X) * t, p0Y + (p1Y - p0Y) * t]);\r\n        }\r\n        cps = nextCPs;\r\n    }\r\n    const [finalP0X, finalP0Y] = cps[0];\r\n    const [finalP1X, finalP1Y] = cps[1];\r\n    const deltaX = finalP1X - finalP0X;\r\n    const deltaY = finalP1Y - finalP0Y;\r\n    const finalPoint: Vec2 = [finalP0X + deltaX * t, finalP0Y + deltaY * t];\r\n    const finalAngle = Math.atan2(deltaY, deltaX);\r\n    return [finalPoint, finalAngle];\r\n}","import { ToolEnv } from \"../tools/Tool\";\r\nimport { Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport { Painter } from \"./Painter\";\r\n\r\nexport default abstract class LinkPainter implements Painter  {\r\n\r\n    protected readonly env: ToolEnv;\r\n\r\n    constructor(env: ToolEnv) {\r\n        this.env = env;\r\n    }\r\n    \r\n\r\n    paint(canvas: HTMLCanvasElement): void {\r\n        const g = canvas.getContext(\"2d\");\r\n        if (!g) {\r\n            console.log(\"Invalid canvas\");\r\n            return;\r\n        }\r\n\r\n        const env = this.env;\r\n\r\n        g.clearRect(0, 0, canvas.width, canvas.height);\r\n        // const anchor = this.getAnchor();\r\n        // 修正量，是画布的client位置\r\n        const fix: Vec2 = env.getPoolFix();\r\n\r\n        const pointCache = new Map<number, Vec2>();\r\n        function getPoint(uid: number): Vec2 {\r\n            const cachedPoint = pointCache.get(uid);\r\n            if (cachedPoint) return cachedPoint;\r\n\r\n            if (uid === -1) {\r\n                const point = Vec2Util.minus(env.virtualDstPos || [0, 0], fix);\r\n                pointCache.set(uid, point);\r\n                return point;\r\n            }\r\n\r\n            const rect = env.getNodeRect(uid);\r\n            if (rect) {\r\n                const point = Vec2Util.add(Vec2Util.minus([rect.x, rect.y], fix), [rect.width / 2, rect.height / 2]);\r\n                pointCache.set(uid, point);\r\n                return point;\r\n            }\r\n            return [0, 0];\r\n        };\r\n\r\n        this.drawLinks(g, getPoint.bind(this));\r\n    }\r\n\r\n    abstract drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void;\r\n\r\n    drawArrow(g: CanvasRenderingContext2D, position: Vec2, angle: number) {\r\n        g.beginPath();\r\n        g.moveTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle, g.lineWidth * 3)));\r\n        g.lineTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle + 0.8 * Math.PI, g.lineWidth * 3)));\r\n        g.lineTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle - 0.8 * Math.PI, g.lineWidth * 3)));\r\n        g.fill();\r\n    }\r\n    \r\n}","import { getBezierPointAndAngle, Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport LinkPainter from \"./LinkPainter\";\r\n\r\nexport default class BezierCurveLinkPainter extends LinkPainter {\r\n    drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void {\r\n        const env = this.env;\r\n        const nodes = env.nodes;\r\n        \r\n        const angleCache = new Map<number, number>();\r\n\r\n        function getAngle(uid: number): number {\r\n\r\n            // uid < 0 代表这是鼠标的链接预览\r\n            if (uid === -1) return NaN;\r\n\r\n            if (angleCache.has(uid)) return angleCache.get(uid) || NaN;\r\n\r\n            const nodePosition = getPoint(uid);\r\n\r\n            const node = nodes.get(uid);\r\n            if (!node) return NaN;\r\n\r\n            const inPorts = new Set(node.inPorts);\r\n            const outPorts = new Set(node.outPorts);\r\n\r\n            const validInPorts = node.inPorts.filter(u => !outPorts.has(u));\r\n            const validOutPorts = node.outPorts.filter(u => !inPorts.has(u));\r\n\r\n            const virtualDstPos = env.virtualDstPos;\r\n            const isSelected = env.selectedNodeUids.has(node.uid);\r\n\r\n            if (validInPorts.length === 0 || ((validOutPorts.length) === 0 && !(isSelected && !!virtualDstPos))) {\r\n                angleCache.set(node.uid, NaN);\r\n                return NaN;\r\n            }\r\n\r\n            let inRelative: Vec2 = [0, 0];\r\n            for (const inNodeUid of validInPorts) {\r\n                inRelative = Vec2Util.add(inRelative, Vec2Util.normalize(Vec2Util.minus(nodePosition, getPoint(inNodeUid))));\r\n            }\r\n            inRelative = Vec2Util.normalize(inRelative);\r\n\r\n            let outRelative: Vec2 = [0, 0];\r\n            for (const outNodeUid of validOutPorts) {\r\n                outRelative = Vec2Util.add(outRelative, Vec2Util.normalize(Vec2Util.minus(getPoint(outNodeUid), nodePosition)));\r\n            }\r\n            if (isSelected && !!virtualDstPos) {\r\n                outRelative = Vec2Util.add(outRelative, Vec2Util.normalize(Vec2Util.minus(virtualDstPos, nodePosition)));\r\n            }\r\n            outRelative = Vec2Util.normalize(outRelative);\r\n\r\n            const finalPoint = Vec2Util.add(inRelative, outRelative);\r\n            const angle = Math.atan2(finalPoint[1], finalPoint[0]);\r\n\r\n            angleCache.set(node.uid, angle);\r\n            return angle;\r\n        };\r\n\r\n\r\n        // 开始画线\r\n        g.strokeStyle = \"#808080\";\r\n        g.fillStyle = \"#808080\";\r\n        g.lineWidth = 1.5;\r\n\r\n        for (const sourceNode of Array.from(env.nodes.values())) {\r\n            const sourcePoint = getPoint(sourceNode.uid);\r\n            const outPorts = sourceNode.outPorts.slice();\r\n            if (env.selectedNodeUids.has(sourceNode.uid) && env.virtualDstPos) {\r\n                outPorts.push(-1);\r\n            }\r\n\r\n            for (const targetNodeUid of outPorts) {\r\n\r\n                const targetPoint = getPoint(targetNodeUid);\r\n                const sourceAngle = getAngle(sourceNode.uid);\r\n                const targetAngle = getAngle(targetNodeUid);\r\n\r\n                const baseLength = Vec2Util.modulo(Vec2Util.minus(targetPoint, sourcePoint)) / 3;\r\n                const sourceControlHandleLength = isNaN(sourceAngle) ? 0 : baseLength;\r\n                const targetControlHandleLength = isNaN(targetAngle) ? 0 : baseLength;\r\n\r\n                const controlPoint1 = Vec2Util.add(sourcePoint, Vec2Util.fromAngle(sourceAngle || 0, sourceControlHandleLength));\r\n                const controlPoint2 = Vec2Util.minus(targetPoint, Vec2Util.fromAngle(targetAngle || 0, targetControlHandleLength));\r\n\r\n                const controlPoints: Vec2[] = [sourcePoint, controlPoint1, controlPoint2, targetPoint];\r\n\r\n                const [centerPoint, centerAngle] = getBezierPointAndAngle(0.55, ...controlPoints);\r\n\r\n\r\n                g.beginPath();\r\n                g.moveTo(...sourcePoint);\r\n                g.bezierCurveTo(...controlPoint1, ...controlPoint2, ...targetPoint);\r\n                g.stroke();\r\n                this.drawArrow(g, centerPoint, centerAngle);\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport LinkPainter from \"./LinkPainter\";\r\n\r\nexport default class StraightLineLinkPainter extends LinkPainter {\r\n    drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void {\r\n        const env = this.env;\r\n\r\n        // 开始画线\r\n        g.strokeStyle = \"#808080\";\r\n        g.fillStyle = \"#808080\";\r\n        g.lineWidth = 1.5;\r\n\r\n        for (const node of Array.from(env.nodes.values())) {\r\n            const sourcePoint = getPoint(node.uid);\r\n            const outPorts = node.outPorts.slice();\r\n            if (env.selectedNodeUids.has(node.uid) && env.virtualDstPos) {\r\n                outPorts.push(-1);\r\n            }\r\n\r\n            for (const targetNodeUid of outPorts) {\r\n                const targetPoint = getPoint(targetNodeUid);\r\n\r\n                g.beginPath();\r\n                g.moveTo(...sourcePoint);\r\n                g.lineTo(...targetPoint);\r\n                g.stroke();\r\n\r\n                const direction = Vec2Util.minus(targetPoint, sourcePoint);\r\n                this.drawArrow(g, Vec2Util.add(sourcePoint, Vec2Util.multiply(direction, 0.55)), Vec2Util.angle(direction));\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { MindNode, Rect } from \"../interfaces\";\r\nimport { Vec2 } from \"../util/mathematics\";\r\nimport { MouseEvent } from \"react\";\r\n\r\nexport interface ToolEvent {\r\n    mousePosition: Vec2;\r\n    node: MindNode | null;\r\n    nativeEvent: MouseEvent;\r\n}\r\n\r\nexport interface Tool {\r\n    onStart(event: ToolEvent): void; // 此时还未开始移动鼠标\r\n    onMove(event: ToolEvent): void; // 在onStart之后，鼠标移动才调用，如果鼠标没移动，则不调用；若鼠标移动过，则在onEnd之前回调用一次\r\n    onEnd(event: ToolEvent): void; // 此时鼠标停止移动\r\n}\r\n\r\nexport interface ToolEnv {\r\n    offset: Vec2;\r\n    scale: number;\r\n    // MindNode 实例可能会改变，所以在其它位置引用其uid较为妥当\r\n    nodes: Map<number, MindNode>;\r\n    addNode(node: MindNode): void;\r\n\r\n    // 保存的是节点矩形的缓存，会随着布局的变化而更新\r\n    getNodeRect(uid: number): Rect | null;\r\n\r\n    // 链接操作中，链接末尾鼠标的未知\r\n    virtualDstPos: Vec2 | null;\r\n    selectedNodeUids: Set<number>;\r\n    selectionArea: Rect | null;\r\n    pixel2pool(vec: Vec2): Vec2;\r\n    genUid(): number;\r\n\r\n    getAnchor(): Vec2;\r\n\r\n    // 修正量，是画布的client位置\r\n    getPoolFix(): Vec2;\r\n}\r\n\r\nexport abstract class ToolBase implements Tool {\r\n\r\n    protected env: ToolEnv;\r\n    constructor(env: ToolEnv) {\r\n        this.env = env;\r\n    }\r\n\r\n    abstract onStart(event: ToolEvent): void;\r\n\r\n    abstract onMove(event: ToolEvent): void;\r\n\r\n    abstract onEnd(event: ToolEvent): void;\r\n\r\n}","import { copyNode } from \"../data/DataUtils\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport { arrayFilterNonNull } from \"../util/lang\";\r\nimport { Vec2Util, Vec2, vec2Copy } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 复制节点\r\nexport class CopyNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n    private startNodePositions: Map<number, Vec2> = new Map();\r\n\r\n    onStart({ mousePosition, node }: ToolEvent): void {\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n\r\n        let selectedNodeUids: Array<number> = Array.from(this.env.selectedNodeUids.values());\r\n\r\n        // 如果按下去的节点是被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) {\r\n            selectedNodeUids = [node.uid];\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        // 复制选中节点\r\n        const copiedNodes = arrayFilterNonNull<MindNode>(Array.from(selectedNodeUids.values()).map(uid => this.env.nodes.get(uid)))\r\n            .map((node: MindNode) => copyNode(node, { uid: this.env.genUid(), position: vec2Copy(node.position) }));\r\n        console.log(\"copiedNodes\", copiedNodes);\r\n        // 清空选中节点\r\n        this.env.selectedNodeUids.clear()\r\n        // 把复制的节点加入节点池中，冰设置为选中\r\n        copiedNodes.forEach(n => {\r\n            this.env.nodes.set(n.uid, n);\r\n            this.env.selectedNodeUids.add(n.uid);\r\n        });\r\n\r\n        // 拖动所有选择节点一起移动\r\n        this.startNodePositions.clear();\r\n        for (const node of copiedNodes) {\r\n            if (!node) continue;\r\n            this.startNodePositions.set(node.uid, node.position);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        const delta = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.startNodePositions.forEach((startPosition, uid) => {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) return;\r\n            node.position = Vec2Util.add(startPosition, delta);\r\n        });\r\n    }\r\n\r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { createNode } from \"../data/DataUtils\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class CreateNodeTool extends ToolBase {\r\n\r\n    onStart(): void { }\r\n\r\n    onMove(): void { }\r\n\r\n    onEnd({ mousePosition }: ToolEvent): void {\r\n        const position = this.env.pixel2pool(mousePosition);\r\n        const uid = this.env.genUid();\r\n        const node: MindNode = createNode({ uid, position });\r\n        this.env.addNode(node);\r\n    }\r\n\r\n}","import { Vec2Util, Vec2 } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class DragNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n    private startNodePositions: Map<number, Vec2> = new Map();\r\n\r\n    onStart({ mousePosition, node }: ToolEvent): void {\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n\r\n        let selectedNodeUids: Array<number> = Array.from(this.env.selectedNodeUids.values());\r\n        // 如果按下去的节点是被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) { \r\n            selectedNodeUids = [node.uid];\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        // 拖动所有选择节点一起移动\r\n        this.startNodePositions.clear();\r\n        for (const uid of selectedNodeUids) {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) continue;\r\n            this.startNodePositions.set(uid, node.position);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        \r\n        \r\n        const delta = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.startNodePositions.forEach((startPosition, uid) => {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) return;\r\n            node.position = Vec2Util.add(startPosition, delta);\r\n        });\r\n    }\r\n    \r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { Vec2Util, Vec2 } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class DragPoolTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startPoolOffset: Vec2 = Vec2Util.zero();\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n\r\n    onStart({ mousePosition }: ToolEvent): void {\r\n        this.startPoolOffset = this.env.offset;\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.env.offset = Vec2Util.add(this.startPoolOffset, Vec2Util.minus(mousePosition, this.startMousePosition));\r\n    }\r\n    \r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.startPoolOffset = Vec2Util.zero();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { linkNodes } from \"../data/DataUtils\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class LinkNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n\r\n    onStart({ node }: ToolEvent): void {\r\n        if (!node) return;\r\n\r\n        this.actived = true;\r\n\r\n        // 如果按下去的节点是没被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) {\r\n            this.env.selectedNodeUids = new Set([node.uid]);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        this.env.virtualDstPos = mousePosition;\r\n    }\r\n\r\n    onEnd({ node }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        this.env.virtualDstPos = null;\r\n\r\n        if (node) {\r\n            const dst = node;\r\n            this.env.selectedNodeUids.forEach(uid => {\r\n                const src = this.env.nodes.get(uid);\r\n                if (src) {\r\n                    linkNodes(src, dst);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { MindNode } from \"../interfaces\";\r\nimport { equalsArray } from \"../util/lang\";\r\nimport { Vec2, Vec2Util, X, Y } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n\r\nconst COMPARATOR = (a: number, b: number) => a - b;\r\n\r\n// 拖动整个节点池\r\nexport class SelectTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n\r\n    onStart({ mousePosition }: ToolEvent): void {\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        const [width, height] = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.env.selectionArea = {\r\n            x: this.startMousePosition[X],\r\n            y: this.startMousePosition[Y],\r\n            width,\r\n            height,\r\n        };\r\n    }\r\n    \r\n    onEnd({ mousePosition, node, nativeEvent }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        let selectedNodeUids: Array<number> = [];\r\n        if (equalsArray(this.startMousePosition, mousePosition)) { // 没有移动，那么就选中当前这个节点\r\n            if (node) {\r\n                selectedNodeUids = [node.uid];\r\n            }\r\n        } else { // 有移动，那么范围选取\r\n            const [left, right] = [this.startMousePosition[X], mousePosition[X]].sort(COMPARATOR);\r\n            const [top, bottom] = [this.startMousePosition[Y], mousePosition[Y]].sort(COMPARATOR);\r\n            selectedNodeUids = Array.from(this.env.nodes.values())\r\n                .filter(node => this.isNodeInRange(node, left, right, top, bottom))\r\n                .map(node => node.uid);\r\n        }\r\n\r\n        if (nativeEvent.ctrlKey) {\r\n            selectedNodeUids.forEach(it => this.env.selectedNodeUids.add(it));\r\n        } else {\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        \r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.env.selectionArea = null;\r\n        this.actived = false;\r\n    }\r\n\r\n    isNodeInRange(node: MindNode, left: number, right: number, top: number, bottom: number) {\r\n        const rect = this.env.getNodeRect(node.uid);\r\n        if (!rect) return false;\r\n        const { x, y, width, height } = rect;\r\n        return (x >= left && y >= top && x + width < right && y + height < bottom);\r\n    }\r\n\r\n}","import { MOUSE_BUTTON_MIDDLE, MOUSE_BUTTON_RIGHT } from \"../constants\";\r\nimport { CopyNodeTool } from \"./CopyNodeTool\";\r\nimport { CreateNodeTool } from \"./CreateNodeTool\";\r\nimport { DragNodeTool } from \"./DragNodeTool\";\r\nimport { DragPoolTool } from \"./DragPoolTool\";\r\nimport { LinkNodeTool } from \"./LinkNodeTool\";\r\nimport { SelectTool } from \"./SelectTool\";\r\nimport { Tool, ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class AutoTool extends ToolBase {\r\n\r\n    private tool: Tool | null = null;\r\n\r\n    onStart(event: ToolEvent): void {\r\n        const { node, nativeEvent } = event;\r\n        if (nativeEvent.button === MOUSE_BUTTON_MIDDLE) {\r\n            this.tool = new DragPoolTool(this.env);\r\n        } else if (nativeEvent.button === MOUSE_BUTTON_RIGHT) {\r\n            this.tool = new LinkNodeTool(this.env);\r\n        } else if (nativeEvent.ctrlKey) {\r\n            this.tool = new SelectTool(this.env);\r\n        } else if (nativeEvent.shiftKey) {\r\n            this.tool = new CreateNodeTool(this.env);\r\n            nativeEvent.preventDefault();\r\n        } else if (nativeEvent.altKey) {\r\n            this.tool = new CopyNodeTool(this.env);\r\n        } else if (node) {\r\n            this.tool = new DragNodeTool(this.env);\r\n        } else {\r\n            this.tool = new SelectTool(this.env);\r\n        }\r\n        this.tool.onStart(event);\r\n    }\r\n\r\n    onMove(event: ToolEvent): void {\r\n        this.tool?.onMove(event);\r\n    }\r\n    \r\n    onEnd(event: ToolEvent): void {\r\n        this.tool?.onEnd(event);\r\n        this.tool = new SelectTool(this.env);\r\n    }\r\n\r\n}","export const MOUSE_BUTTON_LEFT = 0;\r\nexport const MOUSE_BUTTON_MIDDLE = 1;\r\nexport const MOUSE_BUTTON_RIGHT = 2;","import React, { Component, MouseEvent, RefObject } from 'react';\r\nimport './App.css';\r\nimport LocalStorageDataPersistence from './components/LocalStorageDataPersistence';\r\nimport MindNodeCard from './components/MindNodeCard';\r\nimport MindNodeInfo from './components/MindNodeInfo';\r\nimport Selector from './components/Selector';\r\nimport SSSPDataPersistence from './components/SSSPDataPersistence';\r\nimport TextDataPersistence from './components/TextDataPersistence';\r\nimport TranditionalDataPersistence from './components/TranditionalDataPersistence';\r\nimport { createNode, loadPool, unlinkNodes } from './data/DataUtils';\r\nimport { LinkPainterId } from './data/versions/Version_1';\r\nimport { MindNode, MindNodePool, Rect } from './interfaces';\r\nimport BezierCurveLinkPainter from './painter/BezierCurveLinkPainter';\r\nimport LinkPainter from './painter/LinkPainter';\r\nimport StraightLineLinkPainter from './painter/StraightLineLinkPainter';\r\nimport DataPersistence from './persistence/DataPersistence';\r\nimport { AutoTool } from './tools/AutoTool';\r\nimport { CopyNodeTool } from './tools/CopyNodeTool';\r\nimport { CreateNodeTool } from './tools/CreateNodeTool';\r\nimport { DragNodeTool } from './tools/DragNodeTool';\r\nimport { DragPoolTool } from './tools/DragPoolTool';\r\nimport { LinkNodeTool } from './tools/LinkNodeTool';\r\nimport { SelectTool } from './tools/SelectTool';\r\nimport { Tool, ToolEnv, ToolEvent } from './tools/Tool';\r\nimport { STOP_MOUSE_PROPAGATION, warpStopPropagation } from './util/dom';\r\nimport { arrayFilterNonNull, arrayFindOrFirst, NOP } from './util/lang';\r\nimport { Vec2Util, Vec2 } from './util/mathematics';\r\nimport { get2dContext, getPosition, getRect } from './util/ui';\r\n\r\ntype ToolFlag = 'createNode' | 'linkNode' | 'copyNode' | 'dragNode' | 'dragPool' | 'select' | 'auto';\r\n\r\nconst TOOL_FLAGS: ToolFlag[] = ['createNode', 'linkNode', 'copyNode', 'dragNode', 'dragPool', 'select', 'auto'];\r\nconst TOOL_NAMES = {\r\n    'createNode': \"增加\",\r\n    'linkNode': \"链接\",\r\n    'copyNode': \"复制\",\r\n    'dragNode': \"移动\",\r\n    'dragPool': \"拖动\",\r\n    'select': \"选择\",\r\n    'auto': \"自动\",\r\n};\r\n\r\ninterface PersistenceSelection {\r\n    name: string;\r\n    id: string;\r\n    value: typeof Component;\r\n}\r\n\r\ninterface LinkPainterSelection {\r\n    name: string;\r\n    id: LinkPainterId;\r\n    value: LinkPainter;\r\n}\r\n\r\ninterface Message {\r\n    timestamp: number;\r\n    text: string;\r\n}\r\n\r\nexport interface AppProps {\r\n\r\n}\r\n\r\nexport interface AppState {\r\n    uidCounter: number;\r\n    nodes: Array<MindNode>;\r\n    offset: Vec2;\r\n    scaleFactor: number;\r\n    editingNodeUid: number | null;\r\n    toolFlag: ToolFlag | null;\r\n    selectionArea: Rect | null;\r\n    lastSavedTime: Date | null;\r\n    persistence: PersistenceSelection;\r\n    linkPainter: LinkPainterSelection;\r\n    messages: Message[];\r\n}\r\n\r\n\r\nclass App extends Component<AppProps, AppState> implements ToolEnv {\r\n\r\n    constructor(props: AppProps) {\r\n        super(props);\r\n        this.state = {\r\n            uidCounter: 0,\r\n            nodes: [],\r\n            offset: [0, 0],\r\n            scaleFactor: 1,\r\n            editingNodeUid: null,\r\n            toolFlag: null,\r\n            selectionArea: null,\r\n            lastSavedTime: null,\r\n            persistence: this.persistences[0],\r\n            linkPainter: this.linkPainters[0],\r\n            messages: [],\r\n        };\r\n    }\r\n\r\n    private readonly persistences: PersistenceSelection[] = [\r\n        { name: \"SSSP\", id: \"sssp\", value: SSSPDataPersistence },\r\n        { name: \"文本\", id: \"text\", value: TextDataPersistence },\r\n        { name: \"传统\", id: \"tranditional\", value: TranditionalDataPersistence },\r\n        { name: \"浏览器存储\", id: \"local_storage\", value: LocalStorageDataPersistence },\r\n    ];\r\n\r\n    private readonly linkPainters: LinkPainterSelection[] = [\r\n        { name: \"直线\", id: \"straight_line\", value: new StraightLineLinkPainter(this) },\r\n        { name: \"贝塞尔曲线\", id: \"bezier_curve\", value: new BezierCurveLinkPainter(this) },\r\n    ];\r\n\r\n    private persistenceRef: RefObject<Component & DataPersistence> = React.createRef();\r\n\r\n    private mounted = false;\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.updateStateNodes();\r\n        this.drawLines();\r\n        window.addEventListener('resize', this.resetView);\r\n        document.addEventListener('keydown', this.onGlobalKeyDown);\r\n        window.addEventListener('keyup', this.onGlobalKeyUp);\r\n        this.resetView();\r\n        this.setTool('auto');\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resetView);\r\n        document.removeEventListener('keydown', this.onGlobalKeyDown);\r\n        window.removeEventListener('keyup', this.onGlobalKeyUp);\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<AppProps>, prevState: Readonly<AppState>, snapshot?: any): void {\r\n        this.drawLines();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\" onContextMenu={e => e.preventDefault()}>\r\n                {/* 顶部工具栏 */}\r\n                {this.renderTopBar()}\r\n\r\n                {/* 实际池子 */}\r\n                <div\r\n                    className={\"node-pool\"}\r\n                    ref={this.poolRef}\r\n                    onMouseDown={this.onMouseDown}\r\n                    onMouseMove={this.onMouseMove}\r\n                    onMouseUp={this.onMouseUp}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                >\r\n                    <canvas ref={this.canvasRef} />\r\n\r\n                    {\r\n                        this.state.nodes.map(it => (\r\n                            <MindNodeCard\r\n                                key={it.uid}\r\n                                anchor={this.getAnchor()}\r\n                                node={it}\r\n                                linking={false}\r\n                                choosen={this.selectedNodeUids.has(it.uid)}\r\n                                onClick={this.onClickNode}\r\n                                onMouseDown={this.onMouseDown}\r\n                                onMouseMove={this.onMouseMove}\r\n                                onMouseUp={this.onMouseUp}\r\n                                onRectUpdate={(uid, rect) => this.setNodeRect(uid, rect)}\r\n                                onClickLinkButton={NOP}\r\n                                onClickChooseButton={NOP}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                    {this.renderSelectionArea()}\r\n                    {this.renderToolButtons()}\r\n                    {this.renderNodeInfo()}\r\n                </div>\r\n\r\n                {/* 底部状态栏 */}\r\n                {this.renderBottomBar()}\r\n\r\n                {/* 消息图层 */}\r\n                {this.renderMessages()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onGlobalKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === \"s\" && e.ctrlKey) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    onGlobalKeyUp = (e: KeyboardEvent) => {\r\n        if (e.key === 'Delete') {\r\n            this.deleteSelectedNodes();\r\n        }\r\n    }\r\n\r\n    //#region 渲染\r\n\r\n    // 池子UI组件\r\n    private poolRef: RefObject<HTMLDivElement> = React.createRef();\r\n    // 连接线的画板UI组件\r\n    private canvasRef: RefObject<HTMLCanvasElement> = React.createRef();\r\n\r\n    public virtualDstPos: Vec2 | null = null;\r\n\r\n    hideNodeInfoView = () => this.setState(() => ({ editingNodeUid: null }));\r\n\r\n    drawLines() {\r\n        const canvasAndContext = get2dContext(this.canvasRef);\r\n        if (!canvasAndContext) {\r\n            console.log(\"Invalid canvas\");\r\n            return;\r\n        }\r\n        const [canvas] = canvasAndContext;\r\n\r\n        this.state.linkPainter.value.paint(canvas);\r\n        return;\r\n    }\r\n\r\n    renderTopBar() {\r\n        return (\r\n            <div className=\"top-bar\">\r\n                <button onClick={this.save}>保存</button>\r\n                <button onClick={this.load}>载入</button>\r\n                <span>保存方式：</span>\r\n                <Selector \r\n                    value={this.state.persistence.id}\r\n                    options={this.persistences}\r\n                    getText={o => o.name}\r\n                    getValue={o => o.id}\r\n                    onChange={o => this.setState(() => ({ persistence: o }))}\r\n                />\r\n                <span>连线方式：</span>\r\n                <Selector \r\n                    value={this.state.linkPainter.id}\r\n                    options={this.linkPainters}\r\n                    getText={o => o.name}\r\n                    getValue={o => o.id}\r\n                    onChange={o => this.setState(() => ({ linkPainter: o }))}\r\n                />\r\n                {this.renderPersistence()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPersistence() {\r\n        const Component = this.state.persistence.value;\r\n        return (<Component ref={this.persistenceRef}/>);\r\n    }\r\n\r\n    renderToolButtons() {\r\n        return (\r\n            <div className=\"tool-bar\">\r\n                {TOOL_FLAGS.map(f => (\r\n                    <button\r\n                        key={f}\r\n                        {...STOP_MOUSE_PROPAGATION}\r\n                        onClick={warpStopPropagation(this.setTool.bind(this, f))}\r\n                        disabled={this.state.toolFlag === f}\r\n                    >{TOOL_NAMES[f]}</button>\r\n                ))}\r\n                <span>|</span>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.createAndAddNode)}>新增</button>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.unchooseAllNodes)}>取消选择</button>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.deleteSelectedNodes)}>删除所选</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBottomBar() {\r\n        return (\r\n            <div className=\"bottom-bar\">\r\n                <span className=\"piece\">总节点数：{this.state.nodes.length}</span>\r\n                <span className=\"piece\">选中节点数：{this.selectedNodeUids.size}</span>\r\n                <span className=\"piece\">最近保存于：{this.state.lastSavedTime?.toLocaleString() || \"未保存\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderNodeInfo() {\r\n        const editingNode = (this.state.editingNodeUid !== null) ? (this.nodes.get(this.state.editingNodeUid)) : null;\r\n        if (!editingNode) return null;\r\n\r\n        return (\r\n            <div className=\"node-info\">\r\n                <button className=\"icon\" onClick={this.hideNodeInfoView}>&gt;</button>\r\n                <MindNodeInfo\r\n                    key={editingNode.uid}\r\n                    node={editingNode}\r\n                    nodes={this.nodes}\r\n                    onUpdate={node => this.updateNode(node)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSelectionArea() {\r\n        const { selectionArea } = this.state;\r\n        if (!selectionArea) return null;\r\n        let { x, y, width, height } = selectionArea;\r\n        let [left, top] = Vec2Util.minus([x, y], this.getPoolFix());\r\n        if (width < 0) {\r\n            width = -width;\r\n            left = left - width;\r\n        }\r\n        if (height < 0) {\r\n            height = -height;\r\n            top = top - height;\r\n        }\r\n        return (\r\n            <div\r\n                className=\"section\"\r\n                style={{\r\n                    left: left + 'px',\r\n                    top: top + 'px',\r\n                    width: width + 'px',\r\n                    height: height + 'px',\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderMessages() {\r\n        return (\r\n            <div className=\"messages\">\r\n                {this.state.messages.map(({ timestamp, text }) => (\r\n                    <span className=\"message\" key={timestamp}>{text}</span>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showMessage(text: string) {\r\n        const message: Message = {\r\n            timestamp: Date.now(),\r\n            text,\r\n        };\r\n        this.setState(s => {\r\n            const messages = [message].concat(s.messages);\r\n            const maxMessageAmount = 5;\r\n            if (messages.length >= maxMessageAmount) {\r\n                messages.splice(maxMessageAmount, messages.length - maxMessageAmount);\r\n            }\r\n            return { messages };\r\n        });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 工具\r\n\r\n    get offset() { return this.state.offset; }\r\n    set offset(o) { this.setState(() => ({ offset: o })) }\r\n\r\n    get scale() { return this.state.scaleFactor; }\r\n    set scale(s) { this.setState(() => ({ scaleFactor: s })) }\r\n\r\n    get selectionArea() { return this.state.selectionArea; }\r\n    set selectionArea(sa) { this.setState(() => ({ selectionArea: sa })) }\r\n\r\n    private nodeCardRects: Map<number, Rect> = new Map();\r\n    public selectedNodeUids: Set<number> = new Set();\r\n\r\n    getNodeRect(uid: number): Rect | null {\r\n        return this.nodeCardRects.get(uid) || null;\r\n    }\r\n\r\n    setNodeRect(uid: number, rect: Rect) {\r\n        this.nodeCardRects.set(uid, rect);\r\n    }\r\n\r\n    private tool: Tool | null = null;\r\n\r\n    setTool(flag: ToolFlag | null) {\r\n        switch (flag) {\r\n            case 'createNode': this.tool = new CreateNodeTool(this); break;\r\n            case 'linkNode': this.tool = new LinkNodeTool(this); break;\r\n            case 'copyNode': this.tool = new CopyNodeTool(this); break;\r\n            case 'dragNode': this.tool = new DragNodeTool(this); break;\r\n            case 'dragPool': this.tool = new DragPoolTool(this); break;\r\n            case 'select': this.tool = new SelectTool(this); break;\r\n            case 'auto': this.tool = new AutoTool(this); break;\r\n            default: this.tool = null; break;\r\n        }\r\n        this.setState(() => ({ toolFlag: flag }));\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region UI相关\r\n\r\n    /*\r\n     * O->A->N\r\n     * ----    :Origin to Anchor: Offset\r\n     *    ---- :Anchor to Node: Position (of node)\r\n     */\r\n\r\n    // 原点，应该是pool组件的中心点\r\n    private origin: Vec2 = [0, 0];\r\n\r\n    resetView = () => {\r\n        const box = this.poolRef.current?.getBoundingClientRect();\r\n        if (!box) return;\r\n\r\n\r\n        this.origin = [box.width / 2, box.height / 2];\r\n        const canvas = this.canvasRef.current;\r\n        if (canvas) {\r\n            canvas.width = box.width;\r\n            canvas.height = box.height;\r\n        }\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    getAnchor(): Vec2 {\r\n        return Vec2Util.add(this.origin, this.state.offset);\r\n    }\r\n\r\n    getPoolFix(): Vec2 {\r\n        return getPosition(getRect(this.poolRef));\r\n    }\r\n\r\n    // 是否需要更新\r\n    private dirty: boolean = true;\r\n\r\n    notifyUpdate() {\r\n        this.dirty = true;\r\n    }\r\n\r\n    update = () => {\r\n        if (!this.mounted) return;\r\n        if (this.dirty) {\r\n            this.updateStateNodes();\r\n            this.drawLines();\r\n            this.dirty = false;\r\n        }\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 数据控制\r\n\r\n    // 所有节点列表，是实际的数据\r\n    public readonly nodes: Map<number, MindNode> = new Map();\r\n\r\n    private uidCounter: number = 0;\r\n\r\n    genUid() {\r\n        const uid = this.uidCounter++;\r\n        this.setState(() => ({ uidCounter: this.uidCounter }));\r\n        return uid;\r\n    }\r\n\r\n    createAndAddNode = () => {\r\n        const node: MindNode = createNode({ uid: this.genUid(), position: Vec2Util.minus([0, 0], this.state.offset) });\r\n        this.addNode(node);\r\n    }\r\n\r\n    addNode(node: MindNode) {\r\n        this.nodes.set(node.uid, node);\r\n        this.setState(() => ({ editingNodeUid: node.uid }));\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    updateNode(node: MindNode) {\r\n        this.nodes.set(node.uid, node);\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    removeNode(uid: number) {\r\n        this.nodes.delete(uid);\r\n        this.nodeCardRects.delete(uid);\r\n        this.selectedNodeUids.delete(uid);\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    updateStateNodes() {\r\n        this.setState(() => ({ nodes: Array.from(this.nodes.values()) }));\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 鼠标事件\r\n\r\n    onClickNode = (event: MouseEvent, uid: number) => {\r\n        this.setState(() => ({ editingNodeUid: uid }));\r\n    }\r\n\r\n    private getToolEvent(e: MouseEvent, uid?: number): ToolEvent {\r\n        if (typeof uid === 'number') {\r\n            e.stopPropagation();\r\n        }\r\n        const node = typeof uid === 'number' ? (this.nodes.get(uid) || null) : null;\r\n        // const mousePosition = Vec2.minus([e.clientX, e.clientY], this.getPoolFix());\r\n        const mousePosition: Vec2 = [e.clientX, e.clientY];\r\n        return {\r\n            mousePosition,\r\n            node,\r\n            nativeEvent: e,\r\n        };\r\n    }\r\n\r\n    private pointerMoving: boolean = false;\r\n\r\n    onMouseDown = (e: MouseEvent, uid?: number) => {\r\n        this.pointerMoving = false;\r\n        this.tool?.onStart(this.getToolEvent(e, uid));\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseMove = (e: MouseEvent, uid?: number) => {\r\n        this.pointerMoving = true;\r\n        this.tool?.onMove(this.getToolEvent(e, uid));\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseUp = (e: MouseEvent, uid?: number) => {\r\n        const ev = this.getToolEvent(e, uid);\r\n        if (this.pointerMoving) {\r\n            this.tool?.onMove(ev);\r\n        }\r\n        this.tool?.onEnd(ev);\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseLeave = (e: MouseEvent, uid?: number) => {\r\n        this.onMouseUp(e, uid);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 坐标变换\r\n\r\n    // 把数据里的坐标转换为在.pool DOM元素种像素为单位的坐标\r\n    pool2pixel(poolCoord: Vec2): Vec2 {\r\n        return Vec2Util.add(poolCoord, this.getAnchor());\r\n    }\r\n\r\n    // 在.pool DOM元素种像素为单位的坐标转换为把数据里的坐标\r\n    pixel2pool(pixelCoord: Vec2): Vec2 {\r\n        return Vec2Util.minus(Vec2Util.minus(pixelCoord, this.getAnchor()), this.getPoolFix());\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 持久化\r\n\r\n    buildPool(): MindNodePool {\r\n        return {\r\n            version: 1,\r\n            linkPainterId: this.state.linkPainter.id,\r\n            uidCounter: this.state.uidCounter,\r\n            offset: this.state.offset,\r\n            scaleFactor: this.state.scaleFactor,\r\n            nodes: Array.from(this.nodes.values()),\r\n        };\r\n    }\r\n\r\n    resolveTextDataString(dataString: string) {\r\n        try {\r\n            const raw = JSON.parse(dataString);\r\n\r\n            const pool: MindNodePool = loadPool(raw);\r\n\r\n            this.nodes.clear();\r\n            this.nodeCardRects.clear();\r\n            this.selectedNodeUids.clear();\r\n            pool.nodes.forEach(it => this.nodes.set(it.uid, it));\r\n\r\n            this.setState(() => ({\r\n                uidCounter: pool.uidCounter,\r\n                offset: pool.offset,\r\n                nodes: pool.nodes,\r\n                scaleFactor: pool.scaleFactor,\r\n                linkPainter: arrayFindOrFirst<LinkPainterSelection>(this.linkPainters, (lp) => lp.id === pool.linkPainterId)\r\n            }));\r\n            this.uidCounter = pool.uidCounter;\r\n        } catch (e) {\r\n            this.showMessage('解析数据失败：' + e);\r\n        }\r\n    }\r\n\r\n    load = () => {\r\n        const persistence: DataPersistence | null = this.persistenceRef.current;\r\n        if (!persistence) {\r\n            this.showMessage(\"未指定持久化方案！\");\r\n            return;\r\n        }\r\n        persistence.load()\r\n            .then(dataString => {\r\n                this.showMessage(\"载入成功！\");\r\n                this.resolveTextDataString(dataString);\r\n            })\r\n            .catch(e => {\r\n                this.showMessage('获取数据失败：' + e);\r\n            });\r\n    }\r\n\r\n    save = () => {\r\n        const persistence: DataPersistence | null = this.persistenceRef.current;\r\n        if (!persistence) {\r\n            this.showMessage(\"未指定持久化方案！\");\r\n            return;\r\n        }\r\n        const pool: MindNodePool = this.buildPool();\r\n        // console.log(pool);\r\n        const lastSavedTime: Date = new Date();\r\n        const dataString = JSON.stringify(pool);\r\n        persistence.save(dataString)\r\n            .then((succeeded) => {\r\n                if (succeeded) {\r\n                    this.showMessage(\"保存成功！\");\r\n                    this.setState(() => ({ lastSavedTime }));\r\n                } else {\r\n                    this.showMessage(\"保存失败：未知原因\");\r\n                }\r\n            }).catch(e => {\r\n                this.showMessage(\"保存失败：\" + e);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 节点选择相关\r\n\r\n    setNodeChoosen = (uid: number, value: boolean) => {\r\n        if (value) {\r\n            this.selectedNodeUids.add(uid);\r\n        } else {\r\n            this.selectedNodeUids.delete(uid);\r\n        }\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    unchooseAllNodes = () => {\r\n        this.selectedNodeUids.clear();\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    deleteSelectedNodes = () => {\r\n        this.selectedNodeUids.forEach(uid => {\r\n            this.nodeCardRects.delete(uid);\r\n            const node = this.nodes.get(uid);\r\n            this.nodes.delete(uid);\r\n            if (node) {\r\n                arrayFilterNonNull<MindNode>(node.outPorts.map(ou => this.nodes.get(ou))).forEach(dst => unlinkNodes(node, dst));\r\n                arrayFilterNonNull<MindNode>(node.inPorts.map(iu => this.nodes.get(iu))).forEach(src => unlinkNodes(src, node));\r\n            }\r\n        });\r\n        this.selectedNodeUids.clear();\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    //#endregion\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}