{"version":3,"sources":["utils/math.ts","buildin/UniqueMap.ts","buildin/Site.ts","buildin/entities/Entity.ts","buildin/GameEvent.ts","buildin/items/Item.ts","buildin/items/MeleeWeapon.ts","buildin/entities/ItemEntity.ts","buildin/entities/PortEntity.ts","utils/objects.ts","utils/strings.ts","buildin/entities/LivingEntity.ts","buildin/entities/PlayerEntity.ts","buildin/events/CombatEvent.ts","buildin/events/InventoryEvent.ts","App.tsx","reportWebVitals.ts","buildin/entities/InvestigationEntity.ts","buildin/entities/EventTriggerEntity.ts","buildin/events/TextDisplayEvent.ts","buildin/events/SequenceEvent.ts","buildin/events/GameOverEvent.ts","data/translation.ts","data/entity/NPCEntity.ts","data/entity/MonsterEntity.ts","data/entity/Shadow.ts","data/entity/StrangeOldMan.ts","buildin/IdMap.ts","data/event/ChatEvent.ts","data/data.ts","utils/polyfill.ts","index.tsx"],"names":["randInt","max","min","times","Array","from","Math","floor","random","reduce","s","n","test","possibility","chooseOne","choices","length","uidc","Date","now","genUid","UniqueMap","data","map","Map","this","add","count","elems","forEach","e","has","uid","set","delete","get","keys","values","clear","fn","elem","size","Site","id","name","entities","onEnterFn","onEnter","site","game","triggerEvent","entity","silent","onDetect","addEntity","remove","FAKE_SITE","removeEntity","Entity","newSite","silient","option","subopt","GameEvent","priority","appendText","Item","value","type","MeleeWeapon","damage","dice","faces","factor","fix","String","str","ItemEntity","item","autoEquip","text","leftText","tag","getPlayer","holdItem","addItemToInventory","showPortOptions","PortEntity","target","timeCost","getMap","prevSite","goToSite","timePass","findByPath","o","path","w","p","i","result","thisArg","num2strWithSign","num","LivingEntity","health","maxHealth","shield","strength","dexterity","baseDamage","baseWeaponName","loots","key","delta","reason","translate","addEntities","combat","self","isFightBack","weapon","getWeapon","onAttack","onReceiveDamage","source","mutateValue","attack","PlayerEntity","money","magic","insight","holdingItem","inventory","isAlive","gameOver","replaceOption","prevItem","currentSite","CombatEvent","rivals","next","dexFix","order","Error","find","onCombatStart","displayRivals","runForPlayer","cp","escape","rightText","options","filter","previewDamage","push","debugMode","join","enemy","checkCombatEnd","turnNext","endEvent","remanageRivals","every","sort","a","b","onCombatTurn","nextAct","rival","index","findIndex","splice","InventoryEvent","setOptions","concat","subopts","removeItemFromInventory","OptionBtn","props","className","onClick","undefined","App","textListEl","resetting","textBuffer","pid","gameOverMessage","currentState","React","createRef","initialize","state","Object","assign","textList","showOptions","showInventory","player","time","k","ref","t","types","openInventory","bind","handleClickOption","flushText","all","list","setState","slice","current","scrollTo","top","scrollHeight","behavior","isInInterval","setInterval","flushLoop","clearInterval","translated","startsWith","packs","split","trim","r","exec","change","isInNextDay","refreshOptions","start","applyChange","reset","events","onInput","entityUid","onInteract","isArray","execCmd","cmd","params","apply","event","refreshEvents","onStart","v","onRender","findEvent","getInteractions","flat","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InvestigationEntity","results","counter","chances","EventTriggerEntity","once","TextDisplayEvent","texts","SequenceEvent","joints","pointer","fill","_","ce","nextEvent","GameOverEvent","translation","story","end","old_mans_talk","wang","elder","welcome","take_things","idle","old_man","description","strange_note","old_house","NPCEntity","talkText","idleText","chat","autoChat","takled","talk","onBeAttack","MonsterEntity","Shadow","owner","d","removeSelf","StrangeOldMan","shadow","IdMap","ChatEvent","blocks","currentBlockId","entry","displayTextAndCheckEnd","block","line","randValue","villageWang","villageLiheng","sites","playerMaxHealth","root","seperator","findByPathStr","indexOf","fromEntries","entries","prototype","depth","arr","polyfill","ReactDOM","render","StrictMode","URLSearchParams","window","location","search","document","getElementById"],"mappings":"uPAEA,SAASA,EAAQC,GAA0D,IAA7CC,EAA4C,uDAA9B,EAAGC,EAA2B,uDAAX,EAC3D,OAAOC,MAAMC,KAAKD,MAAMD,IAAQ,kBAAMG,KAAKC,MAAMD,KAAKE,UAAYP,EAAMC,GAAOA,MAAMO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAQjH,SAASC,EAAKC,GACV,OAAQP,KAAKE,UAAYK,EAAc,EAAIA,EAAc,IAAMA,GAGnE,SAASC,EAAaC,GAClB,OAAOA,EAAQf,EAAQe,EAAQC,SAGnC,IAAIC,EAAOC,KAAKC,MAChB,SAASC,IACL,OAAOH,I,ICyCII,E,WAzDX,WAAYC,GAAkB,yBAFtBC,IAAsB,IAAIC,IAG1BF,GACAG,KAAKC,IAAL,MAAAD,KAAA,YAAYH,I,kDAIY,IAAC,IAAD,OACxBK,EAAQ,EADgB,mBAAzBC,EAAyB,yBAAzBA,EAAyB,gBAQ5B,OANAA,EAAMC,SAAQ,SAAAC,GACL,EAAKP,IAAIQ,IAAID,EAAEE,OAChB,EAAKT,IAAIU,IAAIH,EAAEE,IAAKF,GACpBH,QAGDA,I,+BAGiC,IAAC,IAAD,OACpCA,EAAQ,EAD4B,mBAAlCC,EAAkC,yBAAlCA,EAAkC,gBAGxC,OADAA,EAAMC,SAAQ,SAAAC,GAAC,OAAIH,GAAS,EAAKJ,IAAIW,OAAoB,kBAANJ,EAAiBA,EAAIA,EAAEE,KAAO,EAAI,KAC9EL,I,0BAGPK,GACA,OAAOP,KAAKF,IAAIY,IAAIH,K,6BAIpB,OAAO5B,MAAMC,KAAKoB,KAAKF,IAAIa,U,+BAI3B,OAAOhC,MAAMC,KAAKoB,KAAKF,IAAIc,Y,8BAQ3BZ,KAAKF,IAAIe,U,8BAGLC,GACJ,OAAOd,KAAKF,IAAIM,QAAQU,K,2BAGvBA,GACD,cAAmBnC,MAAMC,KAAKoB,KAAKF,IAAIc,UAAvC,eAAkD,CAA7C,IAAMG,EAAI,KACX,GAAID,EAAGC,GACH,OAAOA,K,2BAdf,OAAOf,KAAKF,IAAIkB,S,KC/BlBC,E,WAcF,WAAYpB,GAAiB,IAAD,kCAN5BqB,QAM4B,OAL5BC,UAK4B,OAJ5BC,SAA8B,IAAIxB,EAIN,KAFpByB,eAEoB,EACxBrB,KAAKkB,GAAKrB,EAAKqB,GACflB,KAAKmB,KAAOtB,EAAKsB,KACjBnB,KAAKqB,UAAYxB,EAAKyB,SAAW,KACjC,UAAAzB,EAAKuB,gBAAL,SAAehB,SAAQ,SAAAC,GACnB,EAAKe,SAASnB,IAAII,GAClBA,EAAEkB,KAAO,K,oDAITC,GACAxB,KAAKqB,YACyB,oBAAnBrB,KAAKqB,UACZrB,KAAKqB,UAAUG,GAEfA,EAAKC,aAAazB,KAAKqB,c,gCAKzBG,EAAYE,GAAgD,IAAD,OAA/BC,EAA+B,wDAQjE,OAPA3B,KAAKoB,SAASnB,IAAIyB,GACdA,EAAOH,OAASvB,OAChB0B,EAAOH,KAAOvB,KACT2B,GACD3B,KAAKoB,SAASR,SAASR,SAAQ,SAAAC,GAAC,OAAIA,EAAEuB,SAASJ,EAAME,EAAQ,OAG9D1B,O,kCAGCwB,EAAYJ,GAAyD,IAAD,OAA/BO,EAA+B,wDAE5E,OADAP,EAAShB,SAAQ,SAAAC,GAAC,OAAI,EAAKwB,UAAUL,EAAMnB,EAAGsB,MACvC3B,O,mCAGEwB,EAAYE,GAGrB,OAFA1B,KAAKoB,SAASU,OAAOJ,EAAOnB,KAC5BmB,EAAOH,KAAON,EAAKc,UACZ/B,O,qCAGIwB,EAAYJ,GAAgC,IAAD,OAEtD,OADAA,EAAShB,SAAQ,SAAAC,GAAC,OAAI,EAAK2B,aAAaR,EAAMnB,MACvCL,S,KA1DTiB,EAEKc,UAAY,IAAId,EAAK,CACxBC,GAAI,gBACJC,KAAM,YACNC,SAAU,KA0DHH,QCnBAgB,E,WApCX,WAAYpC,GAAmB,yBAL/BqB,QAK8B,OAJ9BX,SAI8B,OAH9BY,UAG8B,OAF9BI,UAE8B,EAC1BvB,KAAKkB,GAAKrB,EAAKqB,IAAM,SACrBlB,KAAKO,IAAMV,EAAKU,KAAOZ,IACvBK,KAAKmB,KAAOtB,EAAKsB,KACjBnB,KAAKuB,KAAO1B,EAAK0B,MAAQN,EAAKc,U,qDAGzBP,EAAYE,EAAgBH,M,+BAI5BC,EAAYU,GAAgD,IAAjCC,EAAgC,wDAChEnC,KAAKuB,KAAKS,aAAaR,EAAMxB,MACzBmC,EACAD,EAAQd,SAASnB,IAAID,MAErBkC,EAAQL,UAAUL,EAAMxB,MAE5BA,KAAKuB,KAAOW,I,sCAGAV,GAKZ,MAAO,K,iCAGAA,EAAYY,EAAgBC,Q,KCb5BC,E,WAnBX,WAAYzC,GAAkB,yBAJ9BqB,QAI6B,OAH7BqB,cAG6B,OAF7BhC,SAE6B,EACzBP,KAAKkB,GAAKrB,EAAKqB,GACflB,KAAKuC,SAAW1C,EAAK0C,UAAY,EACjCvC,KAAKO,IAAMV,EAAKU,KAAOZ,I,oDAGnB6B,GACJA,EAAKgB,WAAL,uBAAsBxC,KAAKkB,GAA3B,0B,+BAGKM,GACL,MAAO,K,8BAGHA,EAAYY,EAAgBC,GAChCb,EAAKgB,WAAL,mCAAwBxC,KAAKkB,GAA7B,U,KCCOuB,E,WAfX,WAAY5C,GAAiB,yBAJ7BqB,QAI4B,OAH5BX,SAG4B,OAF5BY,UAE4B,EACxBnB,KAAKkB,GAAKrB,EAAKqB,IAAM,OACrBlB,KAAKO,IAAMV,EAAKU,KAAOZ,IACvBK,KAAKmB,KAAOtB,EAAKsB,K,qDAGZK,EAAYE,GACjB,MAAO,CAAEgB,MAAO,EAAGC,KAAM,W,oCAGfnB,EAAYE,GACtB,MAAO,Q,YCkBAkB,E,kDAhCX,WAAY/C,GAAwB,IAAD,8BAC/B,yCACOA,GADP,IAEIqB,GAAIrB,EAAKqB,IAAM,mBALvB2B,YAEmC,EAK/B,EAAKA,OAAShD,EAAKgD,OALY,E,qDAQ1BrB,EAAYE,GACjB,MAAO,CACHgB,ONjBMI,EMiBU9C,KAAK6C,ONhBT,kBAATC,EAA0BA,EAC9BvE,EAAQuE,EAAKC,MAAQ,EAAG,EAAGD,EAAKpE,QAAUoE,EAAKE,QAAU,IAAMF,EAAKG,KAAO,IMgB1EN,KAAM,SNlBlB,IAAkBG,I,oCMsBAtB,EAAYE,GACtB,GAA2B,kBAAhB1B,KAAK6C,OACZ,OAAOK,OAAOlD,KAAK6C,QACf,IAAD,EACmC7C,KAAK6C,OAAnCE,EADL,EACKA,MAAOrE,EADZ,EACYA,MAAOuE,EADnB,EACmBA,IAAKD,EADxB,EACwBA,OACvBG,EAAG,UAAMzE,GAAS,EAAf,YAAoBqE,GAO3B,OANIC,GAAqB,IAAXA,IACVG,EAAG,UAAMH,EAAN,aAAiBG,EAAjB,MAEHF,IACAE,GAAOF,GAAO,EAAI,IAAMA,EAAMC,OAAOD,IAElCE,M,GA9BOV,GCiCXW,E,kDA7BX,cAAwD,IAAD,EAAzCC,EAAyC,EAAzCA,KAAM9B,EAAmC,EAAnCA,KAAM+B,EAA6B,EAA7BA,UAA6B,4BACnD,cAAM,CACFpC,GAAI,OACJC,KAAMkC,EAAKlC,KACXI,UAPR8B,UAGuD,IAFvDC,eAEuD,EAMnD,EAAKD,KAAOA,EACZ,EAAKC,UAAYA,IAAa,EAPqB,E,8DAWnD,MAAO,CAAC,CACJC,KAAM,eAAOvD,KAAKqD,KAAKlC,KACvBqC,SAAU,eACVC,IAAK,O,iCAIFjC,EAAYY,GACfpC,KAAKsD,UACL9B,EAAKkC,YAAYC,SAASnC,EAAMxB,KAAKqD,MAErC7B,EAAKkC,YAAYE,mBAAmBpC,EAAMxB,KAAKqD,MAEnDrD,KAAKuB,KAAKS,aAAaR,EAAMxB,MAC7BwB,EAAKqC,sB,GA7BY5B,GCiCV6B,E,kDA7BX,cAAyD,IAAD,EAA1CC,EAA0C,EAA1CA,OAAQxC,EAAkC,EAAlCA,KAAMyC,EAA4B,EAA5BA,SAA4B,4BACpD,cAAM,CACF9C,GAAI,OACJC,KAAM4C,EACNxC,UAPRwC,YAGwD,IAFxDC,cAEwD,EAMpD,EAAKD,OAASA,EACd,EAAKC,SAAWA,GAAY,EAPwB,E,4DAUxCxC,GAAa,IAAD,IACxB,MAAO,CAAC,CACJ+B,KAAM,iBAAQ,UAAA/B,EAAKyC,SAASvD,IAAIV,KAAK+D,eAAvB,eAAgC5C,OAAQ,WACtDqC,UAAW,UAAAhC,EAAKkC,YAAYQ,gBAAjB,eAA2BhD,MAAOlB,KAAK+D,OAAU,SAAM,SAClEN,IAAKzD,KAAKO,Q,iCAIPiB,EAAYY,GACnB,GAAIA,EAAOqB,MAAQzD,KAAKO,IAAK,CACzB,IAAMgB,EAAOC,EAAKyC,SAASvD,IAAIV,KAAK+D,QAChCxC,IACAC,EAAKkC,YAAYS,SAAS3C,EAAMD,GAChCC,EAAK4C,SAASpE,KAAKgE,gB,GA3BV/B,G,cCKzB,SAASoC,EAAWC,EAAQC,GAExB,IADA,IAAIC,EAAIF,EAAGG,EAAI,KACNC,EAAI,EAAGA,EAAIH,EAAKhF,QAAUiF,EAAGE,IAAK,CAEvCD,EAAID,EACJA,EAAIA,EAFQD,EAAKG,IAIrB,MAAO,CACHC,OAAQH,EACRI,QAASH,GCtBjB,SAASI,EAAgBC,GACrB,OAAOA,GAAO,EAAI,IAAMA,EAAM5B,OAAO4B,G,IC4H1BC,E,kDAnGX,WAAYlF,GAAyB,IAAD,gCAChC,cAAMA,IAVVmF,YASoC,IARpCC,eAQoC,IAPpCC,YAOoC,IANpCC,cAMoC,IALpCC,eAKoC,IAJpCC,gBAIoC,IAHpCC,oBAGoC,IAFpCC,WAEoC,EAEhC,EAAKP,OAASnF,EAAKmF,OACnB,EAAKC,UAAYpF,EAAKoF,UACtB,EAAKC,OAASrF,EAAKqF,QAAU,EAC7B,EAAKC,SAAWtF,EAAKsF,SACrB,EAAKC,UAAYvF,EAAKuF,UACtB,EAAKC,WAAaxF,EAAKwF,WACvB,EAAKC,eAAiBzF,EAAKyF,eAC3B,EAAKC,OAAQ,UAAA1F,EAAK0F,aAAL,eAAYzF,KAAI,SAAAO,GAAC,OAAIA,aAAaoC,EAAO,IAAIW,EAAW,CAAEC,KAAMhD,IAAOA,OAAM,GAT1D,E,wDAYxBmB,EAAYgE,EAAaC,EAAeC,GAChD,OAAOF,GACH,IAAK,SAAUxF,KAAKgF,QAAUS,EAAO,MACrC,IAAK,WAAYzF,KAAKmF,UAAYM,EAAO,MACzC,IAAK,YAAazF,KAAKoF,WAAaK,EAExCjE,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,YAAgCuE,GAAU,GAA1C,YAAgDlE,EAAKmE,UAAUH,GAA/D,YAAuEX,EAAgBY,KACnFzF,KAAKgF,QAAU,IACfxD,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,iBACAnB,KAAKuB,KAAKqE,YAAYpE,EAAMxB,KAAKuF,OACjCvF,KAAKuB,KAAKS,aAAaR,EAAMxB,S,oCAIvBwB,EAAYqE,EAAqBC,M,mCAIlCtE,EAAYqE,EAAqBC,M,kCAIlCtE,EAAYqE,EAAqBC,M,6BAItCtE,EAAYuC,GAA6D,IAAvCgC,EAAsC,wDACrEC,EAAShG,KAAKiG,YACdpD,EAAiBmD,EAAOE,SAAS1E,EAAMuC,GAK7C,OAJA/D,KAAKkG,SAAS1E,EAAMqB,EAAQkB,GACxBlB,EAAOH,OACPqB,EAAOoC,gBAAgB3E,EAAMqB,EAAQ7C,KAAM+F,GAExClD,I,+BAGFrB,EAAYqB,EAAgBkB,M,sCAIrBvC,EAAYqB,EAAgBuD,GAAqD,IAA/BL,EAA8B,wDAC5F,GAAKA,IACG5G,EAAKa,KAAKoF,WAWlBvC,EAAOH,MAAQ7D,KAAKL,IAAI,EAAGqE,EAAOH,MAAQ1C,KAAKkF,QAC3CrC,EAAOH,MACP1C,KAAKqG,YAAY7E,EAAM,UAAWqB,EAAOH,MAAzC,sBAAqD0D,EAAOjF,KAA5D,iBAEAK,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,+CAAqCiF,EAAOjF,KAA5C,sBAAuD,YAhB3D,CAEQ,IAAMlC,EAAC,UAAMe,KAAKmB,KAAX,6BAAqBiF,EAAOjF,KAA5B,sBACHhC,EAAKa,KAAKoF,YACV5D,EAAKgB,WAAWvD,EAAC,6CAAc,QAC/Be,KAAKsG,OAAO9E,EAAM4E,GAAQ,IAE1B5E,EAAKgB,WAAWvD,EAAG,W,+BAa1BuC,EAAYU,GACjBV,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,6BAAkCe,EAAQf,MAAQ,UAClD,gEAAeK,EAAMU,K,kCAIrB,OAAO,IAAIU,EAAY,CACnB1B,GAAI,QACJC,KAAMnB,KAAKsF,eACXzC,OAAQ7C,KAAKqF,e,gCAKjB,OAAOrF,KAAKgF,OAAS,I,iCAGdxD,GACP,OAAIxB,KAAKuB,OAASN,EAAKc,YACnB/B,KAAKuB,KAAKS,aAAaR,EAAMxB,OACtB,O,GAxGQiC,GCiGZsE,E,kDA1FX,WAAY1G,GAAyB,IAAD,8BAChC,yCAAUA,GAAV,IAAgBqB,GAAI,aARxBsF,WAOoC,IANpCC,WAMoC,IALpCC,aAKoC,IAJpCC,iBAIoC,IAHpCC,UAA6B,IAAIhH,EAGG,EAFpCsE,cAEoC,EAEhC,EAAKsC,MAAQ3G,EAAK2G,MAClB,EAAKC,MAAQ5G,EAAK4G,MAClB,EAAKC,QAAU7G,EAAK6G,QACpB,EAAKC,YAAc9G,EAAK8G,YACxB9G,EAAK+G,UAAUxG,SAAQ,SAAAC,GAAC,OAAI,EAAKuG,UAAU3G,IAAII,MAC/C,EAAK6D,SAAWrE,EAAKqE,SAPW,E,wDAUxB1C,EAAYgE,EAAaC,EAAeC,GAChD,OAAOF,GACH,IAAK,SAAUxF,KAAKgF,QAAUS,EAAO,MACrC,IAAK,QAASzF,KAAKyG,OAAShB,EAAO,MACnC,IAAK,QAASzF,KAAKwG,OAASf,EAAO,MACnC,IAAK,WAAYzF,KAAKmF,UAAYM,EAAO,MACzC,IAAK,UAAWzF,KAAK0G,SAAWjB,EAAO,MACvC,IAAK,YAAazF,KAAKoF,WAAaK,EAExCjE,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,YAAgCuE,GAAU,GAA1C,YAAgDlE,EAAKmE,UAAUH,GAA/D,YAAuEX,EAAgBY,KAClFzF,KAAK6G,WACNrF,EAAKsF,SAAS,8B,+BAIbtF,EAAY6B,GAAoF,IAAjE0D,EAAgE,uDAAjB,UAC7EC,EAAWhH,KAAK2G,YAQtB,GAPA3G,KAAK2G,YAActD,EACfA,GACArD,KAAK4G,UAAU9E,OAAOuB,GACtB7B,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,6BAAkCkC,EAAKlC,MAAQ,WACxC6F,GACPxF,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,6BAAkC6F,EAAS7F,MAAQ,UAElD6F,EACL,OAAQD,GACJ,IAAK,OAAQ/G,KAAKuB,KAAKM,UAAUL,EAAM,IAAI4B,EAAW,CAAEC,KAAM2D,KAAc,MAC5E,IAAK,UAAWhH,KAAK4G,UAAU3G,IAAI+G,M,+BAKlCxF,EAAYU,GACjBlC,KAAKkE,SAAWlE,KAAKuB,KACrB,gEAAeC,EAAMU,K,6BAGlBV,GACH,GAAIxB,KAAKkE,UAAYlE,KAAKkE,WAAajD,EAAKc,UAAW,CACnD,IAAMkF,EAAcjH,KAAKuB,KAGzB,OAFA,gEAAeC,EAAMxB,KAAKkE,UAC1BlE,KAAKkE,SAAW+C,GACT,EAEP,OAAO,I,yCAIIzF,EAAY6B,GAC3B,QAAIrD,KAAK4G,UAAU3G,IAAIoD,KACnB7B,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,6BAAkCkC,EAAKlC,MAAQ,WACxC,K,8CAKSK,EAAY6B,GAA0E,IAArD0D,EAAoD,uDAAjB,OACxF,GAAoB,kBAAT1D,EAAmB,CAC1B,IAAMqB,EAAI1E,KAAK4G,UAAUlG,IAAI2C,GAC7B,IAAKqB,EAAG,OAAO,EACfrB,EAAOqB,EAEX,IAAK1E,KAAK4G,UAAU9E,OAAOuB,GAAO,OAAO,EACzC,OAAQ0D,GACJ,IAAK,OAAQ/G,KAAKuB,KAAKM,UAAUL,EAAM,IAAI4B,EAAW,CAAEC,OAAM9B,KAAMvB,KAAKuB,QAI7E,OADAC,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,6BAAkCkC,EAAKlC,MAAQ,WACxC,I,kCAIP,OAAOnB,KAAK2G,aAAL,iDAAA3G,MAAA,KAAAA,Q,wCAIP,MAAO,O,GA9FY+E,GC6JZmC,E,kDAlJX,WAAYrH,GAAwB,IAAD,EAY/B,GAZ+B,qBAC/B,yCACOA,GADP,IAEIqB,GAAI,SACJqB,SAAU,OAPlB4E,YAGmC,IAFnCC,UAEmC,EAM/B,EAAKD,OAAStH,EAAKsH,OAAOrH,KAAI,SAACO,EAAGqE,GAAJ,MAAW,CACrChD,OAAQrB,EAAEqB,OACV+B,IAAKpD,EAAEoD,IACP4D,OAAQhH,EAAEgH,QAAU,EACpBC,MAAO5C,OAEN,EAAKyC,OAAO5H,OACb,MAAM,IAAIgI,MAAM,yCAbW,OAgB3B,EAAKH,KADL,SAAUvH,GACE,EAAKsH,OAAOK,MAAK,SAAAnH,GAAC,OAAIA,EAAEqB,OAAOnB,MAAQV,EAAKuH,SAE5C,EAAKD,OAAO,GAlBG,E,oDAsB3B3F,GAAa,IAAD,OAChBA,EAAKgB,WAAW,kCAChBxC,KAAKmH,OAAO/G,SAAQ,SAAAC,GAAC,OAAIA,EAAEqB,OAAO+F,cAAcjG,EAAM,EAAMnB,MAC5DL,KAAK0H,cAAclG,GACnBxB,KAAK2H,aAAanG,K,+BAGbA,GACL,IAAMiD,EAAIjD,EAAKkC,YACTkE,EAAK5H,KAAKmH,OAAOK,MAAK,SAAAnH,GAAC,OAAIA,EAAEqB,OAAOnB,MAAQkE,EAAElE,OAC9CsH,EAAS,CACXtE,KAAK,eACLC,SAAU,qBACVsE,UAAU,GAAD,OAAKrD,EAAEW,UAAP,KACT3B,IAAK,UAET,IAAKmE,EACD,MAAO,CAACC,GAEZ,IAAM7B,EAASvB,EAAEwB,YACX8B,EAAyB/H,KAAKmH,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEoD,MAAQmE,EAAGnE,OAAK3D,KAAI,SAAAO,GAAC,MAAK,CAC/EkD,KAAK,eAAD,OAAOlD,EAAEqB,OAAOP,MACpBqC,SAAU,eACVsE,UAAU,GAAD,OAAK9B,EAAOiC,cAAczG,EAAMnB,EAAEqB,QAAlC,UACT+B,IAAKpD,EAAEqB,OAAOnB,QAWlB,OATAwH,EAAQG,KAAKL,GACTrG,EAAK2G,WACLJ,EAAQG,KAAK,CACT3E,KAAK,2BACLC,SAAU,eACVsE,UAAU,2BACVrE,IAAK,cAGNsE,I,oCAGGvG,GACVA,EAAKgB,WAAW,iCAAUxC,KAAKmH,OAAOa,QAAO,SAAA3H,GAAC,MAAoB,WAAhBA,EAAEqB,OAAOR,MAAiBpB,KAAI,gBAAG4B,EAAH,EAAGA,OAAH,gBAAmBA,EAAOP,KAA1B,YAAkCO,EAAOsD,OAAzC,YAAmDtD,EAAOuD,UAA1D,QAAwEmD,KAAK,a,8BAGzJ5G,EAAYY,GAChB,IAAMqC,EAAIjD,EAAKkC,YACTkE,EAAK5H,KAAKmH,OAAOK,MAAK,SAAAnH,GAAC,OAAIA,EAAEqB,OAAOnB,MAAQkE,EAAElE,OACpD,GAAKqH,EAAL,CAKA,GAAmB,cAAfxF,EAAOqB,IACPzD,KAAKmH,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEoD,MAAQmE,EAAGnE,OAAKrD,SAAQ,SAAAC,GAAC,OAAIA,EAAEqB,OAAO2E,YAAY7E,EAAM,UAAWnB,EAAEqB,OAAOsD,OAAQ,0CAC3G,GAAmB,WAAf5C,EAAOqB,IACdzD,KAAK6H,OAAOrG,EAAMiD,QACf,GAA0B,kBAAfrC,EAAOqB,IAAkB,CACvC,IAAM4E,EAAQrI,KAAKmH,OAAOK,MAAK,SAAAnH,GAAC,OAAIA,EAAEqB,OAAOnB,MAAQ6B,EAAOqB,OACxD4E,GACA5D,EAAE6B,OAAO9E,EAAM6G,EAAM3G,QAIzB1B,KAAKsI,eAAe9G,KACxBxB,KAAKuI,WACLvI,KAAK2H,aAAanG,GAClBxB,KAAK0H,cAAclG,SAlBfA,EAAKgH,SAASxI,Q,qCAqBPwB,GAAsB,IAAD,SAChCxB,KAAKyI,iBACL,IAAMhF,EAAG,UAAGzD,KAAKmH,cAAR,aAAG,EAAc,GAAG1D,IAC7B,SAAIzD,KAAKmH,OAAO5H,QAAU,GAAKS,KAAKmH,OAAOuB,OAAM,SAAArI,GAAC,OAAIA,EAAEoD,MAAQA,QAC5DjC,EAAKgB,WAAW,4BAChBhB,EAAKgH,SAASxI,MACdA,KAAKmH,OAAO/G,SAAQ,SAAAC,GAAC,OAAIA,EAAEqB,OAAO+F,cAAcjG,EAAM,EAAMnB,OACrD,K,uCAMXL,KAAKmH,OAASnH,KAAKmH,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEqB,OAAOmF,aAC/C7G,KAAKmH,OAAOwB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElH,OAAO0D,UAAYyD,EAAEnH,OAAO0D,aACzDpF,KAAKmH,OAAO/G,SAAQ,SAACC,EAAGqE,GAAJ,OAAUrE,EAAEiH,MAAQ5C,O,8BAIpClD,GACJxB,KAAKoH,KAAK1F,OAAOoH,aAAatH,EAAMxB,KAAMA,KAAKoH,MAC/CpH,KAAKuI,a,iCAILvI,KAAKoH,KAAOpH,KAAKmH,QAAQnH,KAAKoH,KAAKE,MAAQ,GAAKtH,KAAKmH,OAAO5H,U,mCAGnDiC,GACT,MAAQxB,KAAKsI,eAAe9G,IAAiC,WAAxBxB,KAAKoH,KAAK1F,OAAOR,IAClDlB,KAAK+I,QAAQvH,K,6BAIPA,EAAYwH,GACtB,GAAG7J,EAAK6J,EAAM5D,WAAY,CACtB5D,EAAKgB,WAAL,UAAmBwG,EAAM7H,KAAzB,4BAAqC,QACrCK,EAAKgH,SAASxI,MACd,IAAMiJ,EAAQjJ,KAAKmH,OAAO+B,WAAU,SAAA7I,GAAC,OAAIA,EAAEqB,OAAOnB,MAAQyI,EAAMzI,OAC5D0I,GAAS,IACTjJ,KAAKmH,OAAOgC,OAAOF,EAAO,GACtBD,EAAMzI,MAAQP,KAAKoH,KAAK1F,OAAOnB,MAC/BP,KAAKoH,KAAOpH,KAAKmH,OAAO8B,EAAQjJ,KAAKmH,OAAO5H,UAGpDS,KAAKyI,sBAELjH,EAAKgB,WAAL,UAAmBwG,EAAM7H,KAAzB,4BAAqC,S,6BAI/BK,EAAY4E,EAAsBrC,GAC5CvC,EAAKgB,WAAL,UAAmB4D,EAAOjF,KAA1B,uBAAmCiF,EAAOH,YAAY9E,KAAtD,uBAA+D4C,EAAO5C,MAAQ,OAC9EiF,EAAOE,OAAO9E,EAAMuC,O,GAlJFzB,GCgDX8G,E,kDAlEX,aAAe,uCACL,CACFlI,GAAI,YACJqB,SAAU,K,oDAIVf,GACJ,IAAMiD,EAAIjD,EAAKkC,YACflC,EAAK6H,WAAW,CAAC,CAAE9F,KAAM,eAAME,IAAK,KAC/B6F,OAAO3K,MAAMC,KAAK6F,EAAEmC,UAAUhG,UAAU,SAAA8D,GAAC,cAAK,CAC3CnB,OAAO,UAAAkB,EAAEkC,mBAAF,eAAepG,OAAQmE,EAAEnE,IAAM,eAAO,gBAAQmE,EAAEvD,KACvDsC,IAAK,CAAC,eAAgB,SAAU,WAAa,EAAC,UAAAgB,EAAEkC,mBAAF,eAAepG,OAAQmE,EAAEnE,IAAMmE,EAAI,e,+BAKpFlD,GACL,IAAMiD,EAAIjD,EAAKkC,YACTqE,EAAsB,CACxB,CAAExE,KAAM,iBADgB,mBAErBkB,EAAEmC,UAAUhG,SAASd,KAAI,SAAA4E,GAAC,MAAK,CAC9BnB,KAAMmB,EAAEvD,KACRqC,SAAU,eACVsE,UAAWpD,EAAEuD,cAAczG,GAC3B+H,QAAS,CACL,CAAEhG,KAAM,eAAME,IAAK,QACnB,CAAEF,KAAM,eAAME,IAAK,SAEvBA,IAAKiB,EAAEnE,UAWf,OARIkE,EAAEkC,aACFoB,EAAQoB,OAAO,EAAG,EAAG,CACjB5F,KAAM,eAAMkB,EAAEkC,YAAYxF,KAC1BqC,SAAU,eACVsE,UAAWrD,EAAEkC,YAAYsB,cAAczG,GACvCiC,IAAKgB,EAAEkC,YAAYpG,MAGpBwH,I,8BAGHvG,EAAYY,EAAgBC,GAChC,GAA0B,kBAAfD,EAAOqB,IAAkB,CAAC,IAAD,EAC1BlD,EAAc6B,EAAOqB,IACrBgB,EAAIjD,EAAKkC,YAEf,GAAInD,KAAG,UAAKkE,EAAEkC,mBAAP,aAAK,EAAepG,KACvBkE,EAAEd,SAASnC,EAAM,UACd,CACH,IAAM6B,EAAOoB,EAAEmC,UAAUlG,IAAI0B,EAAOqB,KAChCJ,IACmB,SAAfhB,EAAOoB,IACPgB,EAAEd,SAASnC,EAAM6B,GACK,SAAfhB,EAAOoB,KACdgB,EAAE+E,wBAAwBhI,EAAM6B,EAAM,eAKlD7B,EAAKgH,SAASxI,U,GA/DGsC,GCI7B,SAASmH,EAAUC,GAAyG,IAClHC,EAA+BD,EAA/BC,UAAWvH,EAAoBsH,EAApBtH,OAAQwH,EAAYF,EAAZE,QAC3B,OACE,yBAAQD,UAAWA,EAAWC,QAASxH,EAAOmH,aAAUM,EAAY,kBAAMD,EAAQxH,EAAQ,OAA1F,UACGA,EAAOoB,SAAW,sBAAMmG,UAAU,wBAAhB,SAAyCvH,EAAOoB,WAAmB,KACrFpB,EAAO0F,UAAY,sBAAM6B,UAAU,yBAAhB,SAA0CvH,EAAO0F,YAAoB,KAExF1F,EAAOmB,KACPnB,EAAOmH,QAAUnH,EAAOmH,QAAQzJ,KAAI,SAACb,EAAGyF,GAAJ,OAAW,sBAAciF,UAAU,SAASC,QAAS,kBAAMA,EAAQxH,EAAQnD,IAAhE,SAAqEA,EAAEsE,MAA5DmB,MAA6E,QAe9I,IAAM9D,EAAS,CAAC,QAAS,QAAS,UAAW,WAAY,aA6S1CkJ,E,kDA/Rb,WAAYJ,GAAkB,IAAD,8BAC3B,cAAMA,IAXDvB,eAUsB,IARrB4B,gBAQqB,IAPrBC,WAAqB,EAOA,EANrBC,WAA0B,GAML,EALrBC,IAA6B,KAKR,EAJrBC,gBAA0B,GAIL,EAHrBC,kBAGqB,EAE3B,EAAKjC,UAAYuB,EAAMvB,YAAa,EACpC,EAAK4B,WAAaM,IAAMC,YAExB,EAAKF,aAAeV,EAAM7J,KAAK0K,aAC/B,EAAKC,MAAQC,OAAOC,OAAO,GAAI,EAAKN,aAAc,CAChDO,SAAU,GACVC,aAAa,EACbC,eAAe,IATU,E,qDAanB,IAAD,OACD5L,EAAIe,KAAKwK,MACT/F,EAAIxF,EAAE6L,OACZ,OACE,sBAAKnB,UAAU,MAAf,UACE,yBAAQA,UAAU,YAAlB,UACE,8BACE,0CAAQ9K,KAAKC,MAAMG,EAAE8L,KAAO,IAAM,EAAlC,SAAsC9L,EAAE8L,KAAO,GAA/C,wBACA,0CAAQtG,EAAElD,KAAKJ,KAAf,YACA,+BAAOsD,EAAEkC,YAAF,sBAAqBlC,EAAEkC,YAAYxF,KAAnC,YAA2CsD,EAAEkC,YAAYsB,cAAcjI,MAAvE,KAAkF,gCAG3F,oBAAG2J,UAAU,SAAb,UACE,sBAAMA,UAAU,QAAhB,mBAA4B3J,KAAK2F,UAAU,UAA3C,YAAwDlB,EAAEO,OAA1D,YAAoEP,EAAEQ,aACrErE,EAAOd,KAAI,SAAAkL,GAAC,gBAAO,EAAKrF,UAAUqF,GAAtB,YAA6BvG,EAAUuG,OAAMlL,KAAI,SAAAb,GAAC,OAAK,sBAAc0K,UAAU,QAAxB,SAAiC1K,GAAtBA,YAInF,sBAAK0K,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAasB,IAAKjL,KAAK+J,WAAtC,SACG/J,KAAKwK,MAAMG,SAAS7K,KAAI,SAACoL,EAAGxG,GAAJ,aACvB,mBAAWiF,UAAW,mBAAUuB,EAAEC,aAAZ,aAAU,EAAS/C,KAAK,QAAQ,EAAtD,SACE,sBAAMuB,UAAU,UAAhB,SAA2BuB,EAAE3H,QADvBmB,QAMZ,sBAAKiF,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAMC,QAAS5J,KAAKoL,cAAcC,KAAKrL,MAAtD,0BAECA,KAAKwK,MAAMI,YAAc5K,KAAKwK,MAAMzC,QAAQjI,KAAI,SAACwE,EAAGI,GAAJ,OAC/C,cAAC+E,EAAD,CAEEE,UAAU,SACVvH,OAAQkC,EACRsF,QAAS,EAAK0B,kBAAkBD,KAAK,IAHhC3G,MAMP,wBAAQiF,UAAU,kBAAiBC,QAAS5J,KAAKuL,UAAUF,KAAKrL,MAAM,GAAtE,iC,kCAU6B,IAAD,OAAtBwL,EAAsB,wDAChCC,EAAOzL,KAAKiK,WAAWd,OAAO,EAAGqC,EAAMxL,KAAKiK,WAAW1K,OAAS,GACtES,KAAK0L,UACH,SAAAzM,GAAC,MAAK,CAAE0L,SAAU1L,EAAE0L,SAASrB,OAAOmC,GAAME,OAAO,SACjD,kCAAM,EAAK5B,WAAW6B,eAAtB,aAAM,EAAyBC,SAAS,CACtCC,IAAK,EAAK/B,WAAW6B,QAAQG,aAC7BC,SAAU,gB,kCAKkC,IAAhCC,EAA+B,wDAC9B,OAAbjM,KAAKkK,KACPlK,KAAK0L,UAAS,iBAAO,CAAEd,aAAa,MACpC5K,KAAKuL,YACLvL,KAAKkK,IAAMgC,YAAYlM,KAAKmM,UAAUd,KAAKrL,MAAM,GAAO,MAC/CiM,IACLjM,KAAKiK,WAAW1K,QAClBS,KAAK0L,UAAS,iBAAO,CAAEd,aAAa,MACpC5K,KAAKuL,cAELa,cAAcpM,KAAKkK,KACnBlK,KAAKkK,IAAM,KACXlK,KAAK0L,UAAS,iBAAO,CAAEd,aAAa,U,iCAK/BrH,GAA4C,IAAC,IAAD,qBAAtB4H,EAAsB,iCAAtBA,EAAsB,kBACrD,IAAIkB,GAAa,EACG,kBAAT9I,GAAqBA,EAAK+I,WAAW,OAC9C/I,EAAO,CAAEA,KAAMA,EAAKoI,MAAM,GAAIU,YAAY,IAExB,kBAAT9I,IACT8I,EAAa9I,EAAK8I,aAAc,EAChClB,EAAQ5H,EAAK4H,OAASA,EACtB5H,EAAOA,EAAKA,MAGd,IAAMgJ,GADNhJ,EAAO8I,EAAarM,KAAK2F,UAAUpC,GAAQA,GACXiJ,MAAM,MACnC1M,KAAI,SAAAb,GAAC,OAAIA,EAAEwN,UACXzE,QAAO,SAAA/I,GAAC,OAAK,QAAQE,KAAKF,MAC1Ba,KAAI,SAAAb,GACH,IAAMyN,EAAI,mBAAmBC,KAAK1N,GAC9BiM,EAAIC,EAKR,OAJIuB,IACFzN,EAAIA,EAAE0M,MAAM,EAAGe,EAAEzD,OAAOwD,OACxBvB,EAAIwB,EAAE,GAAGD,OAAOD,MAAM,QAEjB,CAAEjJ,KAAMtE,EAAGkM,MAAOD,OAE7B,EAAAlL,KAAKiK,YAAW/B,KAAhB,oBAAwBqE,IACxBvM,KAAKmM,c,iCAGIpE,GACT/H,KAAKoK,aAAarC,QAAUA,I,+BAKrB6E,GAAuD,IAAvCC,EAAsC,wDAM7D,OALIA,EACF7M,KAAKoK,aAAaW,KAAuD,IAA/ClM,KAAKC,MAAMkB,KAAKoK,aAAaW,KAAO,IAAM,GAAW6B,EAAS,GAExF5M,KAAKoK,aAAaW,MAAQ6B,EAErB5M,KAAKoK,aAAaW,O,8BAIzB/K,KAAKgK,WAAY,EACjBhK,KAAKoK,aAAepK,KAAK0J,MAAM7J,KAAK0K,aACpC,IAAMO,EAAS9K,KAAKoK,aAAaU,OACjCA,EAAOvJ,KAAKM,UAAU7B,KAAM8K,GAG5B9K,KAAK8M,iBACL9M,KAAKgK,WAAY,EACjBhK,KAAKwC,WAAW,2BAAQ,UACxBxC,KAAK0J,MAAM7J,KAAKkN,MAAM/M,MACtBA,KAAKgN,gB,oCAqBLhN,KAAK0L,SAAS1L,KAAKoK,gB,+BAGZ1E,GACP1F,KAAKmK,gBAAkB,4BAAUzE,EACjC1F,KAAKgK,WAAY,I,wCAID5H,EAAgBC,GAChCrC,KAAKwC,WAAWJ,EAAOmB,KAAM,QAE7BvD,KAAK6D,kBACL,IAAM5E,EAAIe,KAAKoK,aAEf,GAAmB,cAAfhI,EAAOqB,IACTzD,KAAKiN,aACA,GAAIhO,EAAEiO,OAAO3N,OAAS,EAAG,CAChBN,EAAEiO,OAAO,GACjBC,QAAQnN,KAAMoC,EAAQC,QACvB,GAAID,EAAOgL,UAAW,CAC3B,IAAM1L,EAASzC,EAAE6L,OAAOvJ,KAAKH,SAASV,IAAI0B,EAAOgL,WAC7C1L,GACFA,EAAO2L,WAAWrN,KAAMoC,EAAQC,QAEzB1D,MAAM2O,QAAQlL,EAAOqB,MAC9BzD,KAAKuN,QAAQnL,EAAOqB,KAGtBzD,KAAK8M,iBAED9M,KAAKgK,YACPhK,KAAKwC,WAAWxC,KAAKmK,gBAAiB,UACtCnK,KAAKqJ,WAAW,CAAC,CACf9F,KAAM,eACNE,IAAK,gBAITzD,KAAKgN,gB,8BAGCQ,GACN,IAAMjJ,EAAOiJ,EAAI7B,MAAM,EAAG6B,EAAIjO,OAAS,GACjCkO,EAASD,EAAIA,EAAIjO,OAAS,IAAM,GAFZ,EAGE8E,EAAWrE,KAAMuE,GAArCI,EAHkB,EAGlBA,OAAQC,EAHU,EAGVA,QACM,oBAAXD,GACRA,EAAoB+I,MAAM9I,EAAS6I,K,mCAM3BE,GACX3N,KAAKoK,aAAa8C,OAAOhF,KAAKyF,GAC9B3N,KAAK4N,gBACLD,EAAME,QAAQ7N,Q,+BAGP2N,GACP,IAAM1E,EAAQjJ,KAAKoK,aAAa8C,OAAOhE,WAAU,SAAA7I,GAAC,OAAIA,EAAEE,MAAQoN,EAAMpN,OAClE0I,GAAS,GACXjJ,KAAKoK,aAAa8C,OAAO/D,OAAOF,EAAO,GAEzCjJ,KAAK8M,mB,sCAIL9M,KAAKoK,aAAa8C,OAAOvE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEtG,SAAWqG,EAAErG,c,gCAG/CuL,GACR,IAAMhN,EAAkB,kBAANgN,EAAkB,SAACzN,GAAD,OAAkBA,EAAEE,MAAQuN,GAAM,SAACzN,GAAD,OAAkBA,EAAEa,KAAO4M,GACjG,OAAO9N,KAAKoK,aAAa8C,OAAO1F,KAAK1G,K,uCAQrC,IAAM7B,EAAIe,KAAKoK,aACf,GAAInL,EAAEiO,OAAO3N,OAAS,EAAG,CACvB,IAAMoO,EAAQ1O,EAAEiO,OAAOjO,EAAEiO,OAAO3N,OAAS,GACzCS,KAAKqJ,WAAWsE,EAAMI,SAAS/N,YAE/BA,KAAK6D,oB,sCAKF7D,KAAKgO,UAAU,eAClBhO,KAAKyB,aAAa,IAAI2H,GACtBpJ,KAAK8M,iBACL9M,KAAKgN,iB,wCAIU,IAAD,OAEVzL,EADIvB,KAAKoK,aAAaU,OACPvJ,KACfwG,EAAUpJ,MAAMC,KAAK2C,EAAKH,SAASR,UAAU,SAAAP,GAAC,OAAIA,EAAE4N,gBAAgB,GAAMnO,KAAI,SAAAwE,GAAC,OAAImG,OAAOC,OAAOpG,EAAG,CAAE8I,UAAW/M,EAAEE,YAAS2N,OAClIlO,KAAKqJ,WAAWtB,K,kCAMhB,OAAO/H,KAAKoK,aAAaU,S,+BAIzB,OAAO9K,KAAKoK,aAAatK,M,gCAGjB0F,GACR,OAAOxF,KAAK0J,MAAM7J,KAAK8F,UAAUH,K,0CAIjCxF,KAAKiN,Y,GAvSS5C,IAAM8D,WClBTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OC6CCQ,E,kDAvCX,WAAYhP,GAAgC,IAAD,8BACvC,cAAM,CACFqB,GAAI,qBACJC,KAAM,wBAPd2N,aAI2C,IAH3CC,aAG2C,IAF3CC,aAE2C,EAKvC,EAAKF,QAAUjP,EAAKiP,QACpB,EAAKC,QAAUlP,EAAKkP,SAAW,EAC/B,EAAKC,QAAUnP,EAAKmP,SAAW,EAPQ,E,4DAU3BxN,GACZ,MAAO,CAAC,CACJ+B,KAAK,eAAD,OAAOvD,KAAKuB,KAAKJ,MACrBqC,SAAU,eACVsE,UAAU,SAAD,OAAM9H,KAAK+O,QAAU,EAArB,c,iCAINvN,EAAYY,GACnB,IAAMb,EAAOvB,KAAKuB,KAClBvB,KAAK+O,UACD/O,KAAK+O,SAAW/O,KAAKgP,SACrBzN,EAAKS,aAAaR,EAAMxB,MAExBb,EAAKqC,EAAKkC,YAAYgD,UACtBlF,EAAKgB,WAAW,0DAChBjB,EAAKS,aAAaR,EAAMxB,MACxBuB,EAAKqE,YAAYpE,EAAMxB,KAAK8O,SAAS,IAEjC9O,KAAK+O,SAAW/O,KAAKgP,SACrBxN,EAAKgB,WAAW,sEAChBhB,EAAKgB,WAAL,wCAAwBjB,EAAKJ,KAA7B,sBAAwC,WAExCK,EAAKgB,WAAW,4C,GAtCEP,GC0BnBgN,E,kDAtBX,cAA8D,IAAD,EAA/CtB,EAA+C,EAA/CA,MAAOuB,EAAwC,EAAxCA,KAAM9M,EAAkC,EAAlCA,OAAkC,4BACzD,cAAM,CACFlB,GAAI,gBACJC,KAAMwM,EAAMzM,MAPpByM,WAI6D,IAH7DvL,YAG6D,IAF7D8M,UAE6D,EAKzD,EAAKvB,MAAQA,EACb,EAAKvL,OAASA,GAAU,CAAEmB,KAAM,OAChC,EAAK2L,KAAOA,IAAQ,EAPqC,E,4DAU7C1N,GACZ,MAAO,CAACxB,KAAKoC,U,iCAGNZ,EAAYY,GACnBZ,EAAKC,aAAazB,KAAK2N,OACnB3N,KAAKkP,MACLlP,KAAKuB,KAAKS,aAAaR,EAAMxB,U,GAtBRiC,GCclBkN,E,kDAdX,WAAYtP,GAA6B,IAAD,8BACpC,cAAM,CACFqB,GAAI,OACJqB,SAAU,MALlB6M,WAEwC,EAKpC,EAAKA,MAAQvP,EAAKuP,MALkB,E,oDAQhC5N,GACJxB,KAAKoP,MAAMhP,SAAQ,SAAA8K,GAAC,OAAI1J,EAAKgB,WAAW0I,MACxC1J,EAAKgH,SAASxI,U,GAbSsC,GCqChB+M,E,kDA/BX,WAAYxP,GAA0B,IAAD,8BACjC,cAAM,CACFqB,GAAI,WACJqB,SAAU,KAPlB2K,YAIqC,IAHrCoC,YAGqC,IAFrCC,QAAkB,EAOd,EAAKrC,OAASrN,EAAKqN,OACnB,EAAKoC,OAAS3Q,MAAM,EAAKuO,OAAO3N,OAAS,GAAGiQ,KAAK,GAAG1P,KAAI,SAAC2P,EAAG/K,GAAJ,aAAU,UAAA7E,EAAKyP,cAAL,eAAc5K,KAAM,CAAEnB,KAAM,UAN7D,E,sDAS3B/B,GACN,GAAIxB,KAAKuP,SAAWvP,KAAKkN,OAAO3N,OAC5BiC,EAAKgH,SAASxI,UADlB,CAIA,IAAM0P,EAAK1P,KAAKkN,OAAOlN,KAAKuP,WAC5B/N,EAAKC,aAAaiO,M,8BAGdlO,GACJxB,KAAK2P,UAAUnO,K,+BAGVA,GACL,MAAO,CAACxB,KAAKsP,OAAOtP,KAAKuP,QAAU,M,8BAG/B/N,EAAYY,GAChBpC,KAAK2P,UAAUnO,O,GAhCKc,GCebsN,E,kDAbX,WAAY/P,GAA0B,IAAD,8BACjC,cAAM,CACFqB,GAAI,YACJqB,SAAU,MALlBmD,YAEqC,EAKjC,EAAKA,OAAS7F,EAAK6F,OALc,E,oDAQ7BlE,GACJA,EAAKsF,SAAS9G,KAAK0F,Y,GAZCpD,GCoEbuN,EA1EK,CAChBtM,KAAM,CACFiD,MAAO,eACPxB,OAAQ,eACRyB,MAAO,eACPtB,SAAU,eACVC,UAAW,eACXsB,QAAS,gBAEboJ,MAAO,CACH/C,MAAM,+gBAONgD,IAAI,6tCAYJC,cAAc,wOAMdC,KAAK,mGAGLC,MAAO,CACHC,QAAQ,yRAKRC,YAAY,2RAOpBC,KAAM,CACFC,QAAS,CACL,uCACA,mDACA,iCACA,uCACA,WAGRC,YAAa,CACTC,aAAa,qGAIbjP,KAAM,CACFkP,UAAU,4OCyBPC,E,kDArEX,WAAY7Q,GAAsB,IAAD,8BAC7B,yCACOA,GADP,IAEIqB,GAAI,UATZyP,cAMiC,IALjCC,cAKiC,IAJjCC,UAIiC,IAHjCC,cAGiC,IAFjCC,YAEiC,EAK7B,EAAKJ,SAAW9Q,EAAK8Q,SACrB,EAAKE,KAAOhR,EAAKgR,KACjB,EAAKD,SAAW/Q,EAAK+Q,UAAY,CAAErN,KAAM,OACzC,EAAKuN,SAAWjR,EAAKiR,WAAY,EACjC,EAAKC,QAAS,EATe,E,qDAYxBvP,EAAYE,EAAgBH,GACf,WAAdG,EAAOR,IAAoBlB,KAAK+Q,QAChC/Q,KAAKgR,KAAKxP,K,sCAIFA,GACZ,MAAO,CACH,CACI+B,KAAMvD,KAAKmB,KACXqC,SAAU,iCACV+F,QAAS,CACL,CAAEhG,KAAM,eAAME,IAAK,QACnB,CAAEF,KAAM,eAAME,IAAK,e,iCAMxBjC,EAAYY,EAAgBC,GAChB,SAAfA,EAAOoB,IACHzD,KAAK6Q,KACLrP,EAAKC,aAAazB,KAAK6Q,MAEvB7Q,KAAKgR,KAAKxP,GAEQ,WAAfa,EAAOoB,KACdzD,KAAKiR,WAAWzP,K,iCAIbA,GACPA,EAAKC,aAAa,IAAIyF,EAAY,CAAEC,OAAQ,CACxC,CAAEzF,OAAQF,EAAKkC,YAAaD,IAAK,YACjC,CAAE/B,OAAQ1B,KAAMyD,IAAK,wB,2BAIxBjC,GACIxB,KAAK+Q,OAKNvP,EAAKgB,WAAWxC,KAAK4Q,WAJrBpP,EAAKgB,WAAL,UAAmBxC,KAAKmB,KAAxB,YACAK,EAAKgB,WAAWxC,KAAK2Q,SAAU,QAC/B3Q,KAAK+Q,QAAS,K,mCAMTvP,EAAYqE,EAAqBC,GACtC9F,KAAKgF,QAA2B,IAAjBhF,KAAKiF,UACpBY,EAAOS,OAAO9E,EAAMxB,KAAMX,EAAUwG,EAAOsB,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEoD,MAAQqC,EAAKrC,QAAM/B,QAEnFmE,EAAOgC,OAAOrG,EAAMxB,U,GAvER+E,GCiBTmM,E,kDAzBX,WAAYrR,GAAyB,kEAE1BA,GAFyB,IAG5BqB,GAAI,a,qDAIHM,EAAYE,EAAgBH,IACf,WAAdG,EAAOR,IAAmBQ,aAAkB6E,IAC5C/E,EAAKC,aAAa,IAAIyF,EAAY,CAAEC,OAAQ,CACxC,CAAEzF,OAAQ1B,KAAMyD,IAAK,WACrB,CAAE/B,OAAQA,EAAwB+B,IAAK,kB,mCAKtCjC,EAAYqE,EAAqBC,GACtC9F,KAAKgF,QAAUhF,KAAKiF,UAAY,EAChCY,EAAOS,OAAO9E,EAAMxB,KAAMX,EAAUwG,EAAOsB,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEoD,MAAQqC,EAAKrC,QAAM/B,QAEnFmE,EAAOgC,OAAOrG,EAAMxB,U,GAtBJ+E,GCyCboM,E,kDA9BX,WAAYtR,GAAmB,IAAD,sBAC1B,IAAMuR,EAAQvR,EAAKuR,MACbC,EAAC,2BACAxR,GADA,IAEHqB,GAAI,SACJC,KAAK,GAAD,OAAKiQ,EAAMjQ,KAAX,sBACJ6D,OAAQoM,EAAMpM,OACdC,UAAWmM,EAAMnM,UACjBE,SAAUiM,EAAMjM,SAChBC,UAAWgM,EAAMhM,UACjBC,WAAY+L,EAAM/L,WAClBC,eAAgB8L,EAAM9L,iBAXA,OAa1B,cAAM+L,IAfVD,WAE8B,EAc1B,EAAKA,MAAQA,EAda,E,0DAiBhB5P,EAAYqE,EAAqBC,M,mCAIlCtE,EAAYqE,EAAqBC,GAC1CD,EAAOS,OAAO9E,EAAMxB,KAAMX,EAAUwG,EAAOsB,OAAOa,QAAO,SAAA3H,GAAC,OAAIA,EAAEoD,MAAQqC,EAAKrC,QAAM/B,U,kCAG3EF,EAAYqE,EAAqBC,GACzC9F,KAAKsR,WAAW9P,O,GA7BH0P,GCgBNK,E,kDAlBX,WAAY1R,GAA0B,IAAD,8BACjC,cAAMA,IAHV2R,YAEqC,EAEjC,EAAKA,OAAS3R,EAAK2R,OAFc,E,uDAK1BhQ,GACFxB,KAAKwR,QAAWxR,KAAKwR,OAAO3K,YAC7B7G,KAAKwR,OAAS,IAAIL,EAAO,CAAEC,MAAOpR,OAClCA,KAAKuB,KAAKM,UAAUL,EAAMxB,KAAKwR,SAEnChQ,EAAKC,aAAa,IAAIyF,EAAY,CAAEC,OAAQ,CACxC,CAAEzF,OAAQF,EAAKkC,YAAaD,IAAK,YACjC,CAAE/B,OAAQ1B,KAAMyD,IAAK,kBACrB,CAAE/B,OAAQ1B,KAAKwR,OAAQ/N,IAAK,0B,GAhBZiN,GCsDbe,E,WAzDX,WAAY5R,GAAkB,yBAFtBC,IAAsB,IAAIC,IAG1BF,GACAG,KAAKC,IAAL,MAAAD,KAAA,YAAYH,I,kDAIY,IAAC,IAAD,OACxBK,EAAQ,EADgB,mBAAzBC,EAAyB,yBAAzBA,EAAyB,gBAQ5B,OANAA,EAAMC,SAAQ,SAAAC,GACL,EAAKP,IAAIQ,IAAID,EAAEa,MAChB,EAAKpB,IAAIU,IAAIH,EAAEa,GAAIb,GACnBH,QAGDA,I,+BAGiC,IAAC,IAAD,OACpCA,EAAQ,EAD4B,mBAAlCC,EAAkC,yBAAlCA,EAAkC,gBAGxC,OADAA,EAAMC,SAAQ,SAAAC,GAAC,OAAIH,GAAS,EAAKJ,IAAIW,OAAoB,kBAANJ,EAAiBA,EAAIA,EAAEa,IAAM,EAAI,KAC7EhB,I,0BAGPgB,GACA,OAAOlB,KAAKF,IAAIY,IAAIQ,K,6BAIpB,OAAOvC,MAAMC,KAAKoB,KAAKF,IAAIa,U,+BAI3B,OAAOhC,MAAMC,KAAKoB,KAAKF,IAAIc,Y,8BAQ3BZ,KAAKF,IAAIe,U,8BAGLC,GACJ,OAAOd,KAAKF,IAAIM,QAAQU,K,2BAGvBA,GACD,cAAmBnC,MAAMC,KAAKoB,KAAKF,IAAIc,UAAvC,eAAkD,CAA7C,IAAMG,EAAI,KACX,GAAID,EAAGC,GACH,OAAOA,K,2BAdf,OAAOf,KAAKF,IAAIkB,S,KCqBT0Q,E,kDAtCX,WAAY7R,GAAsB,IAAD,8BAC7B,cAAM,CACFqB,GAAI,OACJqB,SAAU,MANlBoP,YAGiC,IAFjCC,oBAEiC,EAK7B,EAAKD,OAAS,IAAIF,EAAM5R,EAAK8R,QAC7B,EAAKC,eAAiB/R,EAAKgS,OAAShS,EAAK8R,OAAO,GAAGzQ,GANtB,E,oDASzBM,GACJxB,KAAK8R,uBAAuBtQ,K,+BAGvBA,GAA4B,IAAD,EAC1BuQ,EAAQ/R,KAAK2R,OAAOjR,IAAIV,KAAK4R,gBACnC,OAAY,OAALG,QAAK,IAALA,GAAA,UAAAA,EAAOhK,eAAP,eAAgBjI,KAAI,SAAAO,GAAC,MAAK,CAAEkD,KAAMlD,EAAEkD,KAAME,IAAKpD,EAAE0D,aAAc,K,8BAGlEvC,EAAYY,EAAgBC,GACN,kBAAfD,EAAOqB,KACdzD,KAAK4R,eAAiBxP,EAAOqB,IAC7BzD,KAAK8R,uBAAuBtQ,IAE5BA,EAAKgH,SAASxI,Q,6CAICwB,GACnB,IAAMuQ,EAAQ/R,KAAK2R,OAAOjR,IAAIV,KAAK4R,gBAC/BG,IACAA,EAAMxO,KAAKnD,SAAQ,SAAA4R,GAAI,OAAIxQ,EAAKgB,WAAWwP,MACtCD,EAAMhK,SAAYgK,EAAMhK,QAAQxI,QACjCiC,EAAKgH,SAASxI,W,GApCNsC,GCNxB,SAAS2P,IACL,OAAO,EAAI1T,EAAQ,EAAG,EAAG,GAG7B,IAyMe8S,EAzMF,CACT9G,WADS,WAEL,IAAM2H,EAAc,IAAIxB,EAAU,CAC9BvP,KAAM,qBACN6D,OAAQ,EACRC,UAAW,EACXE,SAAU,GACVC,UAAW,GACXC,WAAY,EACZC,eAAgB,eAChBqL,SAAU,CAAEpN,KAAM,aAAc8I,YAAY,KAE1C8F,EAAgB,IAAIZ,EAAc,CACpCpQ,KAAM,eACN6D,OAAQ,EACRC,UAAW,EACXE,SAAU,GACVC,UAAW,GACXC,WAAY,EACZC,eAAgB,eAChBC,MAAO,CACH,IAAInC,EAAW,CAAEC,KAAM,IAAIZ,EAAK,CAAEtB,KAAM,2CACxC,IAAIiC,EAAW,CAAEC,KAAM,IAAIZ,EAAK,CAAEtB,KAAM,sCAE5CwP,SAAU,CAAEpN,KAAM,sBAAuB8I,YAAY,GACrDuE,SAAU,CAAErN,KAAM,eAAgB8I,YAAY,KAE5C6D,EAAQ,IAAIQ,EAAU,CACxBvP,KAAM,qBACN6D,OAAQ,EACRC,UAAW,EACXE,SAAU,GACVC,UAAW,GACXC,WAAY,EACZC,eAAgB,eAChBqL,SAAU,yBAIRyB,EAAQ,CACV,IAAInR,EAAK,CACLC,GAAI,YACJC,KAAM,eACNC,SAAU,CAAC,IAAI6N,EAAmB,CAC9BtB,MAAO,IAAI+D,EAAU,CACjBC,OAAQ,CACJ,CAAEzQ,GAAI,QAASqC,KAAM,CAAC,yBAKtC,IAAItC,EAAK,CACLC,GAAI,WACJC,KAAM,2BACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,cACzB,IAAIkL,EAAmB,CACnB7M,OAAQ,CAAEmB,KAAM,uCAAUC,SAAU,gBACpCmK,MAAO,IAAIiC,EAAc,CAAElK,OAAQ,qDACnCwJ,MAAM,OAIlB,IAAIjO,EAAK,CACLC,GAAI,YACJC,KAAM,qBACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,eACzB,IAAID,EAAW,CAAEC,OAAQ,aACzBoO,KAGR,IAAIlR,EAAK,CACLC,GAAI,aACJC,KAAM,qBACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,gBACzB,IAAID,EAAW,CAAEC,OAAQ,iBAGjC,IAAI9C,EAAK,CACLC,GAAI,cACJC,KAAM,eACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,WACzB,IAAID,EAAW,CAAEC,OAAQ,eACzB,IAAID,EAAW,CAAEC,OAAQ,cACzB,IAAIX,EAAW,CAAEC,KAAM,IAAIT,EAAY,CACnC1B,GAAI,OACJC,KAAM,eACN0B,OAAQ,IACRS,WAAW,OAGvB,IAAIrC,EAAK,CACLC,GAAI,aACJC,KAAM,2BACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,gBACzBmO,EACA,IAAIrD,EAAoB,CACpBC,QAAS,CAAC,IAAI1L,EAAW,CAACC,KAAM,IAAIT,EAAY,CAC5CzB,KAAM,qBACN0B,OAAQ,CAAEE,MAAO,EAAGrE,MAAO,EAAGuE,KAAM,KACpCK,WAAW,UAI3B,IAAIrC,EAAK,CACLC,GAAI,SACJC,KAAM,eACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,oBACzB,IAAID,EAAW,CAAEC,OAAQ,gBACzBmM,KAGR,IAAIjP,EAAK,CACLC,GAAI,kBACJC,KAAM,iCACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,WACzB,IAAImN,EAAc,CACd/P,KAAM,qBACNkE,WAAY,CAAEtC,MAAO,EAAGE,IAAK,GAC7BqC,eAAgB,eAChBN,OAAQ,GACRC,UAAW,GACXE,SAAU,GACVC,UAAW,GACXG,MAAO,CAAC,IAAIzB,EAAW,CACnBC,OAAQ,qBAKxB,IAAI9C,EAAK,CACLC,GAAI,aACJC,KAAM,2BACNC,SAAU,CACN,IAAI0C,EAAW,CAAEC,OAAQ,oBACzB,IAAIkL,EAAmB,CACnB7M,OAAQ,CAAEmB,KAAM,2BAAQC,SAAU,sBAClCmK,MAAO,IAAI0B,EAAc,CACrBnC,OAAQ,CACJ,IAAIiC,EAAiB,CAAEC,MAAO,CAAC,CAAE7L,KAAM,YAAa8I,YAAY,MAChE,IAAIuD,EAAc,CAAElK,OAAQ,8BAEhC4J,OAAQ,CAAC,CAAE/L,KAAM,8BAKjC,IAAItC,EAAK,CACLC,GAAI,YACJC,KAAM,eAGRrB,EAAM,IAAIC,IAChBqS,EAAMtS,KAAI,SAAAb,GAAC,OAAIa,EAAIU,IAAIvB,EAAEiC,GAAIjC,MAC7B,IAAMoT,EAAkB9T,EAAQ,IAAM,EACtC,MAAO,CACH2O,OAAQ,GACRpN,MACAiI,QAAS,GACTgD,KAAM,EACND,OAAQ,IAAIvE,EAAa,CACrBrF,GAAI,SACJC,KAAM,qBACNI,KAAMzB,EAAIY,IAAI,YACd8F,MAAOyL,IACPjN,OAAQqN,EACRpN,UAAWoN,EACX5L,MAAOwL,IACP9M,SAAU8M,IACV7M,UAAW6M,IACXvL,QAASuL,IACTtL,YAAa,KACbC,UAAW,CACP,IAAInE,EAAK,CAAEtB,KAAM,oCAErBkE,WAAY,EACZC,eAAgB,mBAI5ByH,MAAO,SAACvL,GACJA,EAAKgB,WAAW,CAAEe,KAAM,cAAe8I,YAAY,IACnD7K,EAAKkC,YAAYS,SAAS3C,EAAMA,EAAKyC,SAASvD,IAAI,cAEtDiF,UA9LS,SA8LCH,GACN,IAAMb,EnB3Md,SAAuB2N,EAAW/N,GAAyE,IAAxCgO,EAAuC,uDAAV,IACtF9N,GADgG,uDAA3C,IAC7B+H,MAAM+F,GAAWjJ,OAAO/E,EAAKiI,MAAM+F,IAAYvK,QAAO,SAAA3H,GAAC,MAAU,KAANA,KACzF,OAAOgE,EAAWiO,EAAM7N,GAAGE,OmByMR6N,CAAc3C,EAAarK,EAAKA,EAAIiN,QAAQ,MAAQ,EAAI,GAAK,SAAWjN,EACvF,OAAI7G,MAAM2O,QAAQ3I,GACPtF,EAAUsF,GAEI,kBAAXA,EAAsBA,EAASzB,OAAOyB,K,UCnN5D,WACS8F,OAAOiI,cAERjI,OAAOiI,YAAc,SAA6BC,GAE9C,IADA,IAAMrO,EAA+B,GAC5B2E,EAAQ,EAAGA,EAAQ0J,EAAQpT,OAAQ0J,IAAS,CACjD,IAAM4I,EAAQc,EAAQ1J,GACtB3E,EAAEuN,EAAM,IAAMA,EAAM,GAExB,OAAOvN,IAIV3F,MAAMiU,UAAU1E,OAEjBvP,MAAMiU,UAAU1E,KAAO,SAAwC2E,GAC3D,IADoF,EAChFC,EAAgB,GADgE,eAEpE9S,MAFoE,IAEpF,2BAAsB,CAAC,IAAZ4I,EAAW,QAClBkK,EAAMA,EAAIxJ,OAAOV,IAH+D,8BAKpF,OAAOkK,KCdnBC,GAEAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKrT,KAAMA,EAAMsI,UAA6E,SAAlE,IAAIgL,gBAAgBC,OAAOC,SAASC,QAAQ5S,IAAI,kBAE9E6S,SAASC,eAAe,SAM1BpF,M","file":"static/js/main.26cf3957.chunk.js","sourcesContent":["import { Dice } from \"../interfaces/interfaces\";\r\n\r\nfunction randInt(max: number, min: number = 0, times: number = 1): number {\r\n    return Array.from(Array(times), () => Math.floor(Math.random() * (max - min) + min)).reduce((s, n) => s + n, 0);\r\n}\r\n\r\nfunction rollDice(dice: Dice | number): number {\r\n    if (typeof dice === 'number') return dice;\r\n    return randInt(dice.faces + 1, 1, dice.times) * (dice.factor || 1) + (dice.fix || 0);\r\n}\r\n\r\nfunction test(possibility: number): boolean {\r\n    return (Math.random() < (possibility > 1 ? possibility / 100 : possibility));\r\n}\r\n\r\nfunction chooseOne<T>(choices: Array<T>): T {\r\n    return choices[randInt(choices.length)];\r\n}\r\n\r\nlet uidc = Date.now();\r\nfunction genUid(): number {\r\n    return uidc++;\r\n}\r\n\r\nexport {\r\n    randInt,\r\n    test,\r\n    rollDice,\r\n    chooseOne,\r\n    genUid,\r\n}","import { Unique } from \"../interfaces/types\";\r\n\r\nclass UniqueMap<T extends Unique> {\r\n    private map: Map<number, T> = new Map<number, T>();\r\n\r\n    constructor(data?: Array<T>) {\r\n        if (data) {\r\n            this.add(...data);\r\n        }\r\n    }\r\n\r\n    add(...elems: Array<T>): number {\r\n        let count = 0;\r\n        elems.forEach(e => {\r\n            if (!this.map.has(e.uid)) {\r\n                this.map.set(e.uid, e);\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n    remove(...elems: Array<T | number>): number {\r\n        let count = 0;\r\n        elems.forEach(e => count += this.map.delete(typeof e === 'number' ? e : e.uid) ? 1 : 0);\r\n        return count;\r\n    }\r\n\r\n    get(uid: number): T | undefined {\r\n        return this.map.get(uid);\r\n    }\r\n\r\n    keys(): Array<number> {\r\n        return Array.from(this.map.keys());\r\n    }\r\n\r\n    values(): Array<T> {\r\n        return Array.from(this.map.values());\r\n    }\r\n    \r\n    get size(): number {\r\n        return this.map.size;\r\n    }\r\n\r\n    clear(): void {\r\n        this.map.clear();\r\n    }\r\n\r\n    forEach(fn: (elem: T) => void): void {\r\n        return this.map.forEach(fn);\r\n    }\r\n\r\n    find(fn: (elem: T) => boolean): T | undefined {\r\n        for (const elem of Array.from(this.map.values())) {\r\n            if (fn(elem)) {\r\n                return elem;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport default UniqueMap;","import { Game, GameEvent } from \"../interfaces/interfaces\";\r\nimport { Identical, Named } from \"../interfaces/types\";\r\nimport Entity from \"./entities/Entity\";\r\nimport UniqueMap from \"./UniqueMap\";\r\n\r\ninterface SiteData extends Identical, Named {\r\n    entities?: Array<Entity>;\r\n    onEnter?: ((game: Game) => void) | GameEvent;\r\n}\r\n\r\nclass Site implements Identical, Named {\r\n\r\n    static FAKE_SITE = new Site({\r\n        id: '__fake_site__',\r\n        name: 'Fake Site',\r\n        entities: [],\r\n    });\r\n    \r\n    id: string;\r\n    name: string;\r\n    entities: UniqueMap<Entity> = new UniqueMap<Entity>();\r\n\r\n    private onEnterFn: ((game: Game) => void) | GameEvent | null;\r\n    \r\n    constructor(data: SiteData) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.onEnterFn = data.onEnter || null;\r\n        data.entities?.forEach(e => {\r\n            this.entities.add(e);\r\n            e.site = this;\r\n        });\r\n    }\r\n\r\n    onEnter(game: Game): void {\r\n        if (this.onEnterFn) {\r\n            if (typeof this.onEnterFn === 'function') {\r\n                this.onEnterFn(game);\r\n            } else {\r\n                game.triggerEvent(this.onEnterFn);\r\n            }\r\n        }\r\n    }\r\n\r\n    addEntity(game: Game, entity: Entity, silent: boolean = false): Site {\r\n        this.entities.add(entity);\r\n        if (entity.site !== this) {\r\n            entity.site = this;\r\n            if (!silent) {\r\n                this.entities.values().forEach(e => e.onDetect(game, entity, this));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addEntities(game: Game, entities: Array<Entity>, silent: boolean = false): Site {\r\n        entities.forEach(e => this.addEntity(game, e, silent));\r\n        return this;\r\n    }\r\n\r\n    removeEntity(game: Game, entity: Entity): Site {\r\n        this.entities.remove(entity.uid);\r\n        entity.site = Site.FAKE_SITE;\r\n        return this;\r\n    }\r\n\r\n    removeEntities(game: Game, entities: Array<Entity>): Site {\r\n        entities.forEach(e => this.removeEntity(game, e));\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default Site;\r\nexport type {\r\n    SiteData,\r\n}","import { Game, Option } from \"../../interfaces/interfaces\";\r\nimport { Identical, Named, Subopt, Unique } from \"../../interfaces/types\";\r\nimport { genUid } from \"../../utils/math\";\r\nimport Site from \"../Site\";\r\n\r\ninterface EntityData {\r\n    id?: string;\r\n    uid?: number;\r\n    name: string;\r\n    site?: Site;\r\n}\r\n\r\nclass Entity implements Identical, Unique, Named {\r\n    id: string;\r\n    uid: number;\r\n    name: string;\r\n    site: Site;\r\n\r\n    constructor(data: EntityData) {\r\n        this.id = data.id || 'entity';\r\n        this.uid = data.uid || genUid();\r\n        this.name = data.name;\r\n        this.site = data.site || Site.FAKE_SITE;\r\n    }\r\n\r\n    onDetect(game: Game, entity: Entity, site: Site) {\r\n        // empty\r\n    }\r\n\r\n    goToSite(game: Game, newSite: Site, silient: boolean = false): void {\r\n        this.site.removeEntity(game, this);\r\n        if (silient) {\r\n            newSite.entities.add(this);\r\n        } else {\r\n            newSite.addEntity(game, this);\r\n        }\r\n        this.site = newSite;\r\n    }\r\n\r\n    getInteractions(game: Game): Array<Option> {\r\n        // return [{\r\n        //     text: this.name,\r\n        //     tag: this.uid,\r\n        // }];\r\n        return [];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option, subopt: Subopt | null): void {\r\n        // if (option.tag === this.uid) {\r\n        //     game.appendText(this.name);\r\n        // }\r\n    }\r\n}\r\n\r\nexport default Entity;\r\nexport type {\r\n    EntityData,\r\n}","import { Game, Option } from \"../interfaces/interfaces\";\r\nimport { Identical, Subopt, Unique } from \"../interfaces/types\";\r\nimport { genUid } from \"../utils/math\";\r\n\r\ninterface EventData {\r\n    id: string;\r\n    priority?: number;\r\n    uid?: number;\r\n}\r\n\r\nclass GameEvent implements Identical, Unique {\r\n    id: string;\r\n    priority: number;\r\n    uid: number;\r\n\r\n    constructor(data: EventData) {\r\n        this.id = data.id;\r\n        this.priority = data.priority || 0;\r\n        this.uid = data.uid || genUid();\r\n    }\r\n\r\n    onStart(game: Game): void {\r\n        game.appendText(`事件[${this.id}]开始了`);\r\n    }\r\n\r\n    onRender(game: Game): Array<Option> {\r\n        return [];\r\n    }\r\n\r\n    onInput(game: Game, option: Option, subopt: Subopt | null): void {\r\n        game.appendText(`来自事件[${this.id}]`);\r\n    }\r\n}\r\n\r\nexport default GameEvent;\r\nexport type {\r\n    EventData,\r\n}","import { Game } from \"../../interfaces/interfaces\";\r\nimport { Damage, Identical, Named, Unique } from \"../../interfaces/types\";\r\nimport { genUid } from \"../../utils/math\";\r\nimport LivingEntity from \"../entities/LivingEntity\";\r\n\r\ninterface ItemData {\r\n    id?: string;\r\n    uid?: number;\r\n    name: string;\r\n}\r\n\r\nclass Item implements Identical, Unique, Named {\r\n    id: string;\r\n    uid: number;\r\n    name: string;\r\n\r\n    constructor(data: ItemData) {\r\n        this.id = data.id || 'item';\r\n        this.uid = data.uid || genUid();\r\n        this.name = data.name;\r\n    }\r\n\r\n    onAttack(game: Game, entity: LivingEntity): Damage {\r\n        return { value: 0, type: 'melee' };\r\n    }\r\n\r\n    previewDamage(game: Game, entity?: LivingEntity): string {\r\n        return '0';\r\n    }\r\n}\r\n\r\nexport default Item;\r\nexport type {\r\n    ItemData,\r\n}","import { Game } from \"../../interfaces/interfaces\";\r\nimport { Damage, Dice } from \"../../interfaces/types\";\r\nimport { rollDice } from \"../../utils/math\";\r\nimport LivingEntity from \"../entities/LivingEntity\";\r\nimport Item, { ItemData } from \"./Item\";\r\n\r\ninterface MeleeWeaponData extends ItemData {\r\n    damage: number | Dice;\r\n}\r\n\r\nclass MeleeWeapon extends Item {\r\n    damage: number | Dice;\r\n\r\n    constructor(data: MeleeWeaponData) {\r\n        super({\r\n            ...data,\r\n            id: data.id || 'melee_weapon'\r\n        });\r\n        this.damage = data.damage;\r\n    }\r\n\r\n    onAttack(game: Game, entity: LivingEntity): Damage {\r\n        return {\r\n            value: rollDice(this.damage),\r\n            type: 'melee',\r\n        };\r\n    }\r\n\r\n    previewDamage(game: Game, entity: LivingEntity): string {\r\n        if (typeof this.damage === 'number') {\r\n            return String(this.damage);\r\n        } else {\r\n            const { faces, times, fix, factor } = this.damage;\r\n            let str = `${times || 1}d${faces}`;\r\n            if (factor && factor !== 1) {\r\n                str = `${factor}*(${str})`;\r\n            }\r\n            if (fix) {\r\n                str += fix >= 0 ? '+' + fix : String(fix);\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeleeWeapon;\r\nexport type {\r\n    MeleeWeaponData,\r\n}","import { Game, Item, Option } from \"../../interfaces/interfaces\";\r\nimport Entity from \"./Entity\";\r\nimport Site from \"../Site\";\r\n\r\ninterface ItemEntityData {\r\n    site?: Site;\r\n    item: Item;\r\n    autoEquip?: boolean;\r\n}\r\n\r\nclass ItemEntity extends Entity {\r\n    item: Item;\r\n    autoEquip: boolean;\r\n\r\n    constructor({ item, site, autoEquip }: ItemEntityData) {\r\n        super({\r\n            id: 'item', \r\n            name: item.name,\r\n            site,\r\n        });\r\n        this.item = item;\r\n        this.autoEquip = autoEquip || false;\r\n    }\r\n    \r\n    getInteractions() {\r\n        return [{\r\n            text: '捡起' + this.item.name,\r\n            leftText: '💎',\r\n            tag: [],\r\n        }];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option) {\r\n        if (this.autoEquip) {\r\n            game.getPlayer().holdItem(game, this.item);\r\n        } else {\r\n            game.getPlayer().addItemToInventory(game, this.item);\r\n        }\r\n        this.site.removeEntity(game, this);\r\n        game.showPortOptions();\r\n    }\r\n}\r\n\r\nexport default ItemEntity;\r\nexport type {\r\n    ItemEntityData,\r\n}","import { Game, Option } from \"../../interfaces/interfaces\";\r\nimport Entity from \"./Entity\";\r\nimport Site from \"../Site\";\r\n\r\ninterface PortEntityData {\r\n    site?: Site;\r\n    target: string;\r\n    timeCost?: number;\r\n}\r\n\r\nclass PortEntity extends Entity {\r\n    target: string;\r\n    timeCost: number;\r\n\r\n    constructor({ target, site, timeCost }: PortEntityData) {\r\n        super({\r\n            id: 'port', \r\n            name: target,\r\n            site,\r\n        });\r\n        this.target = target;\r\n        this.timeCost = timeCost || 1;\r\n    }\r\n    \r\n    getInteractions(game: Game) {\r\n        return [{\r\n            text: '去往' + (game.getMap().get(this.target)?.name || '#ERROR#'),\r\n            leftText: (game.getPlayer().prevSite?.id === this.target) ? '⬅' : '➡',\r\n            tag: this.uid,\r\n        }];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option) {\r\n        if (option.tag === this.uid) {\r\n            const site = game.getMap().get(this.target);\r\n            if (site) {\r\n                game.getPlayer().goToSite(game, site);\r\n                game.timePass(this.timeCost);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PortEntity;\r\nexport type {\r\n    PortEntityData,\r\n}","function copy<T>(ori: T, shallow: boolean = false): T {\r\n    if (!ori) return ori; // false, null, undefined\r\n    if (typeof ori === 'object') {\r\n        if (Array.isArray(ori)) {\r\n            return (shallow ? [...ori] : ori.map(copy as any)) as unknown as T;\r\n        }\r\n        return shallow ? {...ori} : Object.fromEntries(\r\n            Object.entries(ori)\r\n            .map((k, v) => [k, copy(v)])\r\n        );\r\n    }\r\n    return ori;\r\n    // return JSON.parse(JSON.stringify(ori));\r\n}\r\n\r\nfunction findByPath(o: any, path: Array<string>) {\r\n    let w = o, p = null;\r\n    for (let i = 0; i < path.length && w; i++) {\r\n        const key = path[i];\r\n        p = w;\r\n        w = w[key];\r\n    }\r\n    return {\r\n        result: w,\r\n        thisArg: p,\r\n    };\r\n}\r\n\r\nexport {\r\n    copy,\r\n    findByPath,\r\n}","import { findByPath } from \"./objects\";\r\n\r\nfunction num2strWithSign(num: number): string {\r\n    return num >= 0 ? '+' + num : String(num);\r\n}\r\n\r\nfunction findByPathStr(root: any, path: string, base: string = '', seperator: string | RegExp = '.'): any {\r\n    const p: Array<string> = base.split(seperator).concat(path.split(seperator)).filter(e => e !== '');\r\n    return findByPath(root, p).result;\r\n}\r\n\r\nexport {\r\n    num2strWithSign,\r\n    findByPathStr,\r\n}","import { CombatEvent, Damage, Dice, Game, Item, ItemEntity, MeleeWeapon, Site } from \"../../interfaces/interfaces\";\r\nimport { test } from \"../../utils/math\";\r\nimport { num2strWithSign } from \"../../utils/strings\";\r\nimport { CombatEntity } from \"../events/CombatEvent\";\r\nimport Entity, { EntityData } from \"./Entity\";\r\n\r\ninterface LivingEntityData extends EntityData {\r\n    health: number;\r\n    maxHealth: number;\r\n    shield?: number;\r\n    strength: number;\r\n    dexterity: number;\r\n    baseDamage: Dice | number;\r\n    baseWeaponName: string;\r\n    loots?: Array<Entity | Item>;\r\n}\r\n\r\nclass LivingEntity extends Entity {\r\n    \r\n    health: number;\r\n    maxHealth: number;\r\n    shield: number;\r\n    strength: number;\r\n    dexterity: number;\r\n    baseDamage: Dice | number;\r\n    baseWeaponName: string;\r\n    loots: Array<Entity>;\r\n\r\n    constructor(data: LivingEntityData) {\r\n        super(data);\r\n        this.health = data.health;\r\n        this.maxHealth = data.maxHealth;\r\n        this.shield = data.shield || 0;\r\n        this.strength = data.strength;\r\n        this.dexterity = data.dexterity;\r\n        this.baseDamage = data.baseDamage;\r\n        this.baseWeaponName = data.baseWeaponName;\r\n        this.loots = data.loots?.map(e => e instanceof Item ? new ItemEntity({ item: e }) : e) || [];\r\n    }\r\n\r\n    mutateValue(game: Game, key: string, delta: number, reason?: string): void {\r\n        switch(key) {\r\n            case 'health': this.health += delta; break;\r\n            case 'strength': this.strength += delta; break;\r\n            case 'dexterity': this.dexterity += delta; break;\r\n        }\r\n        game.appendText(`${this.name} ${reason || ''} ${game.translate(key)} ${num2strWithSign(delta)}`);\r\n        if (this.health <= 0) {\r\n            game.appendText(`${this.name}死亡`);\r\n            this.site.addEntities(game, this.loots);\r\n            this.site.removeEntity(game, this);\r\n        }\r\n    }\r\n\r\n    onCombatStart(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        // empty\r\n    }\r\n\r\n    onCombatTurn(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        // empty\r\n    }\r\n\r\n    onCombatEnd(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        // empty\r\n    }\r\n\r\n    attack(game: Game, target: LivingEntity, isFightBack: boolean = false): Damage {\r\n        const weapon = this.getWeapon();\r\n        const damage: Damage = weapon.onAttack(game, target);\r\n        this.onAttack(game, damage, target);\r\n        if (damage.value) {\r\n            target.onReceiveDamage(game, damage, this, isFightBack);\r\n        }\r\n        return damage;\r\n    }\r\n\r\n    onAttack(game: Game, damage: Damage, target: LivingEntity): void {\r\n        // empty\r\n    }\r\n\r\n    onReceiveDamage(game: Game, damage: Damage, source: LivingEntity, isFightBack: boolean = false) {\r\n        if (!isFightBack) {\r\n            if (test(this.dexterity)) {\r\n                const s = `${this.name}躲过了${source.name}的进攻`;\r\n                if (test(this.dexterity)) {\r\n                    game.appendText(s + `，并返回打一把`, 'good');\r\n                    this.attack(game, source, true);\r\n                } else {\r\n                    game.appendText(s, 'good');\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        damage.value = Math.max(0, damage.value - this.shield);\r\n        if (damage.value) {\r\n            this.mutateValue(game, 'health', -damage.value, `受到${source.name}攻击`);\r\n        } else {\r\n            game.appendText(`${this.name}的护甲防住了${source.name}的攻势`, 'good');\r\n        }\r\n    }\r\n\r\n    goToSite(game: Game, newSite: Site): void {\r\n        game.appendText(`${this.name}来到了${newSite.name}`, 'mutate');\r\n        super.goToSite(game, newSite);\r\n    }\r\n\r\n    getWeapon(): Item {\r\n        return new MeleeWeapon({\r\n            id: 'melee',\r\n            name: this.baseWeaponName,\r\n            damage: this.baseDamage,\r\n        });\r\n    }\r\n\r\n    isAlive(): boolean {\r\n        return this.health > 0;\r\n    }\r\n\r\n    removeSelf(game: Game): boolean {\r\n        if (this.site !== Site.FAKE_SITE) {\r\n            this.site.removeEntity(game, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LivingEntity;\r\nexport type {\r\n    LivingEntityData,\r\n}","import { Game, Option, Site } from \"../../interfaces/interfaces\";\r\nimport LivingEntity, { LivingEntityData } from \"./LivingEntity\";\r\nimport Item from \"../items/Item\";\r\nimport ItemEntity from \"./ItemEntity\";\r\nimport UniqueMap from \"../UniqueMap\";\r\nimport { num2strWithSign } from \"../../utils/strings\";\r\n\r\ninterface PlayerEntityData extends LivingEntityData {\r\n    money: number;\r\n    magic: number;\r\n    insight: number;\r\n    holdingItem: Item | null;\r\n    inventory: Array<Item>;\r\n    prevSite?: Site;\r\n}\r\n\r\nclass PlayerEntity extends LivingEntity {\r\n    money: number;\r\n    magic: number;\r\n    insight: number;\r\n    holdingItem: Item | null;\r\n    inventory: UniqueMap<Item> = new UniqueMap<Item>();\r\n    prevSite?: Site;\r\n\r\n    constructor(data: PlayerEntityData) {\r\n        super({...data, id: 'player'});\r\n        this.money = data.money;\r\n        this.magic = data.magic;\r\n        this.insight = data.insight;\r\n        this.holdingItem = data.holdingItem;\r\n        data.inventory.forEach(e => this.inventory.add(e));\r\n        this.prevSite = data.prevSite;\r\n    }\r\n\r\n    mutateValue(game: Game, key: string, delta: number, reason?: string): void {\r\n        switch(key) {\r\n            case 'health': this.health += delta; break;\r\n            case 'magic': this.magic += delta; break;\r\n            case 'money': this.money += delta; break;\r\n            case 'strength': this.strength += delta; break;\r\n            case 'insight': this.insight += delta; break;\r\n            case 'dexterity': this.dexterity += delta; break;\r\n        }\r\n        game.appendText(`${this.name} ${reason || ''} ${game.translate(key)} ${num2strWithSign(delta)}`);\r\n        if (!this.isAlive()) {\r\n            game.gameOver('失血过多');\r\n        }\r\n    }\r\n\r\n    holdItem(game: Game, item: Item | null, replaceOption: 'drop' | 'restore' | 'delete' = 'restore'): void {\r\n        const prevItem = this.holdingItem;\r\n        this.holdingItem = item;\r\n        if (item) {\r\n            this.inventory.remove(item);\r\n            game.appendText(`${this.name}拿起了${item.name}`, 'mutate');\r\n        } else if (prevItem) {\r\n            game.appendText(`${this.name}收起了${prevItem.name}`, 'mutate');\r\n        }\r\n        if (!prevItem) return;\r\n        switch (replaceOption) {\r\n            case 'drop': this.site.addEntity(game, new ItemEntity({ item: prevItem })); break;\r\n            case 'restore': this.inventory.add(prevItem); break;\r\n            case 'delete': break;\r\n        }\r\n    }\r\n\r\n    goToSite(game: Game, newSite: Site): void {\r\n        this.prevSite = this.site;\r\n        super.goToSite(game, newSite);\r\n    }\r\n\r\n    goBack(game: Game): boolean {\r\n        if (this.prevSite && this.prevSite !== Site.FAKE_SITE) {\r\n            const currentSite = this.site;\r\n            super.goToSite(game, this.prevSite);\r\n            this.prevSite = currentSite;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    addItemToInventory(game: Game, item: Item): boolean {\r\n        if (this.inventory.add(item)) {\r\n            game.appendText(`${this.name}获得了${item.name}`, 'mutate');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeItemFromInventory(game: Game, item: Item | number, replaceOption: 'drop' | 'delete' = 'drop'): boolean {\r\n        if (typeof item === 'number') {\r\n            const i = this.inventory.get(item);\r\n            if (!i) return false;\r\n            item = i;\r\n        }\r\n        if (!this.inventory.remove(item)) return false;\r\n        switch (replaceOption) {\r\n            case 'drop': this.site.addEntity(game, new ItemEntity({ item, site: this.site })); break;\r\n            case 'delete': break;\r\n        }\r\n        game.appendText(`${this.name}失去了${item.name}`, 'mutate');\r\n        return true;\r\n    }\r\n\r\n    getWeapon(): Item {\r\n        return this.holdingItem || super.getWeapon();\r\n    }\r\n\r\n    getInteractions(): Array<Option> {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default PlayerEntity;\r\nexport type {\r\n    PlayerEntityData,\r\n}","import { Game, GameEvent, LivingEntity, Option } from \"../../interfaces/interfaces\";\r\nimport { test } from \"../../utils/math\";\r\n\r\ninterface CombatEntity {\r\n    entity: LivingEntity;\r\n    tag: any;\r\n    dexFix: number;\r\n    order: number;\r\n}\r\n\r\ninterface CombatEntityData {\r\n    entity: LivingEntity;\r\n    tag: any;\r\n    dexFix?: number;\r\n}\r\n\r\ninterface CombatEventData {\r\n    uid?: number;\r\n    priority?: number;\r\n    rivals: Array<CombatEntityData>;\r\n    next?: number;\r\n}\r\n\r\nclass CombatEvent extends GameEvent {\r\n    rivals: Array<CombatEntity>;\r\n    next: CombatEntity;\r\n\r\n    constructor(data: CombatEventData) {\r\n        super({\r\n            ...data,\r\n            id: 'combat',\r\n            priority: 10,\r\n        });\r\n        this.rivals = data.rivals.map((e, i) => ({\r\n            entity: e.entity,\r\n            tag: e.tag,\r\n            dexFix: e.dexFix || 0,\r\n            order: i,\r\n        }));\r\n        if (!this.rivals.length) {\r\n            throw new Error(\"Combat with no rivals is not allowed!\");\r\n        }\r\n        if ('next' in data) {\r\n            this.next = this.rivals.find(e => e.entity.uid === data.next) || this.rivals[0];\r\n        } else {\r\n            this.next = this.rivals[0];\r\n        }\r\n    }\r\n\r\n    onStart(game: Game) {\r\n        game.appendText('战斗开始！');\r\n        this.rivals.forEach(e => e.entity.onCombatStart(game, this, e));\r\n        this.displayRivals(game);\r\n        this.runForPlayer(game);\r\n    }\r\n\r\n    onRender(game: Game): Array<Option> {\r\n        const p = game.getPlayer();\r\n        const cp = this.rivals.find(e => e.entity.uid === p.uid);\r\n        const escape = { \r\n            text: `逃跑`,\r\n            leftText: '🏃‍',\r\n            rightText: `${p.dexterity}%`,\r\n            tag: 'escape',\r\n        };\r\n        if (!cp) {\r\n            return [escape];\r\n        }\r\n        const weapon = p.getWeapon();\r\n        const options: Array<Option> = this.rivals.filter(e => e.tag !== cp.tag).map(e => ({\r\n            text: `攻击${e.entity.name}`,\r\n            leftText: '🗡',\r\n            rightText: `${weapon.previewDamage(game, e.entity)}♥`,\r\n            tag: e.entity.uid,\r\n        }));\r\n        options.push(escape);\r\n        if (game.debugMode) {\r\n            options.push({\r\n                text: `一击必杀`,\r\n                leftText: '💀',\r\n                rightText: `调试模式`,\r\n                tag: 'one_punch',\r\n            });\r\n        }\r\n        return options;\r\n    }\r\n\r\n    displayRivals(game: Game) {\r\n        game.appendText('场上剩余：' + this.rivals.filter(e => e.entity.id !== 'player').map(({ entity }) => `${entity.name}(${entity.health}/${entity.maxHealth})`).join('、'));\r\n    }\r\n\r\n    onInput(game: Game, option: Option) {\r\n        const p = game.getPlayer();\r\n        const cp = this.rivals.find(e => e.entity.uid === p.uid);\r\n        if (!cp) {\r\n            game.endEvent(this);\r\n            return;\r\n        }\r\n\r\n        if (option.tag === 'one_punch') {\r\n            this.rivals.filter(e => e.tag === cp.tag).forEach(e => e.entity.mutateValue(game, 'health', -e.entity.health, '因为苟管理'));\r\n        } else if (option.tag === 'escape') {\r\n            this.escape(game, p);\r\n        } else if (typeof option.tag === 'number') {\r\n            const enemy = this.rivals.find(e => e.entity.uid === option.tag);\r\n            if (enemy) {\r\n                p.attack(game, enemy.entity);\r\n            }\r\n        }\r\n\r\n        if (this.checkCombatEnd(game)) return;\r\n        this.turnNext();\r\n        this.runForPlayer(game);\r\n        this.displayRivals(game);\r\n    }\r\n\r\n    checkCombatEnd(game: Game): boolean {\r\n        this.remanageRivals();\r\n        const tag = this.rivals?.[0].tag;\r\n        if (this.rivals.length <= 1 || this.rivals.every(e => e.tag === tag)) {\r\n            game.appendText('战斗结束');\r\n            game.endEvent(this);\r\n            this.rivals.forEach(e => e.entity.onCombatStart(game, this, e));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    remanageRivals(): void {\r\n        this.rivals = this.rivals.filter(e => e.entity.isAlive());\r\n        this.rivals.sort((a, b) => a.entity.dexterity - b.entity.dexterity);\r\n        this.rivals.forEach((e, i) => e.order = i);\r\n    }\r\n\r\n    // let next one act\r\n    nextAct(game: Game): void {\r\n        this.next.entity.onCombatTurn(game, this, this.next);\r\n        this.turnNext();\r\n    }\r\n\r\n    turnNext(): void {\r\n        this.next = this.rivals[(this.next.order + 1) % this.rivals.length];\r\n    }\r\n\r\n    runForPlayer(game: Game): void {\r\n        while (!this.checkCombatEnd(game) && this.next.entity.id !== 'player') {\r\n            this.nextAct(game);\r\n        }\r\n    }\r\n\r\n    public escape(game: Game, rival: LivingEntity): void {\r\n        if(test(rival.dexterity)) {\r\n            game.appendText(`${rival.name}逃跑成功`, 'good');\r\n            game.endEvent(this);\r\n            const index = this.rivals.findIndex(e => e.entity.uid === rival.uid);\r\n            if (index >= 0) {\r\n                this.rivals.splice(index, 1);\r\n                if (rival.uid === this.next.entity.uid) {\r\n                    this.next = this.rivals[index % this.rivals.length];\r\n                }\r\n            }\r\n            this.remanageRivals();\r\n        } else {\r\n            game.appendText(`${rival.name}逃跑失败`, 'bad');\r\n        }\r\n    }\r\n\r\n    public attack(game: Game, source: LivingEntity, target: LivingEntity): void {\r\n        game.appendText(`${source.name}使用${source.getWeapon().name}攻击${target.name}`, 'bad');\r\n        source.attack(game, target);\r\n    }\r\n}\r\n\r\nexport default CombatEvent;\r\nexport type {\r\n    CombatEventData,\r\n    CombatEntity,\r\n    CombatEntityData,\r\n};\r\n","import { Game, GameEvent, Option } from \"../../interfaces/interfaces\";\r\nimport { Subopt } from \"../../interfaces/types\";\r\n\r\nclass InventoryEvent extends GameEvent {\r\n\r\n    constructor() {\r\n        super({\r\n            id: 'inventory',\r\n            priority: 99\r\n        });\r\n    }\r\n\r\n    onStart(game: Game) {\r\n        const p = game.getPlayer();\r\n        game.setOptions([{ text: '返回', tag: [] }]\r\n            .concat(Array.from(p.inventory.values(), i => ({\r\n                text: (p.holdingItem?.uid === i.uid ? '卸下' : '装备') + i.name,\r\n                tag: ['currentState', 'player', 'holdItem',  [p.holdingItem?.uid === i.uid ? i : null]] as any,\r\n            })))\r\n        );\r\n    }\r\n\r\n    onRender(game: Game): Array<Option> {\r\n        const p = game.getPlayer();\r\n        const options: Array<Option> = [\r\n            { text: '返回' },\r\n            ...p.inventory.values().map(i => ({ \r\n                text: i.name,\r\n                leftText: '🤜',\r\n                rightText: i.previewDamage(game),\r\n                subopts: [\r\n                    { text: '装备', tag: 'hold' },\r\n                    { text: '丢弃', tag: 'drop' },\r\n                ],\r\n                tag: i.uid,\r\n            })),\r\n        ];\r\n        if (p.holdingItem) {\r\n            options.splice(1, 0, { \r\n                text: '收起'+ p.holdingItem.name,\r\n                leftText: '🤚',\r\n                rightText: p.holdingItem.previewDamage(game),\r\n                tag: p.holdingItem.uid,\r\n            });\r\n        }\r\n        return options;\r\n    }\r\n\r\n    onInput(game: Game, option: Option, subopt: Subopt) {\r\n        if (typeof option.tag === 'number') {\r\n            const uid: number = option.tag;\r\n            const p = game.getPlayer();\r\n\r\n            if (uid === p.holdingItem?.uid) {\r\n                p.holdItem(game, null);\r\n            } else {\r\n                const item = p.inventory.get(option.tag);\r\n                if (item) {\r\n                    if (subopt.tag === 'hold') {\r\n                        p.holdItem(game, item);\r\n                    } else if (subopt.tag === 'drop') {\r\n                        p.removeItemFromInventory(game, item, 'drop');\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            game.endEvent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default InventoryEvent;\r\n","import React, { RefObject } from 'react';\nimport './App.css';\nimport InventoryEvent from './buildin/events/InventoryEvent';\nimport { Game, GameState, Option, Text, GameEvent, GameData, Site } from './interfaces/interfaces';\nimport { DisplayText, Subopt } from './interfaces/types';\nimport { findByPath } from './utils/objects';\n\nfunction OptionBtn(props: { option: Option, className: string, onClick: (option: Option, subopt: Subopt | null) => void }) {\n  const { className, option, onClick } = props;\n  return (\n    <button className={className} onClick={option.subopts ? undefined : () => onClick(option, null)}>\n      {option.leftText ? <span className=\"option-side-text left\">{option.leftText}</span> : null}\n      {option.rightText ? <span className=\"option-side-text right\">{option.rightText}</span> : null}\n\n      {option.text}\n      {option.subopts ? option.subopts.map((s, i) => (<span key={i} className=\"subopt\" onClick={() => onClick(option, s)}>{s.text}</span>)) : null}\n    </button>\n  );\n}\n\ninterface AppState extends GameState {\n  textList: Array<Text>;\n  showOptions: boolean;\n}\n\ninterface AppProps {\n  data: GameData;\n  debugMode?: boolean;\n}\n\nconst values = ['magic', 'money', 'insight', 'strength', 'dexterity'];\n\nclass App extends React.Component<AppProps, AppState> implements Game {\n\n  public debugMode: boolean;\n\n  private textListEl: RefObject<HTMLDivElement>;\n  private resetting: boolean = false;\n  private textBuffer: Array<Text> = [];\n  private pid: NodeJS.Timeout | null = null;\n  private gameOverMessage: string = '';\n  private currentState: GameState;\n  // private entityMap: UniqueMap<Entity> = new UniqueMap<Entity>();\n\n  constructor(props: AppProps) {\n    super(props);\n    this.debugMode = props.debugMode || false;\n    this.textListEl = React.createRef<HTMLDivElement>();\n\n    this.currentState = props.data.initialize();\n    this.state = Object.assign({}, this.currentState, { \n      textList: [], \n      showOptions: true, \n      showInventory: false,\n    });\n  }\n\n  render() {\n    const s = this.state;\n    const p = s.player;\n    return (\n      <div className=\"App\">\n        <header className=\"state-bar\">\n          <p>\n            <span>第{Math.floor(s.time / 24) + 1}天{s.time % 24}点钟，</span>\n            <span>在{p.site.name}，</span>\n            <span>{p.holdingItem ? `手持${p.holdingItem.name}(${p.holdingItem.previewDamage(this)})` : '两手空空'}</span>\n          </p>\n          \n          <p className=\"values\">\n            <span className=\"value\">{`${this.translate('health')}:${p.health}/${p.maxHealth}`}</span>\n            {values.map(k => `${this.translate(k)}:${(p as any)[k]}`).map(s => (<span key={s} className=\"value\">{s}</span>))}\n          </p>\n        </header>\n        \n        <div className=\"panel\">\n          <div className=\"text-panel\" ref={this.textListEl}>\n            {this.state.textList.map((t, i) => (\n              <p key={i} className={'text ' + t.types?.join(' ') || ''}>\n                <span className=\"content\">{t.text}</span>\n              </p>\n            ))}\n          </div>\n\n          <div className=\"option-panel\">\n            <div className=\"fab\" onClick={this.openInventory.bind(this)}>💰</div>\n            \n            {this.state.showOptions ? this.state.options.map((o, i) => (\n              <OptionBtn\n                key={i} \n                className=\"option\"\n                option={o}\n                onClick={this.handleClickOption.bind(this)}\n              />\n            )) \n            : <button className=\"option skip-btn\"onClick={this.flushText.bind(this, true)}> ⏩ </button>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  //#region text\n\n  private flushText(all: boolean = false) {\n    const list = this.textBuffer.splice(0, all ? this.textBuffer.length : 1);\n    this.setState(\n      s => ({ textList: s.textList.concat(list).slice(-100) }),\n      () => this.textListEl.current?.scrollTo({\n        top: this.textListEl.current.scrollHeight,\n        behavior: 'smooth',\n      })\n    );\n  }\n\n  private flushLoop(isInInterval: boolean = false) {\n    if (this.pid === null) {\n      this.setState(() => ({ showOptions: false }));\n      this.flushText();\n      this.pid = setInterval(this.flushLoop.bind(this, true), 350);\n    } else if (isInInterval){\n      if (this.textBuffer.length) {\n        this.setState(() => ({ showOptions: false }));\n        this.flushText();\n      } else {\n        clearInterval(this.pid);\n        this.pid = null;\n        this.setState(() => ({ showOptions: true }));\n      }\n    }\n  }\n\n  appendText(text: DisplayText, ...types: Array<string>) {\n    let translated = false;\n    if (typeof text === 'string' && text.startsWith('#')) {\n      text = { text: text.slice(1), translated: true };\n    }\n    if (typeof text !== 'string') {\n      translated = text.translated || false;\n      types = text.types || types;\n      text = text.text;\n    }\n    text = translated ? this.translate(text) : text;\n    const packs: Array<Text> = text.split('\\n')\n      .map(s => s.trim())\n      .filter(s => !/^\\s*$/.test(s))\n      .map(s => {\n        const r = /@\\s*([^@]+)\\s*@$/.exec(s);\n        let t = types;\n        if (r) {\n          s = s.slice(0, r.index).trim();\n          t = r[1].trim().split(/\\s+/);\n        }\n        return { text: s, types: t };\n      });\n    this.textBuffer.push(...packs);\n    this.flushLoop();\n  }\n\n  setOptions(options: Array<Option>) {\n    this.currentState.options = options;\n  }\n\n  //#endregion\n\n  timePass(change: number, isInNextDay: boolean = false): number {\n    if (isInNextDay) {\n      this.currentState.time = (Math.floor(this.currentState.time / 24) + 1) * 24 + (change % 24);\n    } else {\n      this.currentState.time += change;\n    }\n    return this.currentState.time;\n  }\n\n  reset() {\n    this.resetting = true;\n    this.currentState = this.props.data.initialize();\n    const player = this.currentState.player;\n    player.site.addEntity(this, player);\n    // this.entityMap.clear();\n    // this.currentState.map.forEach(s => s.entities.forEach(this.recordAddEntity.bind(this)))\n    this.refreshOptions();\n    this.resetting = false;\n    this.appendText('开始游戏', 'system');\n    this.props.data.start(this);\n    this.applyChange();\n  }\n\n  // getEntity(uid: number): Entity | undefined {\n  //   return this.entityMap.get(uid);\n  // }\n\n  // recordAddEntity(entity: Entity): void {\n  //   this.entityMap.add(entity);\n  // }\n  \n  // recordRemoveEntity(entity: Entity): void {\n  //   this.entityMap.remove(entity);\n  // }\n  \n  // takeScreenshot() {\n  //   const { textList, showOptions, ...ss } = this.state;\n  //   this.currentState = copy(ss, true);\n  // }\n\n  applyChange() {\n    this.setState(this.currentState);\n  }\n\n  gameOver(reason?: string) {\n    this.gameOverMessage = '游戏结束 ' + reason;\n    this.resetting = true;\n  }\n\n  // 相当于游戏的主循环\n  handleClickOption(option: Option, subopt: Subopt | null) {\n    this.appendText(option.text, 'self');\n    // this.takeScreenshot();\n    this.showPortOptions();\n    const s = this.currentState;\n\n    if (option.tag === '__reset__') {\n      this.reset();\n    } else if (s.events.length > 0) {\n      const event = s.events[0];\n      event.onInput(this, option, subopt);\n    } else if (option.entityUid) {\n      const entity = s.player.site.entities.get(option.entityUid);\n      if (entity) {\n        entity.onInteract(this, option, subopt);\n      }\n    } else if (Array.isArray(option.tag)) {\n      this.execCmd(option.tag);\n    }\n\n    this.refreshOptions();\n\n    if (this.resetting) {\n      this.appendText(this.gameOverMessage, 'system');\n      this.setOptions([{\n        text: '重来',\n        tag: '__reset__'\n      }]);\n    }\n\n    this.applyChange();\n  }\n\n  execCmd(cmd: Array<string>) {\n    const path = cmd.slice(0, cmd.length - 1);\n    const params = cmd[cmd.length - 2] || [];\n    const { result, thisArg } = findByPath(this, path);\n    if (typeof result === 'function') {\n      (result as Function).apply(thisArg, params);\n    }\n  }\n  \n  //#region events\n\n  triggerEvent(event: GameEvent) {\n    this.currentState.events.push(event);\n    this.refreshEvents();\n    event.onStart(this);\n  }\n\n  endEvent(event: GameEvent) {\n    const index = this.currentState.events.findIndex(e => e.uid === event.uid);\n    if (index >= 0) {\n      this.currentState.events.splice(index, 1);\n    }\n    this.refreshOptions();\n  }\n\n  refreshEvents(): void {\n    this.currentState.events.sort((a, b) => b.priority - a.priority);\n  }\n\n  findEvent(v: number | string): GameEvent | undefined {\n    const fn = typeof v === 'number' ? ((e: GameEvent) => e.uid === v) : ((e: GameEvent) => e.id === v);\n    return this.currentState.events.find(fn);\n  }\n\n  //#endregion\n\n  //#region options\n\n  refreshOptions() {\n    const s = this.currentState;\n    if (s.events.length > 0) {\n      const event = s.events[s.events.length - 1];\n      this.setOptions(event.onRender(this));\n    } else {\n      this.showPortOptions();\n    }\n  }\n\n  openInventory() {\n    if (!this.findEvent('inventory')) {\n      this.triggerEvent(new InventoryEvent());\n      this.refreshOptions();\n      this.applyChange();\n    }\n  }\n\n  showPortOptions() {\n    const p = this.currentState.player;\n    const site: Site = p.site;\n    const options = Array.from(site.entities.values(), e => e.getInteractions(this).map(o => Object.assign(o, { entityUid: e.uid }))).flat();\n    this.setOptions(options);\n  }\n\n  //#endregion\n\n  getPlayer() {\n    return this.currentState.player;\n  }\n\n  getMap() {\n    return this.currentState.map;\n  }\n\n  translate(key: string): string {\n    return this.props.data.translate(key);\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { Game, Option } from \"../../interfaces/interfaces\";\r\nimport { test } from \"../../utils/math\";\r\nimport Entity from \"./Entity\";\r\n\r\ninterface InvestigationEntityData {\r\n    results: Array<Entity>;\r\n    counter?: number;\r\n    chances?: number;\r\n}\r\n\r\nclass InvestigationEntity extends Entity {\r\n    results: Array<Entity>;\r\n    counter: number;\r\n    chances: number;\r\n\r\n    constructor(data: InvestigationEntityData) {\r\n        super({\r\n            id: 'site_investigation', \r\n            name: 'site_investigation',\r\n        });\r\n        this.results = data.results;\r\n        this.counter = data.counter || 0;\r\n        this.chances = data.chances || 2;\r\n    }\r\n    \r\n    getInteractions(game: Game): Array<Option> {\r\n        return [{\r\n            text: `调查${this.site.name}`,\r\n            leftText: '💡',\r\n            rightText: `第${this.counter + 1}次`\r\n        }];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option): void {\r\n        const site = this.site;\r\n        this.counter++;\r\n        if (this.counter >= this.chances) {\r\n            site.removeEntity(game, this);\r\n        }\r\n        if (test(game.getPlayer().insight)) {\r\n            game.appendText('你似乎察觉到了什么');\r\n            site.removeEntity(game, this);\r\n            site.addEntities(game, this.results, true);\r\n        } else {\r\n            if (this.counter >= this.chances) {\r\n                game.appendText('好像没发现什么，放弃吧');\r\n                game.appendText(`你失去了对${site.name}的兴趣`, 'mutate');\r\n            } else {\r\n                game.appendText('没什么特别的');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default InvestigationEntity;","import { Game, GameEvent, Option } from \"../../interfaces/interfaces\";\r\nimport Entity from \"./Entity\";\r\n\r\ninterface EventTriggerEntityData {\r\n    event: GameEvent;\r\n    option?: Option;\r\n    once?: boolean; \r\n}\r\n\r\nclass EventTriggerEntity extends Entity {\r\n    event: GameEvent;\r\n    option: Option;\r\n    once: boolean; \r\n\r\n    constructor({ event, once, option }: EventTriggerEntityData) {\r\n        super({\r\n            id: 'event_trigger', \r\n            name: event.id,\r\n        });\r\n        this.event = event;\r\n        this.option = option || { text: '...' };\r\n        this.once = once || true;\r\n    }\r\n    \r\n    getInteractions(game: Game) {\r\n        return [this.option];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option) {\r\n        game.triggerEvent(this.event);\r\n        if (this.once) {\r\n            this.site.removeEntity(game, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventTriggerEntity;\r\nexport type {\r\n    EventTriggerEntityData,\r\n}","import { Game, GameEvent, Text } from \"../../interfaces/interfaces\";\r\n\r\ninterface TextDisplayEventData {\r\n    texts: Array<Text>;\r\n}\r\n\r\nclass TextDisplayEvent extends GameEvent {\r\n    texts: Array<Text>;\r\n\r\n    constructor(data: TextDisplayEventData) {\r\n        super({\r\n            id: 'text',\r\n            priority: 10,\r\n        });\r\n        this.texts = data.texts;\r\n    }\r\n\r\n    onStart(game: Game) {\r\n        this.texts.forEach(t => game.appendText(t));\r\n        game.endEvent(this);\r\n    }\r\n}\r\n\r\nexport default TextDisplayEvent;\r\nexport type {\r\n    TextDisplayEventData,\r\n}","import { Game, GameEvent, Option } from \"../../interfaces/interfaces\";\r\n\r\ninterface SequenceEventData {\r\n    events: Array<GameEvent>;\r\n    joints?: Array<Option>;\r\n}\r\n\r\nclass SequenceEvent extends GameEvent {\r\n    events: Array<GameEvent>;\r\n    joints: Array<Option>;\r\n    pointer: number = 0;\r\n\r\n    constructor(data: SequenceEventData) {\r\n        super({\r\n            id: 'sequence',\r\n            priority: 0,\r\n        });\r\n        this.events = data.events;\r\n        this.joints = Array(this.events.length - 1).fill(0).map((_, i) => data.joints?.[i] || { text: '...' });\r\n    }\r\n\r\n    nextEvent(game: Game) {\r\n        if (this.pointer >= this.events.length) {\r\n            game.endEvent(this);\r\n            return;\r\n        }\r\n        const ce = this.events[this.pointer++];\r\n        game.triggerEvent(ce);\r\n    }\r\n\r\n    onStart(game: Game) {\r\n        this.nextEvent(game);\r\n    }\r\n\r\n    onRender(game: Game): Array<Option> {\r\n        return [this.joints[this.pointer - 1]];\r\n    }\r\n\r\n    onInput(game: Game, option: Option): void {\r\n        this.nextEvent(game);\r\n    }\r\n}\r\n\r\nexport default SequenceEvent;\r\nexport type {\r\n    SequenceEventData,\r\n}","import { Game, GameEvent } from \"../../interfaces/interfaces\";\r\n\r\ninterface GameOverEventData {\r\n    reason: string;\r\n}\r\n\r\nclass GameOverEvent extends GameEvent {\r\n    reason: string;\r\n\r\n    constructor(data: GameOverEventData) {\r\n        super({\r\n            id: 'game_over',\r\n            priority: 10,\r\n        });\r\n        this.reason = data.reason;\r\n    }\r\n\r\n    onStart(game: Game) {\r\n        game.gameOver(this.reason);\r\n    }\r\n}\r\n\r\nexport default GameOverEvent;\r\nexport type {\r\n    GameOverEventData,\r\n}\r\n","const translation = {\r\n    text: {\r\n        money: '硬币',\r\n        health: '体力',\r\n        magic: '魔力',\r\n        strength: '力量',\r\n        dexterity: '敏捷',\r\n        insight: '洞察',\r\n    },\r\n    story: {\r\n        start: `\r\n            我叫王二狗，是家里的老四\r\n            （此处省略三千字）\r\n            几天后，有村民目击到了大舅亲手把母亲退下了悬崖\r\n            现在有了三份财产等着我继承\r\n            带着复杂的心情，我坐上了回乡的大巴\r\n        `,\r\n        end: `\r\n            你发现了地下有一条暗黑的河流，甚至手电筒的关联都不能照亮它一毫\r\n            仿佛有一种声音在召唤你，让你向它靠近\r\n            正在思考眼前的一切时，你已经来到了暗河边\r\n            你跳入了这条河流\r\n            没有一丝丝冰凉或溺水的痛苦，也没有任何其它感觉\r\n            你能感受到河水带着你飘向了无尽的黑暗深渊\r\n            可是你却丝毫不想反抗\r\n            不知道过了多久后，你醒了\r\n            在清晨的阳光中，病床上的你睁开双眼\r\n            询问护士的结果是，有人在海边发现了你，神志不清\r\n        `,\r\n        old_mans_talk: `\r\n            哟~小伙子\r\n            应该是王大壮家里的吧\r\n            年轻真好\r\n            我要是也年轻就好了\r\n        `,\r\n        wang: `\r\n            这不是廖秋吗？好久不见了\r\n        `,\r\n        elder: {\r\n            welcome: `\r\n                你就是廖秋吧@talk@\r\n                我是廖家的族长，接下来就由我带你吧@talk@\r\n                先去你家把东西拿上@talk@\r\n            `,\r\n            take_things: `\r\n                好久没来了吧@talk@\r\n                你外公的东西都放在他的房间了，自己去拿吧@talk@\r\n                我就不陪你了@talk@\r\n            `,\r\n        },\r\n    },\r\n    idle: {\r\n        old_man: [\r\n            '嗯？有事吗？',\r\n            '今天的太阳真舒服',\r\n            '人都变了啊',\r\n            '世界更好了呢',\r\n            '哎',\r\n        ],\r\n    },\r\n    description: {\r\n        strange_note: `\r\n            上面写着“……”\r\n            但是\r\n        `,\r\n        site: {\r\n            old_house: `\r\n                随让又新增了一些违章建筑，但是总体结构还是没变\r\n                【房屋结构图】\r\n            `,\r\n        },\r\n    },\r\n};\r\n\r\nexport default translation;","import { Entity, Game, LivingEntity, Site, Option, CombatEvent } from \"../../interfaces/interfaces\";\r\nimport { chooseOne } from \"../../utils/math\";\r\nimport { CombatEntity } from \"../../buildin/events/CombatEvent\";\r\nimport { LivingEntityData } from \"../../buildin/entities/LivingEntity\";\r\nimport { DisplayText, Subopt } from \"../../interfaces/types\";\r\nimport ChatEvent from \"../event/ChatEvent\";\r\n\r\ninterface NPCEntityData extends LivingEntityData {\r\n    talkText: DisplayText;\r\n    chat?: ChatEvent;\r\n    idleText?: DisplayText;\r\n    autoChat?: boolean;\r\n    allowAttack?: boolean;\r\n}\r\n\r\nclass NPCEntity extends LivingEntity {\r\n    talkText: DisplayText;\r\n    idleText: DisplayText;\r\n    chat?: ChatEvent;\r\n    autoChat: boolean;\r\n    takled: boolean;\r\n\r\n    constructor(data: NPCEntityData) {\r\n        super({\r\n            ...data,\r\n            id: 'npc',\r\n        });\r\n        this.talkText = data.talkText;\r\n        this.chat = data.chat;\r\n        this.idleText = data.idleText || { text: '...' };\r\n        this.autoChat = data.autoChat || false;\r\n        this.takled = false;\r\n    }\r\n\r\n    onDetect(game: Game, entity: Entity, site: Site) {\r\n        if (entity.id === 'player' && !this.takled) {\r\n            this.talk(game);\r\n        }\r\n    }\r\n\r\n    getInteractions(game: Game): Array<Option> {\r\n        return [\r\n            {\r\n                text: this.name,\r\n                leftText: '👨‍🦲',\r\n                subopts: [\r\n                    { text: '对话', tag: 'talk' },\r\n                    { text: '攻击', tag: 'attack' },\r\n                ]\r\n            },\r\n        ];\r\n    }\r\n\r\n    onInteract(game: Game, option: Option, subopt: Subopt) {\r\n        if (subopt.tag === 'talk') {\r\n            if (this.chat) {\r\n                game.triggerEvent(this.chat);\r\n            } else {\r\n                this.talk(game);\r\n            }\r\n        } else if (subopt.tag === 'attack') {\r\n            this.onBeAttack(game);\r\n        }\r\n    }\r\n\r\n    onBeAttack(game: Game): void {\r\n        game.triggerEvent(new CombatEvent({ rivals: [\r\n            { entity: game.getPlayer(), tag: 'civilian'},\r\n            { entity: this, tag: 'angry_civilian' },\r\n        ]}));\r\n    }\r\n\r\n    talk(game: Game) {\r\n        if (!this.takled) {\r\n            game.appendText(`${this.name}说:`);\r\n            game.appendText(this.talkText, 'talk');\r\n            this.takled = true;\r\n        } else {\r\n            game.appendText(this.idleText);\r\n        }\r\n    }\r\n\r\n    onCombatTurn(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        if (this.health >= this.maxHealth * 0.75) {\r\n            combat.attack(game, this, chooseOne(combat.rivals.filter(e => e.tag !== self.tag)).entity);\r\n        } else {\r\n            combat.escape(game, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default NPCEntity;\r\nexport type {\r\n    NPCEntityData,\r\n}","import { LivingEntityData } from \"../../buildin/entities/LivingEntity\";\r\nimport { CombatEntity } from \"../../buildin/events/CombatEvent\";\r\nimport { CombatEvent, Entity, Game, LivingEntity, PlayerEntity, Site } from \"../../interfaces/interfaces\";\r\nimport { chooseOne } from \"../../utils/math\";\r\n\r\nclass MonsterEntity extends LivingEntity {\r\n\r\n    constructor(data: LivingEntityData) {\r\n        super({\r\n            ...data,\r\n            id: 'monster',\r\n        });\r\n    }\r\n\r\n    onDetect(game: Game, entity: Entity, site: Site) {\r\n        if (entity.id === 'player' || entity instanceof PlayerEntity) {\r\n            game.triggerEvent(new CombatEvent({ rivals: [\r\n                { entity: this, tag: 'monster' },\r\n                { entity: entity as LivingEntity, tag: 'civilian' },\r\n            ]}));\r\n        }\r\n    }\r\n\r\n    onCombatTurn(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        if (this.health >= this.maxHealth / 4) {\r\n            combat.attack(game, this, chooseOne(combat.rivals.filter(e => e.tag !== self.tag)).entity);\r\n        } else {\r\n            combat.escape(game, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MonsterEntity;","import { CombatEntity } from \"../../buildin/events/CombatEvent\";\r\nimport { CombatEvent, Game, LivingEntity, Site } from \"../../interfaces/interfaces\";\r\nimport { chooseOne } from \"../../utils/math\";\r\nimport MonsterEntity from \"./MonsterEntity\";\r\n\r\ninterface ShadowData {\r\n    id?: string;\r\n    uid?: number;\r\n    name?: string;\r\n    site?: Site;\r\n    owner: LivingEntity;\r\n}\r\n\r\nclass Shadow extends MonsterEntity {\r\n    owner: LivingEntity;\r\n\r\n    constructor(data: ShadowData) {\r\n        const owner = data.owner;\r\n        const d = {\r\n            ...data,\r\n            id: 'shadow',\r\n            name: `${owner.name}的影子`,\r\n            health: owner.health,\r\n            maxHealth: owner.maxHealth,\r\n            strength: owner.strength,\r\n            dexterity: owner.dexterity,\r\n            baseDamage: owner.baseDamage,\r\n            baseWeaponName: owner.baseWeaponName,\r\n        };\r\n        super(d);\r\n        this.owner = owner;\r\n    }\r\n\r\n    onCombatStart(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        \r\n    }\r\n\r\n    onCombatTurn(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        combat.attack(game, this, chooseOne(combat.rivals.filter(e => e.tag !== self.tag)).entity);\r\n    }\r\n\r\n    onCombatEnd(game: Game, combat: CombatEvent, self: CombatEntity) {\r\n        this.removeSelf(game);\r\n    }\r\n}\r\n\r\nexport default Shadow;\r\nexport type {\r\n    ShadowData,\r\n}","import { CombatEvent, Game, LivingEntity } from \"../../interfaces/interfaces\";\r\nimport NPCEntity, { NPCEntityData } from \"./NPCEntity\";\r\nimport Shadow from \"./Shadow\";\r\n\r\ninterface StrangeOldManData extends NPCEntityData {\r\n    shadow?: LivingEntity;\r\n}\r\n\r\nclass StrangeOldMan extends NPCEntity {\r\n    shadow?: LivingEntity;\r\n\r\n    constructor(data: StrangeOldManData) {\r\n        super(data);\r\n        this.shadow = data.shadow;\r\n    }\r\n\r\n    onBeAttack(game: Game) {\r\n        if (!this.shadow || !this.shadow.isAlive()) {\r\n            this.shadow = new Shadow({ owner: this });\r\n            this.site.addEntity(game, this.shadow);\r\n        }\r\n        game.triggerEvent(new CombatEvent({ rivals: [\r\n            { entity: game.getPlayer(), tag: 'civilian'},\r\n            { entity: this, tag: 'angry_civilian' },\r\n            { entity: this.shadow, tag: 'angry_civilian' },\r\n        ]}));\r\n    }\r\n}\r\n\r\nexport default StrangeOldMan;\r\nexport type {\r\n    StrangeOldManData,\r\n}","import { Identical } from \"../interfaces/types\";\r\n\r\nclass IdMap<T extends Identical> {\r\n    private map: Map<string, T> = new Map<string, T>();\r\n\r\n    constructor(data?: Array<T>) {\r\n        if (data) {\r\n            this.add(...data);\r\n        }\r\n    }\r\n\r\n    add(...elems: Array<T>): number {\r\n        let count = 0;\r\n        elems.forEach(e => {\r\n            if (!this.map.has(e.id)) {\r\n                this.map.set(e.id, e);\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n    remove(...elems: Array<T | string>): number {\r\n        let count = 0;\r\n        elems.forEach(e => count += this.map.delete(typeof e === 'string' ? e : e.id) ? 1 : 0);\r\n        return count;\r\n    }\r\n\r\n    get(id: string): T | undefined {\r\n        return this.map.get(id);\r\n    }\r\n\r\n    keys(): Array<string> {\r\n        return Array.from(this.map.keys());\r\n    }\r\n\r\n    values(): Array<T> {\r\n        return Array.from(this.map.values());\r\n    }\r\n    \r\n    get size(): number {\r\n        return this.map.size;\r\n    }\r\n\r\n    clear(): void {\r\n        this.map.clear();\r\n    }\r\n\r\n    forEach(fn: (elem: T) => void): void {\r\n        return this.map.forEach(fn);\r\n    }\r\n\r\n    find(fn: (elem: T) => boolean): T | undefined {\r\n        for (const elem of Array.from(this.map.values())) {\r\n            if (fn(elem)) {\r\n                return elem;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport default IdMap;","import GameEvent from \"../../buildin/GameEvent\";\r\nimport IdMap from \"../../buildin/IdMap\";\r\nimport { Game } from \"../../interfaces/interfaces\";\r\nimport { Identical, Option, Subopt, Text } from \"../../interfaces/types\";\r\n\r\ninterface ChatOption {\r\n    text: string;\r\n    target: string | null;\r\n}\r\n\r\ninterface ChatBlock extends Identical {\r\n    text: Array<Text | string>;\r\n    options?: Array<ChatOption>;\r\n}\r\n\r\ninterface ChatEventData {\r\n    blocks: Array<ChatBlock>;\r\n    entry?: string;\r\n}\r\n\r\nclass ChatEvent extends GameEvent {\r\n    blocks: IdMap<ChatBlock>;\r\n    currentBlockId: string;\r\n\r\n    constructor(data: ChatEventData) {\r\n        super({\r\n            id: 'chat',\r\n            priority: 10,\r\n        });\r\n        this.blocks = new IdMap(data.blocks);\r\n        this.currentBlockId = data.entry || data.blocks[0].id;\r\n    }\r\n\r\n    onStart(game: Game): void {\r\n        this.displayTextAndCheckEnd(game);\r\n    }\r\n\r\n    onRender(game: Game): Array<Option> {\r\n        const block = this.blocks.get(this.currentBlockId);\r\n        return block?.options?.map(e => ({ text: e.text, tag: e.target })) || [];\r\n    }\r\n\r\n    onInput(game: Game, option: Option, subopt: Subopt | null): void {\r\n        if (typeof option.tag === 'string') {\r\n            this.currentBlockId = option.tag;\r\n            this.displayTextAndCheckEnd(game);\r\n        } else {\r\n            game.endEvent(this);\r\n        }\r\n    }\r\n\r\n    displayTextAndCheckEnd(game: Game) {\r\n        const block = this.blocks.get(this.currentBlockId);\r\n        if (block) {\r\n            block.text.forEach(line => game.appendText(line));\r\n            if (!block.options || !block.options.length) {\r\n                game.endEvent(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatEvent;\r\nexport type {\r\n    ChatEventData,\r\n    ChatBlock,\r\n    ChatOption,\r\n}","import { Game, GameData, Item, ItemEntity, MeleeWeapon, PlayerEntity, PortEntity, Site } from \"../interfaces/interfaces\";\r\nimport { chooseOne, randInt } from \"../utils/math\";\r\nimport InvestigationEntity from \"../buildin/entities/InvestigationEntity\";\r\nimport EventTriggerEntity from \"../buildin/entities/EventTriggerEntity\";\r\nimport TextDisplayEvent from \"../buildin/events/TextDisplayEvent\";\r\nimport SequenceEvent from \"../buildin/events/SequenceEvent\";\r\nimport GameOverEvent from \"../buildin/events/GameOverEvent\";\r\nimport translation from \"./translation\";\r\nimport { findByPathStr } from \"../utils/strings\";\r\nimport StrangeOldMan from \"./entity/StrangeOldMan\";\r\nimport MonsterEntity from \"./entity/MonsterEntity\";\r\nimport ChatEvent from \"./event/ChatEvent\";\r\nimport NPCEntity from \"./entity/NPCEntity\";\r\n\r\nfunction randValue(): number {\r\n    return 5 * randInt(7, 1, 3);\r\n}\r\n\r\nconst data = {\r\n    initialize() {\r\n        const villageWang = new NPCEntity({\r\n            name: '王屠夫',\r\n            health: 7,\r\n            maxHealth: 7,\r\n            strength: 30,\r\n            dexterity: 30,\r\n            baseDamage: 1,\r\n            baseWeaponName: '拳头',\r\n            talkText: { text: 'story.wang', translated: true },\r\n        });\r\n        const villageLiheng = new StrangeOldMan({\r\n            name: '老者',\r\n            health: 7,\r\n            maxHealth: 7,\r\n            strength: 30,\r\n            dexterity: 30,\r\n            baseDamage: 1,\r\n            baseWeaponName: '拳头',\r\n            loots: [\r\n                new ItemEntity({ item: new Item({ name: '扭曲的木拐杖' }) }),\r\n                new ItemEntity({ item: new Item({ name: '磨损的铜钱' }) }),\r\n            ],\r\n            talkText: { text: 'story.old_mans_talk', translated: true },\r\n            idleText: { text: 'idle.old_man', translated: true },\r\n        });\r\n        const elder = new NPCEntity({\r\n            name: '廖族长',\r\n            health: 7,\r\n            maxHealth: 7,\r\n            strength: 30,\r\n            dexterity: 30,\r\n            baseDamage: 1,\r\n            baseWeaponName: '拳头',\r\n            talkText: '#story.elder.welcome',\r\n        })\r\n\r\n\r\n        const sites = [\r\n            new Site({\r\n                id: 'apartment',\r\n                name: '公寓',\r\n                entities: [new EventTriggerEntity({\r\n                    event: new ChatEvent({\r\n                        blocks: [\r\n                            { id: 'start', text: ['#story.start'] },\r\n                        ],\r\n                    })\r\n                })],\r\n            }),\r\n            new Site({\r\n                id: 'bus_stop',\r\n                name: '巴士车站',\r\n                entities: [\r\n                    new PortEntity({ target: 'ng_bridge' }),\r\n                    new EventTriggerEntity({\r\n                        option: { text: '还是回城里吧', leftText: '🏙' },\r\n                        event: new GameOverEvent({ reason: '因为你是头号玩家' }),\r\n                        once: true,\r\n                    }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'ng_bridge',\r\n                name: '鼐沟桥',\r\n                entities: [\r\n                    new PortEntity({ target: 'hs_village' }),\r\n                    new PortEntity({ target: 'bus_stop' }),\r\n                    villageLiheng,\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'hs_village',\r\n                name: '灴山村',\r\n                entities: [\r\n                    new PortEntity({ target: 'main_streat'  }),\r\n                    new PortEntity({ target: 'ng_bridge' }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'main_streat',\r\n                name: '大路',\r\n                entities: [\r\n                    new PortEntity({ target: 'temple' }),\r\n                    new PortEntity({ target: 'wang_house' }),\r\n                    new PortEntity({ target: 'ng_bridge' }),\r\n                    new ItemEntity({ item: new MeleeWeapon({\r\n                        id: 'bone',\r\n                        name: '猪骨',\r\n                        damage: 3,\r\n                    }), autoEquip: true }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'wang_house',\r\n                name: '王屠户家',\r\n                entities: [\r\n                    new PortEntity({ target: 'main_streat' }),\r\n                    villageWang,\r\n                    new InvestigationEntity({\r\n                        results: [new ItemEntity({item: new MeleeWeapon({\r\n                            name: '杀猪刀',\r\n                            damage: { faces: 3, times: 2, fix: -1 },\r\n                        }), autoEquip: true })]\r\n                    }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'temple',\r\n                name: '祠堂',\r\n                entities: [\r\n                    new PortEntity({ target: 'temple_basement' }),\r\n                    new PortEntity({ target: 'main_streat' }),\r\n                    elder,\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'temple_basement',\r\n                name: '祠堂地下室',\r\n                entities: [\r\n                    new PortEntity({ target: 'temple' }),\r\n                    new MonsterEntity({\r\n                        name: '触手怪',\r\n                        baseDamage: { faces: 2, fix: 1 },\r\n                        baseWeaponName: '爪子',\r\n                        health: 10,\r\n                        maxHealth: 10,\r\n                        strength: 30,\r\n                        dexterity: 40,\r\n                        loots: [new PortEntity({\r\n                            target: 'dark_river'\r\n                        })]\r\n                    }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'dark_river',\r\n                name: '漆黑之河',\r\n                entities: [\r\n                    new PortEntity({ target: 'temple_basement' }),\r\n                    new EventTriggerEntity({\r\n                        option: { text: '跳入其中', leftText: '🏊‍' },\r\n                        event: new SequenceEvent({\r\n                            events: [\r\n                                new TextDisplayEvent({ texts: [{ text: 'story.end', translated: true }] }),\r\n                                new GameOverEvent({ reason: '完美通关' })\r\n                            ],\r\n                            joints: [{ text: '结束了' }]\r\n                        })\r\n                    }),\r\n                ],\r\n            }),\r\n            new Site({\r\n                id: 'old_house',\r\n                name: 'laofangzi',\r\n            }),\r\n        ];\r\n        const map = new Map<string, Site>();\r\n        sites.map(s => map.set(s.id, s));\r\n        const playerMaxHealth = randInt(10) + 5;\r\n        return {\r\n            events: [],\r\n            map,\r\n            options: [],\r\n            time: 0,\r\n            player: new PlayerEntity({\r\n                id: 'player',\r\n                name: '王二狗',\r\n                site: map.get('bus_stop') as Site,\r\n                money: randValue(),\r\n                health: playerMaxHealth,\r\n                maxHealth: playerMaxHealth,\r\n                magic: randValue(),\r\n                strength: randValue(),\r\n                dexterity: randValue(),\r\n                insight: randValue(),\r\n                holdingItem: null,\r\n                inventory: [\r\n                    new Item({ name: '奇怪的簪子' }),\r\n                ],\r\n                baseDamage: 1,\r\n                baseWeaponName: '拳头',\r\n            }),\r\n        };\r\n    },\r\n    start: (game: Game) => {\r\n        game.appendText({ text: 'story.start', translated: true });\r\n        game.getPlayer().goToSite(game, game.getMap().get('bus_stop') as Site);\r\n    },\r\n    translate(key: string): string {\r\n        const result = findByPathStr(translation, key, key.indexOf('.') >= 0 ? '' : 'text') || key;\r\n        if (Array.isArray(result)) {\r\n            return chooseOne(result);\r\n        }\r\n        return typeof result === 'string' ? result : String(result);\r\n    },\r\n};\r\n\r\nconst d: GameData = data;\r\n\r\nexport default d;","\r\n\r\nfunction polyfill() {\r\n    if (!Object.fromEntries) {\r\n        // eslint-disable-next-line\r\n        Object.fromEntries = function fromEntries<TValue>(entries: Array<[string, TValue]>): { [key: string]: TValue } {\r\n            const o: { [key: string]: TValue } = {};\r\n            for (let index = 0; index < entries.length; index++) {\r\n                const entry = entries[index];\r\n                o[entry[0]] = entry[1];\r\n            }\r\n            return o;\r\n        };\r\n    }\r\n\r\n    if (!Array.prototype.flat) {\r\n        // eslint-disable-next-line\r\n        Array.prototype.flat = function flat<T>(this: Array<Array<T>>, depth: number): Array<T> {\r\n            let arr: Array<T> = [];\r\n            for (const a of this) {\r\n                arr = arr.concat(a);\r\n            }\r\n            return arr;\r\n        } as any;\r\n    }\r\n}\r\n\r\nexport default polyfill;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from './data/data';\nimport polyfill from './utils/polyfill'\n\npolyfill();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App data={data} debugMode={new URLSearchParams(window.location.search).get('debug-mode') === 'true'} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}