{"version":3,"sources":["components/LocalStorageDataPersistence.tsx","util/lang.ts","util/ui.ts","components/MindNodeCard.tsx","util/dom.ts","components/MindNodeInfo.tsx","sssp-api/SimpleStorageClient.ts","components/SSSPDataPersistence.tsx","components/TextDataPersistence.tsx","components/TranditionalDataPersistence.tsx","core.ts","util/mathematics.ts","painter/LinkPainter.ts","painter/BezierCurveLinkPainter.ts","painter/StraightLineLinkPainter.ts","tools/Tool.ts","tools/CopyNodeTool.ts","tools/CreateNodeTool.ts","tools/DragNodeTool.ts","tools/DragPoolTool.ts","tools/LinkNodeTool.ts","tools/SelectTool.ts","tools/AutoTool.ts","constants.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["KEY_PREFIX","LocalStorageDataPersistence","props","state","key","Promise","resolve","reject","actualKey","dataString","localStorage","getItem","Error","setItem","value","this","onChange","e","setState","target","Component","toClassName","obj","arr","Object","prototype","hasOwnProperty","call","element","push","join","arrayFilterNonNull","array","filter","undefined","NOP","getRect","ref","box","current","getBoundingClientRect","x","y","width","height","MindNodeCard","selfRef","React","createRef","onRectUpdate","node","uid","position","text","background","color","anchor","anchorX","anchorY","linking","choosen","fixedX","fixedY","className","style","left","top","onClick","onMouseDown","onMouseMove","onMouseUp","split","map","it","i","STOP_PROPAGATION","stopPropagation","warpStopPropagation","handle","STOP_MOUSE_PROPAGATION","MindNodeInfo","getBrief","nodes","get","inputingBackground","inputingColor","inputingText","outPorts","inPorts","toFixed","setBackground","setColor","setText","length","onUpdate","SimpleStorageClient","baseUrl","action","path","searchParamEntries","Array","from","searchParams","entries","origin","pathname","k","v","encodeURIComponent","url","method","fetch","mode","then","response","json","jsonData","catch","constructPromise","constructUrl","ACTION_GET_INFORMATION","METHOD_GET","ACTION_GET_CHILDREN","ACTION_GET","headers","textData","urlString","ACTION_ADD","console","log","METHOD_POST","body","ACTION_DELETE","ACTION_RECYCLE","ACTION_RENAME","PROTOCOL_OPTION_AUTO","id","name","PROTOCOL_OPTION_HTTP","PROTOCOL_OPTION_HTTPS","getProtocolOptions","SSSPDataPersistence","client","toggleConfirmed","s","locked","protocol","protocal","window","location","replace","URL","host","getText","add","succeeded","disabled","find","o","TextDataPersistence","copy","navigator","clipboard","writeText","dataText","paste","readText","TranditionalDataPersistence","file","outputFileName","reader","FileReader","onload","result","onerror","onabort","readAsText","link","document","createElement","href","createObjectURL","Blob","type","download","click","files","setFile","createNode","unlinkNodes","sourceNode","targetNode","Set","has","delete","Vec2Util","angle","modulo","Number","isNaN","Math","cos","sin","vs","reduce","p","v1","v2","atan2","sqrt","n","getBezierPointAndAngle","t","controlPoints","cps","nextCPs","p0X","p0Y","p1X","p1Y","finalP0X","finalP0Y","finalP1X","finalP1Y","deltaX","deltaY","finalPoint","finalAngle","LinkPainter","env","canvas","g","getContext","clearRect","fix","getPoolFix","pointCache","Map","drawLinks","cachedPoint","point","virtualDstPos","set","rect","getNodeRect","bind","beginPath","moveTo","lineWidth","lineTo","PI","fill","BezierCurveLinkPainter","getPoint","angleCache","getAngle","NaN","nodePosition","inRelative","selectedNodeUids","values","inNodeUid","outRelative","outNodeUid","strokeStyle","fillStyle","sourcePoint","slice","targetNodeUid","targetPoint","sourceAngle","targetAngle","controlHandleLength","controlPoint1","controlPoint2","centerPoint","centerAngle","bezierCurveTo","stroke","drawArrow","StraightLineLinkPainter","direction","ToolBase","CopyNodeTool","actived","startMousePosition","startNodePositions","mousePosition","clear","copiedNodes","copyNode","genUid","forEach","delta","startPosition","CreateNodeTool","pixel2pool","DragNodeTool","DragPoolTool","startPoolOffset","offset","LinkNodeTool","dst","src","linkNodes","COMPARATOR","a","b","SelectTool","selectionArea","nativeEvent","a1","a2","index","equalsArray","sort","right","bottom","isNodeInRange","ctrlKey","AutoTool","tool","event","button","shiftKey","preventDefault","altKey","onStart","onMove","onEnd","TOOL_FLAGS","TOOL_NAMES","App","persistences","linkPainters","persistenceRef","mounted","onGlobalKeyDown","save","onGlobalKeyUp","deleteSelectedNodes","poolRef","canvasRef","hideNodeInfoView","editingNodeUid","nodeCardRects","resetView","notifyUpdate","dirty","update","updateStateNodes","drawLines","requestAnimationFrame","uidCounter","createAndAddNode","addNode","onClickNode","pointerMoving","getToolEvent","ev","onMouseLeave","load","persistence","resolveTextDataString","alert","error","pool","buildPool","lastSavedTime","Date","JSON","stringify","setNodeChoosen","unchooseAllNodes","ou","iu","scale","toolFlag","linkPainter","addEventListener","setTool","removeEventListener","prevProps","prevState","snapshot","onContextMenu","renderTopBar","getAnchor","setNodeRect","onClickLinkButton","onClickChooseButton","renderSelectionArea","renderNodeInfo","renderToolButtons","renderBottomBar","canvasAndContext","context","get2dContext","paint","renderPersistence","f","size","toLocaleString","editingNode","updateNode","sa","flag","clientX","clientY","poolCoord","pixelCoord","raw","assign","loadPool","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.940f1eec.chunk.js","sourcesContent":["import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface LocalStorageDataPersistenceState {\r\n    key: string;\r\n}\r\n\r\nexport const KEY_PREFIX = \"MindNodeData--\";\r\n\r\nexport default class LocalStorageDataPersistence extends Component<{}, LocalStorageDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            key: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const key = this.state.key;\r\n            if (!key) {\r\n                reject(new Error(\"No key specified!\"));\r\n                return;\r\n            }\r\n\r\n            const actualKey = KEY_PREFIX + key;\r\n\r\n            const dataString = localStorage.getItem(actualKey);\r\n            if (dataString) {\r\n                resolve(dataString);\r\n            } else {\r\n                reject(new Error(\"No data in this key: \" + key));\r\n            }\r\n        });\r\n    }\r\n    \r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            const key = this.state.key;\r\n            if (!key) {\r\n                reject(new Error(\"No key specified!\"));\r\n                return;\r\n            }\r\n\r\n            const actualKey = KEY_PREFIX + key;\r\n\r\n            localStorage.setItem(actualKey, dataString);\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>键名：</span>\r\n                <span>{KEY_PREFIX}</span>\r\n                <input \r\n                    value={this.state.key}\r\n                    onChange={e => this.setState(() => ({ key: e.target.value }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","\r\n// 将一个对象转换成className字符串\r\nexport function toClassName(obj: { [key: string]: (boolean | string) }): string {\r\n    const arr: Array<string> = [];\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            const element = obj[key];\r\n            if (typeof element === 'string') {\r\n                arr.push(element);\r\n            } else {\r\n                if (element) {\r\n                    arr.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return arr.join(' ');\r\n}\r\n\r\nexport function getMapValue<K, V>(map: Map<K, V>, key: K, handler: (value: V, key: K) => void) {\r\n    const value = map.get(key);\r\n    if (value) {\r\n        handler(value, key);\r\n    }\r\n}\r\n\r\nexport function filterSet<T>(set: Set<T>, filterFn: (e: T) => boolean): Set<T> {\r\n    const r: T[] = [];\r\n    set.forEach(it => {\r\n        if (filterFn(it)) {\r\n            r.push(it);\r\n        }\r\n    });\r\n    return new Set(r);\r\n}\r\n\r\nexport function equalsArray<T>(a1: Array<T>, a2: Array<T>): boolean {\r\n    if (a1.length !== a2.length) return false;\r\n    for (let index = 0; index < a1.length; index++) {\r\n        if (a1[index] !== a2[index]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function arrayFilterNonNull<T, E = T | undefined | null>(array: Array<E>): Array<T> {\r\n    return array.filter(e => e || (e !== null && e !== undefined)) as any;\r\n}\r\n\r\nexport const NOP = () => {};\r\n","import { RefObject } from \"react\";\r\nimport { Rect } from \"../interfaces\";\r\nimport { Vec2 } from \"./mathematics\";\r\n\r\nexport function get2dContext(ref: RefObject<HTMLCanvasElement>): [HTMLCanvasElement, CanvasRenderingContext2D] | null {\r\n    const canvas = ref.current;\r\n    if (!canvas) return null;\r\n    const context = canvas.getContext('2d');\r\n    if (!context) return null;\r\n    return [canvas, context];\r\n}\r\n\r\nexport function getRect<T extends HTMLElement>(ref: RefObject<T>): Rect {\r\n    const box = ref.current?.getBoundingClientRect();\r\n    return {\r\n        x: box?.x || 0,\r\n        y: box?.y || 0,\r\n        width: box?.width || 0,\r\n        height: box?.height || 0,\r\n    };\r\n}\r\n\r\nexport function getPosition(rect?: Rect): Vec2 {\r\n    return [rect?.x || 0, rect?.y || 0];\r\n}","import React from \"react\";\r\nimport { Component, MouseEvent, RefObject } from \"react\";\r\nimport { Vec2 } from \"../util/mathematics\";\r\nimport \"../styles/MindNodeCard.css\";\r\nimport { MindNode, Rect } from \"../interfaces\";\r\nimport { toClassName } from \"../util/lang\";\r\nimport { getRect } from \"../util/ui\";\r\n\r\ninterface MindNodeCardProps {\r\n    anchor: Vec2;\r\n    node: MindNode;\r\n    linking: boolean;\r\n    choosen: boolean;\r\n    onClick: (e: MouseEvent, uid: number) => void;\r\n    onMouseDown: (e: MouseEvent, uid: number) => void;\r\n    onMouseMove: (e: MouseEvent, uid: number) => void;\r\n    onMouseUp: (e: MouseEvent, uid: number) => void;\r\n    onRectUpdate: (uid: number, rect: Rect) => void;\r\n    onClickLinkButton: (uid: number) => void;\r\n    onClickChooseButton: (uid: number, choosen: boolean) => void;\r\n}\r\n\r\nclass MindNodeCard extends Component<MindNodeCardProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.onRectUpdate(this.props.node.uid, getRect(this.selfRef));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.props.onRectUpdate(this.props.node.uid, getRect(this.selfRef));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            node: {\r\n                uid,\r\n                position: [x, y],\r\n                text,\r\n                background,\r\n                color,\r\n            },\r\n            anchor: [anchorX, anchorY],\r\n            linking,\r\n            choosen,\r\n        } = this.props;\r\n\r\n        // 实际的坐标\r\n        const fixedX = x + anchorX;\r\n        const fixedY = y + anchorY;\r\n\r\n        return (\r\n            <div\r\n                className={toClassName({ \"MindNodeCard\": true, linking, choosen })}\r\n                ref={this.selfRef}\r\n                style={{\r\n                    left: `${fixedX}px`,\r\n                    top: `${fixedY}px`,\r\n                }}\r\n                onClick={e => this.props.onClick(e, uid)}\r\n                onMouseDown={e => this.props.onMouseDown(e, uid)}\r\n                onMouseMove={e => this.props.onMouseMove(e, uid)}\r\n                onMouseUp={e => this.props.onMouseUp(e, uid)}\r\n            >\r\n                <div className=\"frame\" />\r\n\r\n                <div className=\"static\" style={{ background }}>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"text\" style={{ color }}>\r\n                            {text.split(\"\\n\").map((it, i) => (<p key={i}>{it}</p>))}\r\n                        </div>\r\n\r\n                        {/* <div className=\"tool-bar\">\r\n                            <RadioButton\r\n                                key={linking ? 11 : 10}\r\n                                value={linking}\r\n                                onChange={() => this.props.onClickLinkButton(uid)}\r\n                            >\r\n                                <Icon name=\"link\" size=\"80%\" />\r\n                            </RadioButton>\r\n\r\n                            <RadioButton\r\n                                key={choosen ? 1 : 0}\r\n                                value={choosen}\r\n                                onChange={it => this.props.onClickChooseButton(uid, it)}\r\n                            >\r\n                                <Icon name=\"checked\" size=\"80%\" />\r\n                            </RadioButton>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //#region 拖拽相关\r\n\r\n    private selfRef: RefObject<HTMLDivElement> = React.createRef();\r\n\r\n    //#endregion\r\n}\r\n\r\nexport default MindNodeCard;","import { BaseSyntheticEvent } from \"react\";\r\n\r\nexport const STOP_PROPAGATION = (e: Event | BaseSyntheticEvent) => e.stopPropagation();\r\nexport function warpStopPropagation<TEvent extends (Event | BaseSyntheticEvent), TOut = void>(handle: (e: TEvent) => TOut): (e: TEvent) => TOut {\r\n    return e => {\r\n        e.stopPropagation();\r\n        return handle(e);\r\n    };\r\n}\r\n\r\nexport const STOP_MOUSE_PROPAGATION = {\r\n    onMouseDown: STOP_PROPAGATION,\r\n    onMouseMove: STOP_PROPAGATION,\r\n    onMouseUp: STOP_PROPAGATION,\r\n};","import { Component } from \"react\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport \"../styles/MindNodeInfo.css\";\r\nimport { STOP_PROPAGATION } from \"../util/dom\";\r\n\r\ninterface MindNodeInfoProps {\r\n    node: MindNode;\r\n    nodes: Map<number, MindNode>;\r\n    onUpdate: (node: MindNode) => void;\r\n}\r\n\r\ninterface MindNodeInfoState {\r\n    inputingBackground: string;\r\n    inputingColor: string;\r\n    inputingText: string;\r\n}\r\n\r\nclass MindNodeInfo extends Component<MindNodeInfoProps, MindNodeInfoState> {\r\n    constructor(props: MindNodeInfoProps) {\r\n        super(props);\r\n        this.state = {\r\n            inputingBackground: props.node.background,\r\n            inputingColor: props.node.color,\r\n            inputingText: props.node.text,\r\n        };\r\n    }\r\n    render() {\r\n        const { uid, position, outPorts, inPorts } = this.props.node;\r\n        return (\r\n            <div \r\n                className=\"MindNodeInfo\"\r\n                onMouseDown={STOP_PROPAGATION}\r\n                onMouseMove={STOP_PROPAGATION}\r\n                onMouseUp={STOP_PROPAGATION}\r\n            >\r\n                <div className=\"top-bar\"></div>\r\n\r\n                <div className=\"content\">\r\n                    <p>\r\n                        <span className=\"title\">UID：</span>\r\n                        <span className=\"text\">#{uid}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span className=\"title\">位置：</span>\r\n                        <span className=\"text\">({position.map(it => it.toFixed(1)).join(\", \")})</span>\r\n                    </p>\r\n\r\n                    <p className=\"field-color\">\r\n                        <span className=\"title\">背景样式：</span>\r\n                        <input\r\n                            className=\"color-input\"\r\n                            value={this.state.inputingBackground}\r\n                            onChange={e => this.setBackground(e.target.value)}\r\n                        />\r\n                        <div className=\"color-input-preview\" style={{ background: this.state.inputingBackground }} />\r\n                    </p>\r\n\r\n                    <p className=\"field-color\">\r\n                        <span className=\"title\">文字样式：</span>\r\n                        <input\r\n                            className=\"color-input\"\r\n                            value={this.state.inputingColor}\r\n                            onChange={e => this.setColor(e.target.value)}\r\n                        />\r\n                        <div className=\"color-input-preview\" style={{ background: this.state.inputingColor }} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span className=\"title\">内容：</span>\r\n                        <textarea\r\n                            className=\"text-input\"\r\n                            value={this.state.inputingText}\r\n                            onChange={e => this.setText(e.target.value)}\r\n                        />\r\n                    </p>\r\n\r\n                    <p className=\"title\">出线（{outPorts.length}个）：</p>\r\n                    <ol className=\"text\">\r\n                        {outPorts.map(uid => (<li key={uid} className=\"snapshot\">{this.getBrief(uid)}</li>))}\r\n                    </ol>\r\n\r\n                    <p className=\"title\">入线（{inPorts.length}个）：</p>\r\n                    <ol className=\"text\">\r\n                        {inPorts.map(uid => (<li key={uid} className=\"snapshot\">{this.getBrief(uid)}</li>))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.setState(() => ({ inputingText: text }));\r\n        const node: MindNode = { ...this.props.node, text };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    setBackground(background: string) {\r\n        this.setState(() => ({ inputingBackground: background }));\r\n        const node: MindNode = { ...this.props.node, background };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    setColor(color: string) {\r\n        this.setState(() => ({ inputingColor: color }));\r\n        const node: MindNode = { ...this.props.node, color };\r\n        this.props.onUpdate(node);\r\n    }\r\n\r\n    getBrief = (uid: number) => {\r\n        const node = this.props.nodes.get(uid);\r\n        if (node) {\r\n            return '#' + uid + '：' + node.text;\r\n        } else {\r\n            return '#' + uid;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MindNodeInfo;","import { DirectoryInformationCache, ItemInformationCache, SSSPJsonResponseBody } from \"./ResponseTypes\";\r\n\r\nexport class SimpleStorageClient {\r\n\r\n    static readonly METHOD_GET = \"GET\";\r\n    static readonly METHOD_POST = \"POST\";\r\n\r\n    static readonly ACTION_GET = \"get\";\r\n    static readonly ACTION_GET_INFORMATION = \"get-information\";\r\n    static readonly ACTION_GET_CHILDREN = \"get-children\";\r\n    static readonly ACTION_ADD = \"add\";\r\n    static readonly ACTION_DELETE = \"delete\";\r\n    static readonly ACTION_RECYCLE = \"recycle\";\r\n    static readonly ACTION_RENAME = \"rename\";\r\n\r\n    private readonly baseUrl: URL;\r\n\r\n    constructor(baseUrl: URL) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    public constructUrl(action: string, path?: string, target?: string): string {\r\n        const searchParamEntries: [string, string][] = Array.from(this.baseUrl.searchParams.entries());\r\n\r\n        // URLSearchParams会导致path的空格变成加号，是十分严重且SB的行为\r\n        // searchParams.set(\"action\", action);\r\n        // if (typeof path === \"string\") {\r\n        //     searchParams.set(\"path\", path);\r\n        // }\r\n        // if (typeof target === \"string\") {\r\n        //     searchParams.set(\"target\", target);\r\n        // }\r\n\r\n        searchParamEntries.push([\"action\", action]);\r\n        if (typeof path === \"string\") {\r\n            searchParamEntries.push([\"path\", path]);\r\n        }\r\n        if (typeof target === \"string\") {\r\n            searchParamEntries.push([\"target\", target]);\r\n        }\r\n\r\n        return this.baseUrl.origin + this.baseUrl.pathname + \"?\" + searchParamEntries.map(([k, v]) => (k + \"=\" + encodeURIComponent(v))).join(\"&\");\r\n    }\r\n\r\n    public constructPromise<T>(url: string, method: string): Promise<SSSPJsonResponseBody<T>> {\r\n        return new Promise((resolve, reject) => fetch(url, { method, mode: \"no-cors\" })\r\n            .then(response =>\r\n                response.json().then(jsonData => resolve(jsonData)).catch(e => reject(e))\r\n            ).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public getInformation(path: string): Promise<SSSPJsonResponseBody<ItemInformationCache>> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_GET_INFORMATION, path), SimpleStorageClient.METHOD_GET);\r\n    }\r\n\r\n    public getChildren(path: string): Promise<SSSPJsonResponseBody<DirectoryInformationCache>> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_GET_CHILDREN, path), SimpleStorageClient.METHOD_GET);\r\n    }\r\n\r\n    public getText(path?: string): Promise<string> {\r\n        return new Promise((resolve, reject) =>\r\n            fetch(\r\n                this.constructUrl(SimpleStorageClient.ACTION_GET, path),\r\n                { \r\n                    method: SimpleStorageClient.METHOD_GET,\r\n                    headers: [\r\n                        [\"Content-Type\", \"text/plain\"],\r\n                    ],\r\n                }\r\n            ).then(response => {\r\n                response.text().then(textData => resolve(textData)).catch(e => reject(e));\r\n            }).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public add(textData: string, path?: string): Promise<SSSPJsonResponseBody> {\r\n        const urlString = this.constructUrl(SimpleStorageClient.ACTION_ADD, path);\r\n        console.log(\"add\", urlString);\r\n        return new Promise((resolve, reject) =>\r\n            fetch(\r\n                urlString,\r\n                { method: SimpleStorageClient.METHOD_POST, body: textData }\r\n            ).then(response =>\r\n                response.json().then(jsonData => resolve(jsonData)).catch(e => reject(e))\r\n            ).catch(e => reject(e))\r\n        );\r\n    }\r\n\r\n    public delete(path: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_DELETE, path), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n    public recycle(path: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_RECYCLE, path), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n    public rename(path: string, target: string): Promise<SSSPJsonResponseBody> {\r\n        return this.constructPromise(this.constructUrl(SimpleStorageClient.ACTION_RENAME, path, target), SimpleStorageClient.METHOD_POST);\r\n    }\r\n\r\n\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\nimport { SimpleStorageClient } from \"../sssp-api/SimpleStorageClient\";\r\n\r\ninterface ProtocolOption {\r\n    id: string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport interface SSSPDataPersistenceState {\r\n    host: string;\r\n    path: string;\r\n    locked: boolean;\r\n    protocal: ProtocolOption;\r\n}\r\n\r\nconst PROTOCOL_OPTION_AUTO = { id: \"auto\", name: \"自动\", value: \"\" };\r\nconst PROTOCOL_OPTION_HTTP = { id: \"http\", name: \"HTTP\", value: \"http\" };\r\nconst PROTOCOL_OPTION_HTTPS = { id: \"https\", name: \"HTTPS\", value: \"https\" };\r\n\r\nfunction getProtocolOptions() {\r\n    return [PROTOCOL_OPTION_AUTO, PROTOCOL_OPTION_HTTP, PROTOCOL_OPTION_HTTPS];\r\n}\r\n\r\nexport default class SSSPDataPersistence extends Component<{}, SSSPDataPersistenceState> implements DataPersistence {\r\n\r\n    private client: SimpleStorageClient | null = null;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            host: \"localhost:8888\",\r\n            path: \"C:/\",\r\n            locked: false,\r\n            protocal: PROTOCOL_OPTION_AUTO,\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        if (!this.state.locked) return new Promise((resolve, reject) => reject(new Error(\"未锁定！\")));\r\n        const client = this.client;\r\n        if (client) return client.getText(this.state.path);\r\n        return new Promise((resolve, reject) => reject(new Error(\"未知错误！\")));\r\n    }\r\n\r\n    save(dataString: string): Promise<boolean> {\r\n        if (!this.state.locked) return new Promise((resolve, reject) => reject(new Error(\"未锁定！\")));\r\n        const client = this.client;\r\n        if (client) return new Promise((resolve, reject) => client.add(dataString, this.state.path).then((body) => resolve(body.succeeded)).catch(reject));\r\n        return new Promise((resolve, reject) => reject(new Error(\"未知错误！\")));\r\n    }\r\n\r\n    toggleConfirmed = () => {\r\n        this.setState(s => {\r\n            const locked = !s.locked;\r\n            if (locked) {\r\n                let protocol = \"http\";\r\n                if (this.state.protocal.id === \"auto\") {\r\n                    protocol = window.location.protocol.replace(/:$/g, \"\");\r\n                } else {\r\n                    protocol = this.state.protocal.value;\r\n                }\r\n                // this.client = new SimpleStorageClient(new URL(`${window.location.protocol}//${this.state.host}/?path=${encodeURIComponent(this.state.path)}`));\r\n                this.client = new SimpleStorageClient(new URL(`${protocol}://${this.state.host}/?path=${encodeURIComponent(this.state.path)}`));\r\n            } else {\r\n                this.client = null;\r\n            }\r\n            return { locked };\r\n        });\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <button onClick={this.toggleConfirmed}>{this.state.locked ? \"取消锁定\" : \"锁定\"}</button>\r\n                <select \r\n                    disabled={this.state.locked} \r\n                    onChange={e => this.setState(() => ({ protocal: getProtocolOptions().find(o => o.id === e.target.value) || PROTOCOL_OPTION_AUTO }))}\r\n                >\r\n                    {getProtocolOptions().map(o => (\r\n                        <option value={o.id}>{o.name}</option>\r\n                    ))}\r\n                </select>\r\n                <span>服务器：</span>\r\n                <input\r\n                    disabled={this.state.locked}\r\n                    value={this.state.host}\r\n                    onChange={e => this.setState(() => ({ host: e.target.value }))}\r\n                />\r\n                <span>文件路径：</span>\r\n                <input \r\n                    disabled={this.state.locked}\r\n                    value={this.state.path} \r\n                    onChange={e => this.setState(() => ({ path: e.target.value.replace(/\\\\/g, \"/\") }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface TextDataPersistenceState {\r\n    dataText: string;\r\n}\r\n\r\nexport default class TextDataPersistence extends Component<{}, TextDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            dataText: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve) => resolve(this.state.dataText));\r\n    }\r\n\r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.setState(() => ({ dataText: dataString }));\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    copy = () => {\r\n        window.navigator.clipboard.writeText(this.state.dataText);\r\n    }\r\n\r\n    paste = () => {\r\n        window.navigator.clipboard.readText().then(text => this.setState(() => ({ dataText: text })));\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>文本数据（JSON）：</span>\r\n                <textarea \r\n                    value={this.state.dataText} \r\n                    onChange={e => this.setState(() => ({ dataText: e.target.value.replace(/\\\\/g, \"/\") }))} \r\n                />\r\n                <button onClick={this.copy}>复制</button>\r\n                <button onClick={this.paste}>粘贴</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component, ReactNode } from \"react\";\r\nimport DataPersistence from \"../persistence/DataPersistence\";\r\n\r\nexport interface TranditionalDataPersistenceState {\r\n    file: File | null;\r\n    outputFileName: string;\r\n}\r\n\r\nexport default class TranditionalDataPersistence extends Component<{}, TranditionalDataPersistenceState> implements DataPersistence {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            outputFileName: \"\",\r\n        };\r\n    }\r\n\r\n    load(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const file = this.state.file;\r\n            if (!file) {\r\n                reject(new Error(\"No file selected!\"));\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = reader.onabort = () => reject(new Error(\"Error encountered while reading \" + file.name));\r\n            reader.readAsText(file, \"utf-8\");\r\n        });\r\n    }\r\n    \r\n    save(dataString: string): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            const outputFileName = this.state.outputFileName;\r\n            if (outputFileName.length <= 0) {\r\n                reject(new Error(\"No output file name!\"));\r\n                return;\r\n            }\r\n\r\n            const link: HTMLAnchorElement = document.createElement('a');\r\n            link.href = URL.createObjectURL(new Blob([dataString], {type: 'plain/text'}));\r\n            link.download = outputFileName;\r\n            link.click();\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    setFile(files: FileList | null) {\r\n        if (!files || files.length <= 0) return;\r\n        const file = files[0];\r\n\r\n        this.setState(s => ({ \r\n            file,\r\n            outputFileName: s.outputFileName || file.name,\r\n        }));\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div>\r\n                <span>选择文件：</span>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={e => this.setFile(e.target.files)} \r\n                />\r\n                <span>保存文件名称：</span>\r\n                <input \r\n                    value={this.state.outputFileName}\r\n                    onChange={e => this.setState(() => ({ outputFileName: e.target.value }))} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}","import { MindNode, MindNodePool } from \"./interfaces\";\r\nimport { Vec2 } from \"./util/mathematics\";\r\n\r\nexport interface CreateNodeProps {\r\n    uid: number,\r\n    position: Vec2,\r\n}\r\n\r\nexport function copyNode(node: MindNode, { uid, position }: CreateNodeProps): MindNode {\r\n    return {\r\n        ...node,\r\n        uid,\r\n        position,\r\n        inPorts: [],\r\n        outPorts: [],\r\n    };\r\n}\r\n\r\nexport function createNode({ uid, position }: CreateNodeProps): MindNode {\r\n    return {\r\n        uid,\r\n        position,\r\n        text: `#${uid}`,\r\n        background: '#223344',\r\n        color: '#ffffff',\r\n        outPorts: [],\r\n        inPorts: [],\r\n    };\r\n}\r\n\r\nexport function loadPool(raw: MindNodePool): MindNodePool {\r\n    const pool: MindNodePool = {\r\n        uidCounter: raw.uidCounter || 0,\r\n        offset: raw.offset || [0, 0],\r\n        scale: raw.scale || 1,\r\n        nodes: raw.nodes ? raw.nodes.map(it => Object.assign(createNode(it), it)) : [],\r\n    };\r\n\r\n    return pool;\r\n}\r\nexport function linkNodes(sourceNode: MindNode, targetNode: MindNode): boolean {\r\n    if (sourceNode && targetNode && sourceNode.uid !== targetNode.uid) {\r\n        const outPorts = new Set(sourceNode.outPorts);\r\n        const inPorts = new Set(targetNode.inPorts);\r\n        if (outPorts.has(targetNode.uid)) {\r\n            outPorts.delete(targetNode.uid);\r\n            inPorts.delete(sourceNode.uid);\r\n        } else {\r\n            outPorts.add(targetNode.uid);\r\n            inPorts.add(sourceNode.uid);\r\n        }\r\n        sourceNode.outPorts = Array.from(outPorts);\r\n        targetNode.inPorts = Array.from(inPorts);\r\n        return true;\r\n    } else return false;\r\n}\r\n\r\nexport function unlinkNodes(sourceNode: MindNode, targetNode: MindNode) {\r\n    if (sourceNode && targetNode) {\r\n        const outPorts = new Set(sourceNode.outPorts);\r\n        const inPorts = new Set(targetNode.inPorts);\r\n        if (outPorts.has(targetNode.uid)) {\r\n            outPorts.delete(targetNode.uid);\r\n        }\r\n        if (inPorts.has(sourceNode.uid)) {\r\n            inPorts.delete(sourceNode.uid);\r\n        }\r\n        sourceNode.outPorts = Array.from(outPorts);\r\n        targetNode.inPorts = Array.from(inPorts);\r\n    }\r\n}","\r\nexport type Vec2 = [number, number];\r\nexport const X = 0;\r\nexport const Y = 1;\r\n\r\nexport function vec2FromAngle(angle: number, modulo: number = 1): Vec2 {\r\n    if (Number.isNaN(angle)) return [0, 0];\r\n    return [Math.cos(angle) * modulo, Math.sin(angle) * modulo]; \r\n}\r\n\r\nexport function vec2Copy(v: Vec2): Vec2 {\r\n    return [...v];\r\n}\r\n\r\nexport function vec2Add(...vs: Vec2[]): Vec2 {\r\n    return [vs.reduce((p, v) => p + v[0], 0), vs.reduce((p, v) => p + v[1], 0)];\r\n}\r\n\r\nexport function vec2Minus(v1: Vec2, v2: Vec2): Vec2 {\r\n    return [v1[X] - v2[X], v1[Y] - v2[Y]];\r\n}\r\n\r\nexport function vec2Normalize(v: Vec2): Vec2 {\r\n    if (v[0] === 0 && v[1] === 0) return [0, 0];\r\n    const angle = Math.atan2(v[1], v[0]);\r\n    return [Math.cos(angle), Math.sin(angle)];\r\n}\r\n\r\nexport function vec2Modulo(v: Vec2): number {\r\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n}\r\n\r\nexport function vec2Angle(v: Vec2): number {\r\n    return Math.atan2(v[1], v[0]);\r\n}\r\n\r\nexport function vec2Multiply(v: Vec2, n: number): Vec2 {\r\n    return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport const Vec2Util =  {\r\n    zero(): Vec2 {\r\n        return [0, 0]; \r\n    },\r\n\r\n    unit(): Vec2 {\r\n        return [1, 1]; \r\n    },\r\n\r\n    of(x: number = 0, y: number = 0): Vec2 {\r\n        return [x, y]; \r\n    },\r\n\r\n    fromAngle(angle: number, modulo: number = 1): Vec2 {\r\n        if (Number.isNaN(angle)) return [0, 0];\r\n        return [Math.cos(angle) * modulo, Math.sin(angle) * modulo]; \r\n    },\r\n\r\n    add(...vs: Vec2[]): Vec2 {\r\n        return [vs.reduce((p, v) => p + v[0], 0), vs.reduce((p, v) => p + v[1], 0)];\r\n    },\r\n\r\n    minus(v1: Vec2, v2: Vec2): Vec2 {\r\n        return [v1[X] - v2[X], v1[Y] - v2[Y]];\r\n    },\r\n    \r\n    normalize(v: Vec2): Vec2 {\r\n        if (v[0] === 0 && v[1] === 0) return [0, 0];\r\n        const angle = Math.atan2(v[1], v[0]);\r\n        return [Math.cos(angle), Math.sin(angle)];\r\n    },\r\n    \r\n    modulo(v: Vec2): number {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    },\r\n    \r\n    angle(v: Vec2): number {\r\n        return Math.atan2(v[1], v[0]);\r\n    },\r\n    \r\n    multiply(v: Vec2, n: number): Vec2 {\r\n        return [v[0] * n, v[1] * n];\r\n    },\r\n};\r\n\r\n\r\nexport class UidGenerator {\r\n\r\n    public uidCounter: number = 0;\r\n\r\n    constructor(uidCounter: number = 0) {\r\n        this.uidCounter = uidCounter;\r\n    }\r\n\r\n    generate() {\r\n        return this.uidCounter++;\r\n    }\r\n\r\n}\r\n\r\n// return [pointPosition, angle]\r\nexport function getBezierPointAndAngle(t: number, ...controlPoints: Vec2[]): [Vec2, number] {\r\n    if (controlPoints.length <= 1) return [controlPoints[0], 0];\r\n\r\n    let cps: Vec2[] = controlPoints;\r\n    while (cps.length > 2) {\r\n        const nextCPs: Vec2[] = [];\r\n        for (let i = 1; i < cps.length; i++) {\r\n            const [p0X, p0Y] = cps[i - 1];\r\n            const [p1X, p1Y] = cps[i];\r\n            nextCPs.push([p0X + (p1X - p0X) * t, p0Y + (p1Y - p0Y) * t]);\r\n        }\r\n        cps = nextCPs;\r\n    }\r\n    const [finalP0X, finalP0Y] = cps[0];\r\n    const [finalP1X, finalP1Y] = cps[1];\r\n    const deltaX = finalP1X - finalP0X;\r\n    const deltaY = finalP1Y - finalP0Y;\r\n    const finalPoint: Vec2 = [finalP0X + deltaX * t, finalP0Y + deltaY * t];\r\n    const finalAngle = Math.atan2(deltaY, deltaX);\r\n    return [finalPoint, finalAngle];\r\n}","import { ToolEnv } from \"../tools/Tool\";\r\nimport { Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport { Painter } from \"./Painter\";\r\n\r\nexport default abstract class LinkPainter implements Painter  {\r\n\r\n    protected readonly env: ToolEnv;\r\n\r\n    constructor(env: ToolEnv) {\r\n        this.env = env;\r\n    }\r\n    \r\n\r\n    paint(canvas: HTMLCanvasElement): void {\r\n        const g = canvas.getContext(\"2d\");\r\n        if (!g) {\r\n            console.log(\"Invalid canvas\");\r\n            return;\r\n        }\r\n\r\n        const env = this.env;\r\n\r\n        g.clearRect(0, 0, canvas.width, canvas.height);\r\n        // const anchor = this.getAnchor();\r\n        // 修正量，是画布的client位置\r\n        const fix: Vec2 = env.getPoolFix();\r\n\r\n        const pointCache = new Map<number, Vec2>();\r\n        function getPoint(uid: number): Vec2 {\r\n            const cachedPoint = pointCache.get(uid);\r\n            if (cachedPoint) return cachedPoint;\r\n\r\n            if (uid === -1) {\r\n                const point = Vec2Util.minus(env.virtualDstPos || [0, 0], fix);\r\n                pointCache.set(uid, point);\r\n                return point;\r\n            }\r\n\r\n            const rect = env.getNodeRect(uid);\r\n            if (rect) {\r\n                const point = Vec2Util.add(Vec2Util.minus([rect.x, rect.y], fix), [rect.width / 2, rect.height / 2]);\r\n                pointCache.set(uid, point);\r\n                return point;\r\n            }\r\n            return [0, 0];\r\n        };\r\n\r\n        this.drawLinks(g, getPoint.bind(this));\r\n    }\r\n\r\n    abstract drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void;\r\n\r\n    drawArrow(g: CanvasRenderingContext2D, position: Vec2, angle: number) {\r\n        g.beginPath();\r\n        g.moveTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle, g.lineWidth * 3)));\r\n        g.lineTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle + 0.8 * Math.PI, g.lineWidth * 3)));\r\n        g.lineTo(...Vec2Util.add(position, Vec2Util.fromAngle(angle - 0.8 * Math.PI, g.lineWidth * 3)));\r\n        g.fill();\r\n    }\r\n    \r\n}","import { getBezierPointAndAngle, Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport LinkPainter from \"./LinkPainter\";\r\n\r\nexport default class BezierCurveLinkPainter extends LinkPainter {\r\n    drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void {\r\n        const env = this.env;\r\n        const nodes = env.nodes;\r\n        \r\n        const angleCache = new Map<number, number>();\r\n        function getAngle(uid: number): number {\r\n\r\n            if (angleCache.has(uid)) return angleCache.get(uid) || NaN;\r\n\r\n            const nodePosition = getPoint(uid);\r\n\r\n            // uid < 0 代表这是鼠标的链接预览\r\n            if (uid === -1) {\r\n                let inRelative: Vec2 = [0, 0];\r\n                for (const inNodeUid of Array.from(env.selectedNodeUids.values())) {\r\n                    inRelative = Vec2Util.add(inRelative, Vec2Util.normalize(Vec2Util.minus(nodePosition, getPoint(inNodeUid))));\r\n                }\r\n                inRelative = Vec2Util.normalize(inRelative);\r\n                const angle = Math.atan2(inRelative[1], inRelative[0]);\r\n                angleCache.set(uid, angle);\r\n                return angle;\r\n            }\r\n\r\n            const node = nodes.get(uid);\r\n            if (!node) return NaN;\r\n\r\n            let inRelative: Vec2 = [0, 0];\r\n            for (const inNodeUid of node.inPorts) {\r\n                inRelative = Vec2Util.add(inRelative, Vec2Util.normalize(Vec2Util.minus(nodePosition, getPoint(inNodeUid))));\r\n            }\r\n            inRelative = Vec2Util.normalize(inRelative);\r\n\r\n            let outRelative: Vec2 = [0, 0];\r\n            for (const outNodeUid of node.outPorts) {\r\n                outRelative = Vec2Util.add(outRelative, Vec2Util.normalize(Vec2Util.minus(getPoint(outNodeUid), nodePosition)));\r\n            }\r\n            if (env.selectedNodeUids.has(node.uid) && env.virtualDstPos) {\r\n                outRelative = Vec2Util.add(outRelative, Vec2Util.normalize(Vec2Util.minus(env.virtualDstPos, nodePosition)));\r\n            }\r\n            outRelative = Vec2Util.normalize(outRelative);\r\n\r\n            const finalPoint = Vec2Util.add(inRelative, outRelative);\r\n            const angle = Math.atan2(finalPoint[1], finalPoint[0]);\r\n\r\n            angleCache.set(node.uid, angle);\r\n            return angle;\r\n        };\r\n\r\n\r\n        // 开始画线\r\n        g.strokeStyle = \"#808080\";\r\n        g.fillStyle = \"#808080\";\r\n        g.lineWidth = 1.5;\r\n\r\n        for (const node of Array.from(env.nodes.values())) {\r\n            const sourcePoint = getPoint(node.uid);\r\n            const outPorts = node.outPorts.slice();\r\n            if (env.selectedNodeUids.has(node.uid) && env.virtualDstPos) {\r\n                outPorts.push(-1);\r\n            }\r\n\r\n            for (const targetNodeUid of outPorts) {\r\n\r\n                const targetPoint = getPoint(targetNodeUid);\r\n                const sourceAngle = getAngle(node.uid);\r\n                const targetAngle = getAngle(targetNodeUid);\r\n                if (isNaN(sourceAngle) || isNaN(targetAngle)) continue;\r\n\r\n                const controlHandleLength = Vec2Util.modulo(Vec2Util.minus(targetPoint, sourcePoint)) / 3;\r\n\r\n                const controlPoint1 = Vec2Util.add(sourcePoint, Vec2Util.fromAngle(sourceAngle, controlHandleLength));\r\n                const controlPoint2 = Vec2Util.minus(targetPoint, Vec2Util.fromAngle(targetAngle, controlHandleLength));\r\n\r\n                const controlPoints: Vec2[] = [sourcePoint, controlPoint1, controlPoint2, targetPoint];\r\n\r\n                const [centerPoint, centerAngle] = getBezierPointAndAngle(0.55, ...controlPoints);\r\n\r\n\r\n                g.beginPath();\r\n                g.moveTo(...sourcePoint);\r\n                g.bezierCurveTo(...controlPoint1, ...controlPoint2, ...targetPoint);\r\n                g.stroke();\r\n                this.drawArrow(g, centerPoint, centerAngle);\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { Vec2, Vec2Util } from \"../util/mathematics\";\r\nimport LinkPainter from \"./LinkPainter\";\r\n\r\nexport default class StraightLineLinkPainter extends LinkPainter {\r\n    drawLinks(g: CanvasRenderingContext2D, getPoint: (uid: number) => Vec2): void {\r\n        const env = this.env;\r\n\r\n        // 开始画线\r\n        g.strokeStyle = \"#808080\";\r\n        g.fillStyle = \"#808080\";\r\n        g.lineWidth = 1.5;\r\n\r\n        for (const node of Array.from(env.nodes.values())) {\r\n            const sourcePoint = getPoint(node.uid);\r\n            const outPorts = node.outPorts.slice();\r\n            if (env.selectedNodeUids.has(node.uid) && env.virtualDstPos) {\r\n                outPorts.push(-1);\r\n            }\r\n\r\n            for (const targetNodeUid of outPorts) {\r\n                const targetPoint = getPoint(targetNodeUid);\r\n\r\n                g.beginPath();\r\n                g.moveTo(...sourcePoint);\r\n                g.lineTo(...targetPoint);\r\n                g.stroke();\r\n\r\n                const direction = Vec2Util.minus(targetPoint, sourcePoint);\r\n                this.drawArrow(g, Vec2Util.add(sourcePoint, Vec2Util.multiply(direction, 0.55)), Vec2Util.angle(direction));\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { MindNode, Rect } from \"../interfaces\";\r\nimport { Vec2 } from \"../util/mathematics\";\r\nimport { MouseEvent } from \"react\";\r\n\r\nexport interface ToolEvent {\r\n    mousePosition: Vec2;\r\n    node: MindNode | null;\r\n    nativeEvent: MouseEvent;\r\n}\r\n\r\nexport interface Tool {\r\n    onStart(event: ToolEvent): void; // 此时还未开始移动鼠标\r\n    onMove(event: ToolEvent): void; // 在onStart之后，鼠标移动才调用，如果鼠标没移动，则不调用；若鼠标移动过，则在onEnd之前回调用一次\r\n    onEnd(event: ToolEvent): void; // 此时鼠标停止移动\r\n}\r\n\r\nexport interface ToolEnv {\r\n    offset: Vec2;\r\n    scale: number;\r\n    // MindNode 实例可能会改变，所以在其它位置引用其uid较为妥当\r\n    nodes: Map<number, MindNode>;\r\n\r\n    // 保存的是节点矩形的缓存，会随着布局的变化而更新\r\n    getNodeRect(uid: number): Rect | null;\r\n\r\n    // 链接操作中，链接末尾鼠标的未知\r\n    virtualDstPos: Vec2 | null;\r\n    selectedNodeUids: Set<number>;\r\n    selectionArea: Rect | null;\r\n    pixel2pool(vec: Vec2): Vec2;\r\n    genUid(): number;\r\n\r\n    getAnchor(): Vec2;\r\n\r\n    // 修正量，是画布的client位置\r\n    getPoolFix(): Vec2;\r\n}\r\n\r\nexport abstract class ToolBase implements Tool {\r\n\r\n    protected env: ToolEnv;\r\n    constructor(env: ToolEnv) {\r\n        this.env = env;\r\n    }\r\n\r\n    abstract onStart(event: ToolEvent): void;\r\n\r\n    abstract onMove(event: ToolEvent): void;\r\n\r\n    abstract onEnd(event: ToolEvent): void;\r\n\r\n}","import { copyNode } from \"../core\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport { arrayFilterNonNull } from \"../util/lang\";\r\nimport { Vec2Util, Vec2, vec2Copy } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 复制节点\r\nexport class CopyNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n    private startNodePositions: Map<number, Vec2> = new Map();\r\n\r\n    onStart({ mousePosition, node }: ToolEvent): void {\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n\r\n        let selectedNodeUids: Array<number> = Array.from(this.env.selectedNodeUids.values());\r\n\r\n        // 如果按下去的节点是被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) {\r\n            selectedNodeUids = [node.uid];\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        // 复制选中节点\r\n        const copiedNodes = arrayFilterNonNull<MindNode>(Array.from(selectedNodeUids.values()).map(uid => this.env.nodes.get(uid)))\r\n            .map((node: MindNode) => copyNode(node, { uid: this.env.genUid(), position: vec2Copy(node.position) }));\r\n        console.log(\"copiedNodes\", copiedNodes);\r\n        // 清空选中节点\r\n        this.env.selectedNodeUids.clear()\r\n        // 把复制的节点加入节点池中，冰设置为选中\r\n        copiedNodes.forEach(n => {\r\n            this.env.nodes.set(n.uid, n);\r\n            this.env.selectedNodeUids.add(n.uid);\r\n        });\r\n\r\n        // 拖动所有选择节点一起移动\r\n        this.startNodePositions.clear();\r\n        for (const node of copiedNodes) {\r\n            if (!node) continue;\r\n            this.startNodePositions.set(node.uid, node.position);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        const delta = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.startNodePositions.forEach((startPosition, uid) => {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) return;\r\n            node.position = Vec2Util.add(startPosition, delta);\r\n        });\r\n    }\r\n\r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { createNode } from \"../core\";\r\nimport { MindNode } from \"../interfaces\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class CreateNodeTool extends ToolBase {\r\n\r\n    onStart(): void { }\r\n\r\n    onMove(): void { }\r\n\r\n    onEnd({ mousePosition }: ToolEvent): void {\r\n        const position = this.env.pixel2pool(mousePosition);\r\n        const uid = this.env.genUid();\r\n        const node: MindNode = createNode({ uid, position });\r\n        this.env.nodes.set(uid, node);\r\n    }\r\n\r\n}","import { Vec2Util, Vec2 } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class DragNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n    private startNodePositions: Map<number, Vec2> = new Map();\r\n\r\n    onStart({ mousePosition, node }: ToolEvent): void {\r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n\r\n        let selectedNodeUids: Array<number> = Array.from(this.env.selectedNodeUids.values());\r\n        // 如果按下去的节点是被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) { \r\n            selectedNodeUids = [node.uid];\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        // 拖动所有选择节点一起移动\r\n        this.startNodePositions.clear();\r\n        for (const uid of selectedNodeUids) {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) continue;\r\n            this.startNodePositions.set(uid, node.position);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        \r\n        \r\n        const delta = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.startNodePositions.forEach((startPosition, uid) => {\r\n            const node = this.env.nodes.get(uid);\r\n            if (!node) return;\r\n            node.position = Vec2Util.add(startPosition, delta);\r\n        });\r\n    }\r\n    \r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.startNodePositions.clear();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { Vec2Util, Vec2 } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class DragPoolTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startPoolOffset: Vec2 = Vec2Util.zero();\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n\r\n    onStart({ mousePosition }: ToolEvent): void {\r\n        this.startPoolOffset = this.env.offset;\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.env.offset = Vec2Util.add(this.startPoolOffset, Vec2Util.minus(mousePosition, this.startMousePosition));\r\n    }\r\n    \r\n    onEnd(): void {\r\n        if (!this.actived) return;\r\n        \r\n        this.startPoolOffset = Vec2Util.zero();\r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { linkNodes } from \"../core\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class LinkNodeTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n\r\n    onStart({ node }: ToolEvent): void {\r\n        if (!node) return;\r\n\r\n        this.actived = true;\r\n\r\n        // 如果按下去的节点是没被选中的，则改为选择当前节点\r\n        if (node && !this.env.selectedNodeUids.has(node.uid)) {\r\n            this.env.selectedNodeUids = new Set([node.uid]);\r\n        }\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n        this.env.virtualDstPos = mousePosition;\r\n    }\r\n\r\n    onEnd({ node }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        this.env.virtualDstPos = null;\r\n\r\n        if (node) {\r\n            const dst = node;\r\n            this.env.selectedNodeUids.forEach(uid => {\r\n                const src = this.env.nodes.get(uid);\r\n                if (src) {\r\n                    linkNodes(src, dst);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.actived = false;\r\n    }\r\n\r\n}","import { MindNode } from \"../interfaces\";\r\nimport { equalsArray } from \"../util/lang\";\r\nimport { Vec2, Vec2Util, X, Y } from \"../util/mathematics\";\r\nimport { ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n\r\nconst COMPARATOR = (a: number, b: number) => a - b;\r\n\r\n// 拖动整个节点池\r\nexport class SelectTool extends ToolBase {\r\n\r\n    private actived: boolean = false;\r\n    private startMousePosition: Vec2 = Vec2Util.zero();\r\n\r\n    onStart({ mousePosition }: ToolEvent): void {\r\n        this.startMousePosition = mousePosition;\r\n        this.actived = true;\r\n    }\r\n\r\n    onMove({ mousePosition }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        const [width, height] = Vec2Util.minus(mousePosition, this.startMousePosition);\r\n        this.env.selectionArea = {\r\n            x: this.startMousePosition[X],\r\n            y: this.startMousePosition[Y],\r\n            width,\r\n            height,\r\n        };\r\n    }\r\n    \r\n    onEnd({ mousePosition, node, nativeEvent }: ToolEvent): void {\r\n        if (!this.actived) return;\r\n\r\n        let selectedNodeUids: Array<number> = [];\r\n        if (equalsArray(this.startMousePosition, mousePosition)) { // 没有移动，那么就选中当前这个节点\r\n            if (node) {\r\n                selectedNodeUids = [node.uid];\r\n            }\r\n        } else { // 有移动，那么范围选取\r\n            const [left, right] = [this.startMousePosition[X], mousePosition[X]].sort(COMPARATOR);\r\n            const [top, bottom] = [this.startMousePosition[Y], mousePosition[Y]].sort(COMPARATOR);\r\n            selectedNodeUids = Array.from(this.env.nodes.values())\r\n                .filter(node => this.isNodeInRange(node, left, right, top, bottom))\r\n                .map(node => node.uid);\r\n        }\r\n\r\n        if (nativeEvent.ctrlKey) {\r\n            selectedNodeUids.forEach(it => this.env.selectedNodeUids.add(it));\r\n        } else {\r\n            this.env.selectedNodeUids = new Set(selectedNodeUids);\r\n        }\r\n        \r\n        this.startMousePosition = Vec2Util.zero();\r\n        this.env.selectionArea = null;\r\n        this.actived = false;\r\n    }\r\n\r\n    isNodeInRange(node: MindNode, left: number, right: number, top: number, bottom: number) {\r\n        const rect = this.env.getNodeRect(node.uid);\r\n        if (!rect) return false;\r\n        const { x, y, width, height } = rect;\r\n        return (x >= left && y >= top && x + width < right && y + height < bottom);\r\n    }\r\n\r\n}","import { MOUSE_BUTTON_MIDDLE, MOUSE_BUTTON_RIGHT } from \"../constants\";\r\nimport { CopyNodeTool } from \"./CopyNodeTool\";\r\nimport { CreateNodeTool } from \"./CreateNodeTool\";\r\nimport { DragNodeTool } from \"./DragNodeTool\";\r\nimport { DragPoolTool } from \"./DragPoolTool\";\r\nimport { LinkNodeTool } from \"./LinkNodeTool\";\r\nimport { SelectTool } from \"./SelectTool\";\r\nimport { Tool, ToolBase, ToolEvent } from \"./Tool\";\r\n\r\n// 拖动整个节点池\r\nexport class AutoTool extends ToolBase {\r\n\r\n    private tool: Tool | null = null;\r\n\r\n    onStart(event: ToolEvent): void {\r\n        const { node, nativeEvent } = event;\r\n        if (nativeEvent.button === MOUSE_BUTTON_MIDDLE) {\r\n            this.tool = new DragPoolTool(this.env);\r\n        } else if (nativeEvent.button === MOUSE_BUTTON_RIGHT) {\r\n            this.tool = new LinkNodeTool(this.env);\r\n        } else if (nativeEvent.ctrlKey) {\r\n            this.tool = new SelectTool(this.env);\r\n        } else if (nativeEvent.shiftKey) {\r\n            this.tool = new CreateNodeTool(this.env);\r\n            nativeEvent.preventDefault();\r\n        } else if (nativeEvent.altKey) {\r\n            this.tool = new CopyNodeTool(this.env);\r\n        } else if (node) {\r\n            this.tool = new DragNodeTool(this.env);\r\n        } else {\r\n            this.tool = new SelectTool(this.env);\r\n        }\r\n        this.tool.onStart(event);\r\n    }\r\n\r\n    onMove(event: ToolEvent): void {\r\n        this.tool?.onMove(event);\r\n    }\r\n    \r\n    onEnd(event: ToolEvent): void {\r\n        this.tool?.onEnd(event);\r\n        this.tool = new SelectTool(this.env);\r\n    }\r\n\r\n}","export const MOUSE_BUTTON_LEFT = 0;\r\nexport const MOUSE_BUTTON_MIDDLE = 1;\r\nexport const MOUSE_BUTTON_RIGHT = 2;","import React, { Component, MouseEvent, RefObject } from 'react';\r\nimport './App.css';\r\nimport LocalStorageDataPersistence from './components/LocalStorageDataPersistence';\r\nimport MindNodeCard from './components/MindNodeCard';\r\nimport MindNodeInfo from './components/MindNodeInfo';\r\nimport SSSPDataPersistence from './components/SSSPDataPersistence';\r\nimport TextDataPersistence from './components/TextDataPersistence';\r\nimport TranditionalDataPersistence from './components/TranditionalDataPersistence';\r\nimport { createNode, loadPool, unlinkNodes } from './core';\r\nimport { MindNode, MindNodePool, Rect } from './interfaces';\r\nimport BezierCurveLinkPainter from './painter/BezierCurveLinkPainter';\r\nimport LinkPainter from './painter/LinkPainter';\r\nimport StraightLineLinkPainter from './painter/StraightLineLinkPainter';\r\nimport DataPersistence from './persistence/DataPersistence';\r\nimport { AutoTool } from './tools/AutoTool';\r\nimport { CopyNodeTool } from './tools/CopyNodeTool';\r\nimport { CreateNodeTool } from './tools/CreateNodeTool';\r\nimport { DragNodeTool } from './tools/DragNodeTool';\r\nimport { DragPoolTool } from './tools/DragPoolTool';\r\nimport { LinkNodeTool } from './tools/LinkNodeTool';\r\nimport { SelectTool } from './tools/SelectTool';\r\nimport { Tool, ToolEnv, ToolEvent } from './tools/Tool';\r\nimport { STOP_MOUSE_PROPAGATION, warpStopPropagation } from './util/dom';\r\nimport { arrayFilterNonNull, NOP } from './util/lang';\r\nimport { Vec2Util, Vec2 } from './util/mathematics';\r\nimport { get2dContext, getPosition, getRect } from './util/ui';\r\n\r\ntype ToolFlag = 'createNode' | 'linkNode' | 'copyNode' | 'dragNode' | 'dragPool' | 'select' | 'auto';\r\n\r\nconst TOOL_FLAGS: ToolFlag[] = ['createNode', 'linkNode', 'copyNode', 'dragNode', 'dragPool', 'select', 'auto'];\r\nconst TOOL_NAMES = {\r\n    'createNode': \"增加\",\r\n    'linkNode': \"链接\",\r\n    'copyNode': \"复制\",\r\n    'dragNode': \"移动\",\r\n    'dragPool': \"拖动\",\r\n    'select': \"选择\",\r\n    'auto': \"自动\",\r\n};\r\n\r\ninterface PersistenceSelection {\r\n    name: string;\r\n    id: string;\r\n    value: typeof Component;\r\n}\r\n\r\ninterface LinkPainterSelection {\r\n    name: string;\r\n    id: string;\r\n    value: LinkPainter;\r\n}\r\n\r\nexport interface AppProps {\r\n\r\n}\r\n\r\nexport interface AppState {\r\n    uidCounter: number;\r\n    nodes: Array<MindNode>;\r\n    offset: Vec2;\r\n    scale: number;\r\n    editingNodeUid: number | null;\r\n    toolFlag: ToolFlag | null;\r\n    selectionArea: Rect | null;\r\n    lastSavedTime: Date | null;\r\n    persistence: PersistenceSelection;\r\n    linkPainter: LinkPainterSelection;\r\n}\r\n\r\n\r\nclass App extends Component<AppProps, AppState> implements ToolEnv {\r\n\r\n    constructor(props: AppProps) {\r\n        super(props);\r\n        this.state = {\r\n            uidCounter: 0,\r\n            nodes: [],\r\n            offset: [0, 0],\r\n            scale: 1,\r\n            editingNodeUid: null,\r\n            toolFlag: null,\r\n            selectionArea: null,\r\n            lastSavedTime: null,\r\n            persistence: this.persistences[0],\r\n            linkPainter: this.linkPainters[0],\r\n        };\r\n    }\r\n\r\n    private readonly persistences: PersistenceSelection[] = [\r\n        { name: \"SSSP\", id: \"sssp\", value: SSSPDataPersistence },\r\n        { name: \"文本\", id: \"text\", value: TextDataPersistence },\r\n        { name: \"传统\", id: \"tranditional\", value: TranditionalDataPersistence },\r\n        { name: \"浏览器存储\", id: \"local_storage\", value: LocalStorageDataPersistence },\r\n    ];\r\n\r\n    private readonly linkPainters: LinkPainterSelection[] = [\r\n        { name: \"直线\", id: \"straight_line\", value: new StraightLineLinkPainter(this) },\r\n        { name: \"贝塞尔曲线\", id: \"bezier_curve\", value: new BezierCurveLinkPainter(this) },\r\n    ];\r\n\r\n    private persistenceRef: RefObject<Component & DataPersistence> = React.createRef();\r\n\r\n    private mounted = false;\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.updateStateNodes();\r\n        this.drawLines();\r\n        window.addEventListener('resize', this.resetView);\r\n        document.addEventListener('keydown', this.onGlobalKeyDown);\r\n        window.addEventListener('keyup', this.onGlobalKeyUp);\r\n        this.resetView();\r\n        this.setTool('auto');\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resetView);\r\n        document.removeEventListener('keydown', this.onGlobalKeyDown);\r\n        window.removeEventListener('keyup', this.onGlobalKeyUp);\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<AppProps>, prevState: Readonly<AppState>, snapshot?: any): void {\r\n        this.drawLines();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\" onContextMenu={e => e.preventDefault()}>\r\n                {/* 顶部工具栏 */}\r\n                {this.renderTopBar()}\r\n\r\n                {/* 实际池子 */}\r\n                <div\r\n                    className={\"node-pool\"}\r\n                    ref={this.poolRef}\r\n                    onMouseDown={this.onMouseDown}\r\n                    onMouseMove={this.onMouseMove}\r\n                    onMouseUp={this.onMouseUp}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                >\r\n                    <canvas ref={this.canvasRef} />\r\n\r\n                    {\r\n                        this.state.nodes.map(it => (\r\n                            <MindNodeCard\r\n                                key={it.uid}\r\n                                anchor={this.getAnchor()}\r\n                                node={it}\r\n                                linking={false}\r\n                                choosen={this.selectedNodeUids.has(it.uid)}\r\n                                onClick={this.onClickNode}\r\n                                onMouseDown={this.onMouseDown}\r\n                                onMouseMove={this.onMouseMove}\r\n                                onMouseUp={this.onMouseUp}\r\n                                onRectUpdate={(uid, rect) => this.setNodeRect(uid, rect)}\r\n                                onClickLinkButton={NOP}\r\n                                onClickChooseButton={NOP}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                    {this.renderSelectionArea()}\r\n                    {this.renderNodeInfo()}\r\n                    {this.renderToolButtons()}\r\n                </div>\r\n\r\n                {/* 底部状态栏 */}\r\n                {this.renderBottomBar()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onGlobalKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === \"s\" && e.ctrlKey) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    onGlobalKeyUp = (e: KeyboardEvent) => {\r\n        if (e.key === 'Delete') {\r\n            this.deleteSelectedNodes();\r\n        }\r\n    }\r\n\r\n    //#region 渲染\r\n\r\n    // 池子UI组件\r\n    private poolRef: RefObject<HTMLDivElement> = React.createRef();\r\n    // 连接线的画板UI组件\r\n    private canvasRef: RefObject<HTMLCanvasElement> = React.createRef();\r\n\r\n    public virtualDstPos: Vec2 | null = null;\r\n\r\n    hideNodeInfoView = () => this.setState(() => ({ editingNodeUid: null }));\r\n\r\n    drawLines() {\r\n        const canvasAndContext = get2dContext(this.canvasRef);\r\n        if (!canvasAndContext) {\r\n            console.log(\"Invalid canvas\");\r\n            return;\r\n        }\r\n        const [canvas] = canvasAndContext;\r\n\r\n        this.state.linkPainter.value.paint(canvas);\r\n        return;\r\n    }\r\n\r\n    renderTopBar() {\r\n        return (\r\n            <div className=\"top-bar\">\r\n                <button onClick={this.save}>保存</button>\r\n                <button onClick={this.load}>载入</button>\r\n                <span>保存方式：</span>\r\n                <select onChange={e => this.setState(() => ({ persistence: this.persistences.find(p => p.id === e.target.value) || this.persistences[0] }))}>\r\n                    { this.persistences.map((persistence) => (\r\n                        <option value={persistence.id}>{persistence.name}</option>\r\n                    )) }\r\n                </select>\r\n                <span>连线方式：</span>\r\n                <select onChange={e => this.setState(() => ({ linkPainter: this.linkPainters.find(p => p.id === e.target.value) || this.linkPainters[0] }))}>\r\n                    { this.linkPainters.map((linkPainter) => (\r\n                        <option value={linkPainter.id}>{linkPainter.name}</option>\r\n                    )) }\r\n                </select>\r\n                {this.renderPersistence()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPersistence() {\r\n        const Component = this.state.persistence.value;\r\n        return (<Component ref={this.persistenceRef}/>);\r\n    }\r\n\r\n    renderToolButtons() {\r\n        return (\r\n            <div className=\"tool-bar\">\r\n                {TOOL_FLAGS.map(f => (\r\n                    <button\r\n                        key={f}\r\n                        {...STOP_MOUSE_PROPAGATION}\r\n                        onClick={warpStopPropagation(this.setTool.bind(this, f))}\r\n                        disabled={this.state.toolFlag === f}\r\n                    >{TOOL_NAMES[f]}</button>\r\n                ))}\r\n                <span>|</span>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.createAndAddNode)}>新增</button>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.unchooseAllNodes)}>取消选择</button>\r\n                <button {...STOP_MOUSE_PROPAGATION} onClick={warpStopPropagation(this.deleteSelectedNodes)}>删除所选</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBottomBar() {\r\n        return (\r\n            <div className=\"bottom-bar\">\r\n                <span className=\"piece\">总节点数：{this.state.nodes.length}</span>\r\n                <span className=\"piece\">选中节点数：{this.selectedNodeUids.size}</span>\r\n                <span className=\"piece\">最近保存于：{this.state.lastSavedTime?.toLocaleString() || \"未保存\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderNodeInfo() {\r\n        const editingNode = (this.state.editingNodeUid !== null) ? (this.nodes.get(this.state.editingNodeUid)) : null;\r\n        if (!editingNode) return null;\r\n\r\n        return (\r\n            <div className=\"node-info\">\r\n                <button className=\"icon\" onClick={this.hideNodeInfoView}>&gt;</button>\r\n                <MindNodeInfo\r\n                    key={editingNode.uid}\r\n                    node={editingNode}\r\n                    nodes={this.nodes}\r\n                    onUpdate={node => this.updateNode(node)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSelectionArea() {\r\n        const { selectionArea } = this.state;\r\n        if (!selectionArea) return null;\r\n        let { x, y, width, height } = selectionArea;\r\n        let [left, top] = Vec2Util.minus([x, y], this.getPoolFix());\r\n        if (width < 0) {\r\n            width = -width;\r\n            left = left - width;\r\n        }\r\n        if (height < 0) {\r\n            height = -height;\r\n            top = top - height;\r\n        }\r\n        return (\r\n            <div\r\n                className=\"section\"\r\n                style={{\r\n                    left: left + 'px',\r\n                    top: top + 'px',\r\n                    width: width + 'px',\r\n                    height: height + 'px',\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 工具\r\n\r\n    get offset() { return this.state.offset; }\r\n    set offset(o) { this.setState(() => ({ offset: o })) }\r\n\r\n    get scale() { return this.state.scale; }\r\n    set scale(s) { this.setState(() => ({ scale: s })) }\r\n\r\n    get selectionArea() { return this.state.selectionArea; }\r\n    set selectionArea(sa) { this.setState(() => ({ selectionArea: sa })) }\r\n\r\n    private nodeCardRects: Map<number, Rect> = new Map();\r\n    public selectedNodeUids: Set<number> = new Set();\r\n\r\n    getNodeRect(uid: number): Rect | null {\r\n        return this.nodeCardRects.get(uid) || null;\r\n    }\r\n\r\n    setNodeRect(uid: number, rect: Rect) {\r\n        this.nodeCardRects.set(uid, rect);\r\n    }\r\n\r\n    private tool: Tool | null = null;\r\n\r\n    setTool(flag: ToolFlag | null) {\r\n        switch (flag) {\r\n            case 'createNode': this.tool = new CreateNodeTool(this); break;\r\n            case 'linkNode': this.tool = new LinkNodeTool(this); break;\r\n            case 'copyNode': this.tool = new CopyNodeTool(this); break;\r\n            case 'dragNode': this.tool = new DragNodeTool(this); break;\r\n            case 'dragPool': this.tool = new DragPoolTool(this); break;\r\n            case 'select': this.tool = new SelectTool(this); break;\r\n            case 'auto': this.tool = new AutoTool(this); break;\r\n            default: this.tool = null; break;\r\n        }\r\n        this.setState(() => ({ toolFlag: flag }));\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region UI相关\r\n\r\n    /*\r\n     * O->A->N\r\n     * ----    :Origin to Anchor: Offset\r\n     *    ---- :Anchor to Node: Position (of node)\r\n     */\r\n\r\n    // 原点，应该是pool组件的中心点\r\n    private origin: Vec2 = [0, 0];\r\n\r\n    resetView = () => {\r\n        const box = this.poolRef.current?.getBoundingClientRect();\r\n        if (!box) return;\r\n\r\n\r\n        this.origin = [box.width / 2, box.height / 2];\r\n        const canvas = this.canvasRef.current;\r\n        if (canvas) {\r\n            canvas.width = box.width;\r\n            canvas.height = box.height;\r\n        }\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    getAnchor(): Vec2 {\r\n        return Vec2Util.add(this.origin, this.state.offset);\r\n    }\r\n\r\n    getPoolFix(): Vec2 {\r\n        return getPosition(getRect(this.poolRef));\r\n    }\r\n\r\n    // 是否需要更新\r\n    private dirty: boolean = true;\r\n\r\n    notifyUpdate() {\r\n        this.dirty = true;\r\n    }\r\n\r\n    update = () => {\r\n        if (!this.mounted) return;\r\n        if (this.dirty) {\r\n            this.updateStateNodes();\r\n            this.drawLines();\r\n            this.dirty = false;\r\n        }\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 数据控制\r\n\r\n    // 所有节点列表，是实际的数据\r\n    public readonly nodes: Map<number, MindNode> = new Map();\r\n\r\n    private uidCounter: number = 0;\r\n\r\n    genUid() {\r\n        const uid = this.uidCounter++;\r\n        this.setState(() => ({ uidCounter: this.uidCounter }));\r\n        return uid;\r\n    }\r\n\r\n    createAndAddNode = () => {\r\n        const node: MindNode = createNode({ uid: this.genUid(), position: Vec2Util.minus([0, 0], this.state.offset) });\r\n        this.addNode(node);\r\n    }\r\n\r\n    addNode(node: MindNode) {\r\n        this.nodes.set(node.uid, node);\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    updateNode(node: MindNode) {\r\n        this.nodes.set(node.uid, node);\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    removeNode(uid: number) {\r\n        this.nodes.delete(uid);\r\n        this.nodeCardRects.delete(uid);\r\n        this.selectedNodeUids.delete(uid);\r\n        this.updateStateNodes();\r\n    }\r\n\r\n    updateStateNodes() {\r\n        this.setState(() => ({ nodes: Array.from(this.nodes.values()) }));\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 鼠标事件\r\n\r\n    onClickNode = (event: MouseEvent, uid: number) => {\r\n        this.setState(() => ({ editingNodeUid: uid }));\r\n    }\r\n\r\n    private getToolEvent(e: MouseEvent, uid?: number): ToolEvent {\r\n        if (typeof uid === 'number') {\r\n            e.stopPropagation();\r\n        }\r\n        const node = typeof uid === 'number' ? (this.nodes.get(uid) || null) : null;\r\n        // const mousePosition = Vec2.minus([e.clientX, e.clientY], this.getPoolFix());\r\n        const mousePosition: Vec2 = [e.clientX, e.clientY];\r\n        return {\r\n            mousePosition,\r\n            node,\r\n            nativeEvent: e,\r\n        };\r\n    }\r\n\r\n    private pointerMoving: boolean = false;\r\n\r\n    onMouseDown = (e: MouseEvent, uid?: number) => {\r\n        this.pointerMoving = false;\r\n        this.tool?.onStart(this.getToolEvent(e, uid));\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseMove = (e: MouseEvent, uid?: number) => {\r\n        this.pointerMoving = true;\r\n        this.tool?.onMove(this.getToolEvent(e, uid));\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseUp = (e: MouseEvent, uid?: number) => {\r\n        const ev = this.getToolEvent(e, uid);\r\n        if (this.pointerMoving) {\r\n            this.tool?.onMove(ev);\r\n        }\r\n        this.tool?.onEnd(ev);\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    onMouseLeave = (e: MouseEvent, uid?: number) => {\r\n        this.onMouseUp(e, uid);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 坐标变换\r\n\r\n    // 把数据里的坐标转换为在.pool DOM元素种像素为单位的坐标\r\n    pool2pixel(poolCoord: Vec2): Vec2 {\r\n        return Vec2Util.add(poolCoord, this.getAnchor());\r\n    }\r\n\r\n    // 在.pool DOM元素种像素为单位的坐标转换为把数据里的坐标\r\n    pixel2pool(pixelCoord: Vec2): Vec2 {\r\n        return Vec2Util.minus(Vec2Util.minus(pixelCoord, this.getAnchor()), this.getPoolFix());\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 持久化\r\n\r\n    buildPool(): MindNodePool {\r\n        return {\r\n            uidCounter: this.state.uidCounter,\r\n            offset: this.state.offset,\r\n            scale: this.state.scale,\r\n            nodes: Array.from(this.nodes.values()),\r\n        };\r\n    }\r\n\r\n    resolveTextDataString(dataString: string) {\r\n        try {\r\n            const raw = JSON.parse(dataString);\r\n\r\n            const pool: MindNodePool = loadPool(raw);\r\n\r\n            this.nodes.clear();\r\n            this.nodeCardRects.clear();\r\n            this.selectedNodeUids.clear();\r\n            pool.nodes.forEach(it => this.nodes.set(it.uid, it));\r\n\r\n            this.setState(() => ({\r\n                uidCounter: pool.uidCounter,\r\n                offset: pool.offset,\r\n                nodes: pool.nodes,\r\n                scale: pool.scale,\r\n            }));\r\n            this.uidCounter = pool.uidCounter;\r\n        } catch (e) {\r\n            alert('解析数据失败！');\r\n        }\r\n    }\r\n\r\n    load = () => {\r\n        const persistence: DataPersistence | null = this.persistenceRef.current;\r\n        if (!persistence) {\r\n            console.log('Persistence does not exist');\r\n            return;\r\n        }\r\n        persistence.load()\r\n            .then(dataString => {\r\n                console.log(\"Load succeeded.\");\r\n                this.resolveTextDataString(dataString);\r\n            })\r\n            .catch(e => {\r\n                alert('获取数据失败！');\r\n                console.error('Load data failed', e);\r\n            });\r\n    }\r\n\r\n    save = () => {\r\n        const persistence: DataPersistence | null = this.persistenceRef.current;\r\n        if (!persistence) {\r\n            console.log('Persistence does not exist');\r\n            return;\r\n        }\r\n        const pool: MindNodePool = this.buildPool();\r\n        // console.log(pool);\r\n        const lastSavedTime: Date = new Date();\r\n        const dataString = JSON.stringify(pool);\r\n        persistence.save(dataString)\r\n            .then((succeeded) => {\r\n                if (succeeded) {\r\n                    console.log(\"Save succeeded.\");\r\n                    this.setState(() => ({ lastSavedTime }));\r\n                } else {\r\n                    console.error(\"Save failed.\");\r\n                }\r\n            }).catch(e => {\r\n                console.error(\"Save failed:\", e);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 节点选择相关\r\n\r\n    setNodeChoosen = (uid: number, value: boolean) => {\r\n        if (value) {\r\n            this.selectedNodeUids.add(uid);\r\n        } else {\r\n            this.selectedNodeUids.delete(uid);\r\n        }\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    unchooseAllNodes = () => {\r\n        this.selectedNodeUids.clear();\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    deleteSelectedNodes = () => {\r\n        this.selectedNodeUids.forEach(uid => {\r\n            this.nodeCardRects.delete(uid);\r\n            const node = this.nodes.get(uid);\r\n            this.nodes.delete(uid);\r\n            if (node) {\r\n                arrayFilterNonNull<MindNode>(node.outPorts.map(ou => this.nodes.get(ou))).forEach(dst => unlinkNodes(node, dst));\r\n                arrayFilterNonNull<MindNode>(node.inPorts.map(iu => this.nodes.get(iu))).forEach(src => unlinkNodes(src, node));\r\n            }\r\n        });\r\n        this.selectedNodeUids.clear();\r\n        this.notifyUpdate();\r\n    }\r\n\r\n    //#endregion\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}